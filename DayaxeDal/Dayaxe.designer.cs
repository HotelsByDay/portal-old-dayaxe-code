#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DayaxeDal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_dayaxestage")]
	public partial class DayaxeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogs(Logs instance);
    partial void UpdateLogs(Logs instance);
    partial void DeleteLogs(Logs instance);
    partial void InsertPolicies(Policies instance);
    partial void UpdatePolicies(Policies instance);
    partial void DeletePolicies(Policies instance);
    partial void InsertMarketHotels(MarketHotels instance);
    partial void UpdateMarketHotels(MarketHotels instance);
    partial void DeleteMarketHotels(MarketHotels instance);
    partial void InsertProductUpgrades(ProductUpgrades instance);
    partial void UpdateProductUpgrades(ProductUpgrades instance);
    partial void DeleteProductUpgrades(ProductUpgrades instance);
    partial void InsertDiscountBookings(DiscountBookings instance);
    partial void UpdateDiscountBookings(DiscountBookings instance);
    partial void DeleteDiscountBookings(DiscountBookings instance);
    partial void InsertBlockedDatesCustomPrice(BlockedDatesCustomPrice instance);
    partial void UpdateBlockedDatesCustomPrice(BlockedDatesCustomPrice instance);
    partial void DeleteBlockedDatesCustomPrice(BlockedDatesCustomPrice instance);
    partial void InsertProductAddOns(ProductAddOns instance);
    partial void UpdateProductAddOns(ProductAddOns instance);
    partial void DeleteProductAddOns(ProductAddOns instance);
    partial void InsertCustomerCreditLogs(CustomerCreditLogs instance);
    partial void UpdateCustomerCreditLogs(CustomerCreditLogs instance);
    partial void DeleteCustomerCreditLogs(CustomerCreditLogs instance);
    partial void InsertBookingHistories(BookingHistories instance);
    partial void UpdateBookingHistories(BookingHistories instance);
    partial void DeleteBookingHistories(BookingHistories instance);
    partial void InsertCustomerInfoSearchCriteria(CustomerInfoSearchCriteria instance);
    partial void UpdateCustomerInfoSearchCriteria(CustomerInfoSearchCriteria instance);
    partial void DeleteCustomerInfoSearchCriteria(CustomerInfoSearchCriteria instance);
    partial void InsertRevShares(RevShares instance);
    partial void UpdateRevShares(RevShares instance);
    partial void DeleteRevShares(RevShares instance);
    partial void InsertSubscriptionCycles(SubscriptionCycles instance);
    partial void UpdateSubscriptionCycles(SubscriptionCycles instance);
    partial void DeleteSubscriptionCycles(SubscriptionCycles instance);
    partial void InsertSubscriptionBookingDiscounts(SubscriptionBookingDiscounts instance);
    partial void UpdateSubscriptionBookingDiscounts(SubscriptionBookingDiscounts instance);
    partial void DeleteSubscriptionBookingDiscounts(SubscriptionBookingDiscounts instance);
    partial void InsertSubsciptionDiscountUseds(SubsciptionDiscountUseds instance);
    partial void UpdateSubsciptionDiscountUseds(SubsciptionDiscountUseds instance);
    partial void DeleteSubsciptionDiscountUseds(SubsciptionDiscountUseds instance);
    partial void InsertTaxes(Taxes instance);
    partial void UpdateTaxes(Taxes instance);
    partial void DeleteTaxes(Taxes instance);
    partial void InsertBookingConfirmationHotels(BookingConfirmationHotels instance);
    partial void UpdateBookingConfirmationHotels(BookingConfirmationHotels instance);
    partial void DeleteBookingConfirmationHotels(BookingConfirmationHotels instance);
    partial void InsertAccessRequests(AccessRequests instance);
    partial void UpdateAccessRequests(AccessRequests instance);
    partial void DeleteAccessRequests(AccessRequests instance);
    partial void InsertSiteMaps(SiteMaps instance);
    partial void UpdateSiteMaps(SiteMaps instance);
    partial void DeleteSiteMaps(SiteMaps instance);
    partial void InsertHtmlContents(HtmlContents instance);
    partial void UpdateHtmlContents(HtmlContents instance);
    partial void DeleteHtmlContents(HtmlContents instance);
    partial void InsertCustomerInfoLogs(CustomerInfoLogs instance);
    partial void UpdateCustomerInfoLogs(CustomerInfoLogs instance);
    partial void DeleteCustomerInfoLogs(CustomerInfoLogs instance);
    partial void InsertNewsletters(Newsletters instance);
    partial void UpdateNewsletters(Newsletters instance);
    partial void DeleteNewsletters(Newsletters instance);
    partial void InsertSubscriptionInvoices(SubscriptionInvoices instance);
    partial void UpdateSubscriptionInvoices(SubscriptionInvoices instance);
    partial void DeleteSubscriptionInvoices(SubscriptionInvoices instance);
    partial void InsertDistances(Distances instance);
    partial void UpdateDistances(Distances instance);
    partial void DeleteDistances(Distances instance);
    partial void InsertAmentyLists(AmentyLists instance);
    partial void UpdateAmentyLists(AmentyLists instance);
    partial void DeleteAmentyLists(AmentyLists instance);
    partial void InsertSchedules(Schedules instance);
    partial void UpdateSchedules(Schedules instance);
    partial void DeleteSchedules(Schedules instance);
    partial void InsertInvoices(Invoices instance);
    partial void UpdateInvoices(Invoices instance);
    partial void DeleteInvoices(Invoices instance);
    partial void InsertProductWaittingLists(ProductWaittingLists instance);
    partial void UpdateProductWaittingLists(ProductWaittingLists instance);
    partial void DeleteProductWaittingLists(ProductWaittingLists instance);
    partial void InsertBookingsTemps(BookingsTemps instance);
    partial void UpdateBookingsTemps(BookingsTemps instance);
    partial void DeleteBookingsTemps(BookingsTemps instance);
    partial void InsertBookings(Bookings instance);
    partial void UpdateBookings(Bookings instance);
    partial void DeleteBookings(Bookings instance);
    partial void InsertCustomerCredits(CustomerCredits instance);
    partial void UpdateCustomerCredits(CustomerCredits instance);
    partial void DeleteCustomerCredits(CustomerCredits instance);
    partial void InsertDiscounts(Discounts instance);
    partial void UpdateDiscounts(Discounts instance);
    partial void DeleteDiscounts(Discounts instance);
    partial void InsertProducts(Products instance);
    partial void UpdateProducts(Products instance);
    partial void DeleteProducts(Products instance);
    partial void InsertCustomerInfos(CustomerInfos instance);
    partial void UpdateCustomerInfos(CustomerInfos instance);
    partial void DeleteCustomerInfos(CustomerInfos instance);
    partial void InsertMarkets(Markets instance);
    partial void UpdateMarkets(Markets instance);
    partial void DeleteMarkets(Markets instance);
    partial void InsertDiscountBookingsTemps(DiscountBookingsTemps instance);
    partial void UpdateDiscountBookingsTemps(DiscountBookingsTemps instance);
    partial void DeleteDiscountBookingsTemps(DiscountBookingsTemps instance);
    partial void InsertSurveys(Surveys instance);
    partial void UpdateSurveys(Surveys instance);
    partial void DeleteSurveys(Surveys instance);
    partial void InsertSubscriptions(Subscriptions instance);
    partial void UpdateSubscriptions(Subscriptions instance);
    partial void DeleteSubscriptions(Subscriptions instance);
    partial void InsertDiscountProducts(DiscountProducts instance);
    partial void UpdateDiscountProducts(DiscountProducts instance);
    partial void DeleteDiscountProducts(DiscountProducts instance);
    partial void InsertDefaultPrices(DefaultPrices instance);
    partial void UpdateDefaultPrices(DefaultPrices instance);
    partial void DeleteDefaultPrices(DefaultPrices instance);
    partial void InsertProductImages(ProductImages instance);
    partial void UpdateProductImages(ProductImages instance);
    partial void DeleteProductImages(ProductImages instance);
    partial void InsertAmenties(Amenties instance);
    partial void UpdateAmenties(Amenties instance);
    partial void DeleteAmenties(Amenties instance);
    partial void InsertPhotos(Photos instance);
    partial void UpdatePhotos(Photos instance);
    partial void DeletePhotos(Photos instance);
    partial void InsertSubscriptionImages(SubscriptionImages instance);
    partial void UpdateSubscriptionImages(SubscriptionImages instance);
    partial void DeleteSubscriptionImages(SubscriptionImages instance);
    partial void InsertCustomerInfosHotels(CustomerInfosHotels instance);
    partial void UpdateCustomerInfosHotels(CustomerInfosHotels instance);
    partial void DeleteCustomerInfosHotels(CustomerInfosHotels instance);
    partial void InsertSubscriptionBookings(SubscriptionBookings instance);
    partial void UpdateSubscriptionBookings(SubscriptionBookings instance);
    partial void DeleteSubscriptionBookings(SubscriptionBookings instance);
    partial void InsertHotelPolicies(HotelPolicies instance);
    partial void UpdateHotelPolicies(HotelPolicies instance);
    partial void DeleteHotelPolicies(HotelPolicies instance);
    partial void InsertGiftCardBookings(GiftCardBookings instance);
    partial void UpdateGiftCardBookings(GiftCardBookings instance);
    partial void DeleteGiftCardBookings(GiftCardBookings instance);
    partial void InsertGiftCards(GiftCards instance);
    partial void UpdateGiftCards(GiftCards instance);
    partial void DeleteGiftCards(GiftCards instance);
    partial void InsertDiscountSubscriptions(DiscountSubscriptions instance);
    partial void UpdateDiscountSubscriptions(DiscountSubscriptions instance);
    partial void DeleteDiscountSubscriptions(DiscountSubscriptions instance);
    partial void InsertHotels(Hotels instance);
    partial void UpdateHotels(Hotels instance);
    partial void DeleteHotels(Hotels instance);
    #endregion
		
		public DayaxeDataContext() : 
				base("Data Source=AIS-408\\;Initial Catalog=db_dayaxestage;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public DayaxeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DayaxeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DayaxeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DayaxeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Logs> Logs
		{
			get
			{
				return this.GetTable<Logs>();
			}
		}
		
		public System.Data.Linq.Table<Policies> Policies
		{
			get
			{
				return this.GetTable<Policies>();
			}
		}
		
		public System.Data.Linq.Table<MarketHotels> MarketHotels
		{
			get
			{
				return this.GetTable<MarketHotels>();
			}
		}
		
		public System.Data.Linq.Table<ProductUpgrades> ProductUpgrades
		{
			get
			{
				return this.GetTable<ProductUpgrades>();
			}
		}
		
		public System.Data.Linq.Table<DiscountBookings> DiscountBookings
		{
			get
			{
				return this.GetTable<DiscountBookings>();
			}
		}
		
		public System.Data.Linq.Table<BlockedDatesCustomPrice> BlockedDatesCustomPrice
		{
			get
			{
				return this.GetTable<BlockedDatesCustomPrice>();
			}
		}
		
		public System.Data.Linq.Table<ProductAddOns> ProductAddOns
		{
			get
			{
				return this.GetTable<ProductAddOns>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCreditLogs> CustomerCreditLogs
		{
			get
			{
				return this.GetTable<CustomerCreditLogs>();
			}
		}
		
		public System.Data.Linq.Table<BookingHistories> BookingHistories
		{
			get
			{
				return this.GetTable<BookingHistories>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInfoSearchCriteria> CustomerInfoSearchCriteria
		{
			get
			{
				return this.GetTable<CustomerInfoSearchCriteria>();
			}
		}
		
		public System.Data.Linq.Table<RevShares> RevShares
		{
			get
			{
				return this.GetTable<RevShares>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionCycles> SubscriptionCycles
		{
			get
			{
				return this.GetTable<SubscriptionCycles>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionBookingDiscounts> SubscriptionBookingDiscounts
		{
			get
			{
				return this.GetTable<SubscriptionBookingDiscounts>();
			}
		}
		
		public System.Data.Linq.Table<SubsciptionDiscountUseds> SubsciptionDiscountUseds
		{
			get
			{
				return this.GetTable<SubsciptionDiscountUseds>();
			}
		}
		
		public System.Data.Linq.Table<Taxes> Taxes
		{
			get
			{
				return this.GetTable<Taxes>();
			}
		}
		
		public System.Data.Linq.Table<BookingConfirmationHotels> BookingConfirmationHotels
		{
			get
			{
				return this.GetTable<BookingConfirmationHotels>();
			}
		}
		
		public System.Data.Linq.Table<AccessRequests> AccessRequests
		{
			get
			{
				return this.GetTable<AccessRequests>();
			}
		}
		
		public System.Data.Linq.Table<SiteMaps> SiteMaps
		{
			get
			{
				return this.GetTable<SiteMaps>();
			}
		}
		
		public System.Data.Linq.Table<HtmlContents> HtmlContents
		{
			get
			{
				return this.GetTable<HtmlContents>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInfoLogs> CustomerInfoLogs
		{
			get
			{
				return this.GetTable<CustomerInfoLogs>();
			}
		}
		
		public System.Data.Linq.Table<Newsletters> Newsletters
		{
			get
			{
				return this.GetTable<Newsletters>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionInvoices> SubscriptionInvoices
		{
			get
			{
				return this.GetTable<SubscriptionInvoices>();
			}
		}
		
		public System.Data.Linq.Table<Distances> Distances
		{
			get
			{
				return this.GetTable<Distances>();
			}
		}
		
		public System.Data.Linq.Table<AmentyLists> AmentyLists
		{
			get
			{
				return this.GetTable<AmentyLists>();
			}
		}
		
		public System.Data.Linq.Table<Schedules> Schedules
		{
			get
			{
				return this.GetTable<Schedules>();
			}
		}
		
		public System.Data.Linq.Table<Invoices> Invoices
		{
			get
			{
				return this.GetTable<Invoices>();
			}
		}
		
		public System.Data.Linq.Table<ProductWaittingLists> ProductWaittingLists
		{
			get
			{
				return this.GetTable<ProductWaittingLists>();
			}
		}
		
		public System.Data.Linq.Table<BookingsTemps> BookingsTemps
		{
			get
			{
				return this.GetTable<BookingsTemps>();
			}
		}
		
		public System.Data.Linq.Table<Bookings> Bookings
		{
			get
			{
				return this.GetTable<Bookings>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCredits> CustomerCredits
		{
			get
			{
				return this.GetTable<CustomerCredits>();
			}
		}
		
		public System.Data.Linq.Table<Discounts> Discounts
		{
			get
			{
				return this.GetTable<Discounts>();
			}
		}
		
		public System.Data.Linq.Table<Products> Products
		{
			get
			{
				return this.GetTable<Products>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInfos> CustomerInfos
		{
			get
			{
				return this.GetTable<CustomerInfos>();
			}
		}
		
		public System.Data.Linq.Table<Markets> Markets
		{
			get
			{
				return this.GetTable<Markets>();
			}
		}
		
		public System.Data.Linq.Table<DiscountBookingsTemps> DiscountBookingsTemps
		{
			get
			{
				return this.GetTable<DiscountBookingsTemps>();
			}
		}
		
		public System.Data.Linq.Table<Surveys> Surveys
		{
			get
			{
				return this.GetTable<Surveys>();
			}
		}
		
		public System.Data.Linq.Table<Subscriptions> Subscriptions
		{
			get
			{
				return this.GetTable<Subscriptions>();
			}
		}
		
		public System.Data.Linq.Table<DiscountProducts> DiscountProducts
		{
			get
			{
				return this.GetTable<DiscountProducts>();
			}
		}
		
		public System.Data.Linq.Table<DefaultPrices> DefaultPrices
		{
			get
			{
				return this.GetTable<DefaultPrices>();
			}
		}
		
		public System.Data.Linq.Table<ProductImages> ProductImages
		{
			get
			{
				return this.GetTable<ProductImages>();
			}
		}
		
		public System.Data.Linq.Table<Amenties> Amenties
		{
			get
			{
				return this.GetTable<Amenties>();
			}
		}
		
		public System.Data.Linq.Table<Photos> Photos
		{
			get
			{
				return this.GetTable<Photos>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionImages> SubscriptionImages
		{
			get
			{
				return this.GetTable<SubscriptionImages>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInfosHotels> CustomerInfosHotels
		{
			get
			{
				return this.GetTable<CustomerInfosHotels>();
			}
		}
		
		public System.Data.Linq.Table<SubscriptionBookings> SubscriptionBookings
		{
			get
			{
				return this.GetTable<SubscriptionBookings>();
			}
		}
		
		public System.Data.Linq.Table<HotelPolicies> HotelPolicies
		{
			get
			{
				return this.GetTable<HotelPolicies>();
			}
		}
		
		public System.Data.Linq.Table<GiftCardBookings> GiftCardBookings
		{
			get
			{
				return this.GetTable<GiftCardBookings>();
			}
		}
		
		public System.Data.Linq.Table<GiftCards> GiftCards
		{
			get
			{
				return this.GetTable<GiftCards>();
			}
		}
		
		public System.Data.Linq.Table<DiscountSubscriptions> DiscountSubscriptions
		{
			get
			{
				return this.GetTable<DiscountSubscriptions>();
			}
		}
		
		public System.Data.Linq.Table<Hotels> Hotels
		{
			get
			{
				return this.GetTable<Hotels>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Logs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LogKey;
		
		private string _UpdatedContent;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLogKeyChanging(string value);
    partial void OnLogKeyChanged();
    partial void OnUpdatedContentChanging(string value);
    partial void OnUpdatedContentChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Logs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogKey", DbType="NVarChar(250)")]
		public string LogKey
		{
			get
			{
				return this._LogKey;
			}
			set
			{
				if ((this._LogKey != value))
				{
					this.OnLogKeyChanging(value);
					this.SendPropertyChanging();
					this._LogKey = value;
					this.SendPropertyChanged("LogKey");
					this.OnLogKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string UpdatedContent
		{
			get
			{
				return this._UpdatedContent;
			}
			set
			{
				if ((this._UpdatedContent != value))
				{
					this.OnUpdatedContentChanging(value);
					this.SendPropertyChanging();
					this._UpdatedContent = value;
					this.SendPropertyChanged("UpdatedContent");
					this.OnUpdatedContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Policies")]
	public partial class Policies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private bool _IsDelete;
		
		private EntitySet<HotelPolicies> _HotelPolicies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Policies()
		{
			this._HotelPolicies = new EntitySet<HotelPolicies>(new Action<HotelPolicies>(this.attach_HotelPolicies), new Action<HotelPolicies>(this.detach_HotelPolicies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Policies_HotelPolicies", Storage="_HotelPolicies", ThisKey="Id", OtherKey="PolicyId")]
		public EntitySet<HotelPolicies> HotelPolicies
		{
			get
			{
				return this._HotelPolicies;
			}
			set
			{
				this._HotelPolicies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelPolicies(HotelPolicies entity)
		{
			this.SendPropertyChanging();
			entity.Policies = this;
		}
		
		private void detach_HotelPolicies(HotelPolicies entity)
		{
			this.SendPropertyChanging();
			entity.Policies = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarketHotels")]
	public partial class MarketHotels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MarketId;
		
		private int _HotelId;
		
		private EntityRef<Markets> _Markets;
		
		private EntityRef<Hotels> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMarketIdChanging(int value);
    partial void OnMarketIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    #endregion
		
		public MarketHotels()
		{
			this._Markets = default(EntityRef<Markets>);
			this._Hotels = default(EntityRef<Hotels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketId", DbType="Int NOT NULL")]
		public int MarketId
		{
			get
			{
				return this._MarketId;
			}
			set
			{
				if ((this._MarketId != value))
				{
					if (this._Markets.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketIdChanging(value);
					this.SendPropertyChanging();
					this._MarketId = value;
					this.SendPropertyChanged("MarketId");
					this.OnMarketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markets_MarketHotels", Storage="_Markets", ThisKey="MarketId", OtherKey="Id", IsForeignKey=true)]
		public Markets Markets
		{
			get
			{
				return this._Markets.Entity;
			}
			set
			{
				Markets previousValue = this._Markets.Entity;
				if (((previousValue != value) 
							|| (this._Markets.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Markets.Entity = null;
						previousValue.MarketHotels.Remove(this);
					}
					this._Markets.Entity = value;
					if ((value != null))
					{
						value.MarketHotels.Add(this);
						this._MarketId = value.Id;
					}
					else
					{
						this._MarketId = default(int);
					}
					this.SendPropertyChanged("Markets");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_MarketHotels", Storage="_Hotels", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotels Hotels
		{
			get
			{
				return this._Hotels.Entity;
			}
			set
			{
				Hotels previousValue = this._Hotels.Entity;
				if (((previousValue != value) 
							|| (this._Hotels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotels.Entity = null;
						previousValue.MarketHotels.Remove(this);
					}
					this._Hotels.Entity = value;
					if ((value != null))
					{
						value.MarketHotels.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductUpgrades")]
	public partial class ProductUpgrades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private int _UpgradeId;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnUpgradeIdChanging(int value);
    partial void OnUpgradeIdChanged();
    #endregion
		
		public ProductUpgrades()
		{
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeId", DbType="Int NOT NULL")]
		public int UpgradeId
		{
			get
			{
				return this._UpgradeId;
			}
			set
			{
				if ((this._UpgradeId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpgradeIdChanging(value);
					this.SendPropertyChanging();
					this._UpgradeId = value;
					this.SendPropertyChanged("UpgradeId");
					this.OnUpgradeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductUpgrades", Storage="_Products", ThisKey="UpgradeId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ProductUpgrades.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ProductUpgrades.Add(this);
						this._UpgradeId = value.ProductId;
					}
					else
					{
						this._UpgradeId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiscountBookings")]
	public partial class DiscountBookings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountId;
		
		private int _BookingId;
		
		private int _ProductId;
		
		private EntityRef<Bookings> _Bookings;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    #endregion
		
		public DiscountBookings()
		{
			this._Bookings = default(EntityRef<Bookings>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					if (this._Bookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_DiscountBookings", Storage="_Bookings", ThisKey="BookingId", OtherKey="BookingId", IsForeignKey=true)]
		public Bookings Bookings
		{
			get
			{
				return this._Bookings.Entity;
			}
			set
			{
				Bookings previousValue = this._Bookings.Entity;
				if (((previousValue != value) 
							|| (this._Bookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bookings.Entity = null;
						previousValue.DiscountBookings.Remove(this);
					}
					this._Bookings.Entity = value;
					if ((value != null))
					{
						value.DiscountBookings.Add(this);
						this._BookingId = value.BookingId;
					}
					else
					{
						this._BookingId = default(int);
					}
					this.SendPropertyChanged("Bookings");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_DiscountBookings", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.DiscountBookings.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.DiscountBookings.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlockedDatesCustomPrice")]
	public partial class BlockedDatesCustomPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BlockedDateId;
		
		private int _ProductId;
		
		private System.DateTime _Date;
		
		private double _RegularPrice;
		
		private double _DiscountPrice;
		
		private System.Nullable<int> _Capacity;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBlockedDateIdChanging(int value);
    partial void OnBlockedDateIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnRegularPriceChanging(double value);
    partial void OnRegularPriceChanged();
    partial void OnDiscountPriceChanging(double value);
    partial void OnDiscountPriceChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    #endregion
		
		public BlockedDatesCustomPrice()
		{
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockedDateId", DbType="Int NOT NULL")]
		public int BlockedDateId
		{
			get
			{
				return this._BlockedDateId;
			}
			set
			{
				if ((this._BlockedDateId != value))
				{
					this.OnBlockedDateIdChanging(value);
					this.SendPropertyChanging();
					this._BlockedDateId = value;
					this.SendPropertyChanged("BlockedDateId");
					this.OnBlockedDateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularPrice", DbType="Float NOT NULL")]
		public double RegularPrice
		{
			get
			{
				return this._RegularPrice;
			}
			set
			{
				if ((this._RegularPrice != value))
				{
					this.OnRegularPriceChanging(value);
					this.SendPropertyChanging();
					this._RegularPrice = value;
					this.SendPropertyChanged("RegularPrice");
					this.OnRegularPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPrice", DbType="Float NOT NULL")]
		public double DiscountPrice
		{
			get
			{
				return this._DiscountPrice;
			}
			set
			{
				if ((this._DiscountPrice != value))
				{
					this.OnDiscountPriceChanging(value);
					this.SendPropertyChanging();
					this._DiscountPrice = value;
					this.SendPropertyChanged("DiscountPrice");
					this.OnDiscountPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_BlockedDatesCustomPrice", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.BlockedDatesCustomPrice.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.BlockedDatesCustomPrice.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductAddOns")]
	public partial class ProductAddOns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private int _AddOnId;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnAddOnIdChanging(int value);
    partial void OnAddOnIdChanged();
    #endregion
		
		public ProductAddOns()
		{
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnId", DbType="Int NOT NULL")]
		public int AddOnId
		{
			get
			{
				return this._AddOnId;
			}
			set
			{
				if ((this._AddOnId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddOnIdChanging(value);
					this.SendPropertyChanging();
					this._AddOnId = value;
					this.SendPropertyChanged("AddOnId");
					this.OnAddOnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductAddOns", Storage="_Products", ThisKey="AddOnId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ProductAddOns.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ProductAddOns.Add(this);
						this._AddOnId = value.ProductId;
					}
					else
					{
						this._AddOnId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerCreditLogs")]
	public partial class CustomerCreditLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CustomerId;
		
		private int _ReferralId;
		
		private int _ProductId;
		
		private string _Description;
		
		private byte _CreditType;
		
		private double _Amount;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private int _BookingId;
		
		private bool _Status;
		
		private int _GiftCardId;
		
		private int _SubscriptionId;
		
		private int _SubscriptionBookingId;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnReferralIdChanging(int value);
    partial void OnReferralIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreditTypeChanging(byte value);
    partial void OnCreditTypeChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnGiftCardIdChanging(int value);
    partial void OnGiftCardIdChanged();
    partial void OnSubscriptionIdChanging(int value);
    partial void OnSubscriptionIdChanged();
    partial void OnSubscriptionBookingIdChanging(int value);
    partial void OnSubscriptionBookingIdChanged();
    #endregion
		
		public CustomerCreditLogs()
		{
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralId", DbType="Int NOT NULL")]
		public int ReferralId
		{
			get
			{
				return this._ReferralId;
			}
			set
			{
				if ((this._ReferralId != value))
				{
					this.OnReferralIdChanging(value);
					this.SendPropertyChanging();
					this._ReferralId = value;
					this.SendPropertyChanged("ReferralId");
					this.OnReferralIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditType", DbType="TinyInt NOT NULL")]
		public byte CreditType
		{
			get
			{
				return this._CreditType;
			}
			set
			{
				if ((this._CreditType != value))
				{
					this.OnCreditTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditType = value;
					this.SendPropertyChanged("CreditType");
					this.OnCreditTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCardId", DbType="Int NOT NULL")]
		public int GiftCardId
		{
			get
			{
				return this._GiftCardId;
			}
			set
			{
				if ((this._GiftCardId != value))
				{
					this.OnGiftCardIdChanging(value);
					this.SendPropertyChanging();
					this._GiftCardId = value;
					this.SendPropertyChanged("GiftCardId");
					this.OnGiftCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="Int NOT NULL")]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionBookingId", DbType="Int NOT NULL")]
		public int SubscriptionBookingId
		{
			get
			{
				return this._SubscriptionBookingId;
			}
			set
			{
				if ((this._SubscriptionBookingId != value))
				{
					this.OnSubscriptionBookingIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionBookingId = value;
					this.SendPropertyChanged("SubscriptionBookingId");
					this.OnSubscriptionBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerCreditLogs", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.CustomerCreditLogs.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.CustomerCreditLogs.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingHistories")]
	public partial class BookingHistories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BookingId;
		
		private int _PassStatus;
		
		private System.Nullable<System.DateTime> _CheckinDate;
		
		private System.Nullable<System.DateTime> _RedeemedDate;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
		private int _Quantity;
		
		private double _HotelPrice;
		
		private double _MerchantPrice;
		
		private double _TotalPrice;
		
		private int _DiscountId;
		
		private string _DiscountCode;
		
		private short _PaymentType;
		
		private double _PayByCredit;
		
		private string _StripeCardString;
		
		private EntityRef<Bookings> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnPassStatusChanging(int value);
    partial void OnPassStatusChanged();
    partial void OnCheckinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckinDateChanged();
    partial void OnRedeemedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRedeemedDateChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnHotelPriceChanging(double value);
    partial void OnHotelPriceChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountCodeChanging(string value);
    partial void OnDiscountCodeChanged();
    partial void OnPaymentTypeChanging(short value);
    partial void OnPaymentTypeChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    partial void OnStripeCardStringChanging(string value);
    partial void OnStripeCardStringChanged();
    #endregion
		
		public BookingHistories()
		{
			this._Bookings = default(EntityRef<Bookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					if (this._Bookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassStatus", DbType="Int NOT NULL")]
		public int PassStatus
		{
			get
			{
				return this._PassStatus;
			}
			set
			{
				if ((this._PassStatus != value))
				{
					this.OnPassStatusChanging(value);
					this.SendPropertyChanging();
					this._PassStatus = value;
					this.SendPropertyChanged("PassStatus");
					this.OnPassStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckinDate
		{
			get
			{
				return this._CheckinDate;
			}
			set
			{
				if ((this._CheckinDate != value))
				{
					this.OnCheckinDateChanging(value);
					this.SendPropertyChanging();
					this._CheckinDate = value;
					this.SendPropertyChanged("CheckinDate");
					this.OnCheckinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedeemedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RedeemedDate
		{
			get
			{
				return this._RedeemedDate;
			}
			set
			{
				if ((this._RedeemedDate != value))
				{
					this.OnRedeemedDateChanging(value);
					this.SendPropertyChanging();
					this._RedeemedDate = value;
					this.SendPropertyChanged("RedeemedDate");
					this.OnRedeemedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelPrice", DbType="Float NOT NULL")]
		public double HotelPrice
		{
			get
			{
				return this._HotelPrice;
			}
			set
			{
				if ((this._HotelPrice != value))
				{
					this.OnHotelPriceChanging(value);
					this.SendPropertyChanging();
					this._HotelPrice = value;
					this.SendPropertyChanged("HotelPrice");
					this.OnHotelPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCode", DbType="NVarChar(50)")]
		public string DiscountCode
		{
			get
			{
				return this._DiscountCode;
			}
			set
			{
				if ((this._DiscountCode != value))
				{
					this.OnDiscountCodeChanging(value);
					this.SendPropertyChanging();
					this._DiscountCode = value;
					this.SendPropertyChanged("DiscountCode");
					this.OnDiscountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="SmallInt NOT NULL")]
		public short PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeCardString", DbType="NVarChar(50)")]
		public string StripeCardString
		{
			get
			{
				return this._StripeCardString;
			}
			set
			{
				if ((this._StripeCardString != value))
				{
					this.OnStripeCardStringChanging(value);
					this.SendPropertyChanging();
					this._StripeCardString = value;
					this.SendPropertyChanged("StripeCardString");
					this.OnStripeCardStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_BookingHistories", Storage="_Bookings", ThisKey="BookingId", OtherKey="BookingId", IsForeignKey=true)]
		public Bookings Bookings
		{
			get
			{
				return this._Bookings.Entity;
			}
			set
			{
				Bookings previousValue = this._Bookings.Entity;
				if (((previousValue != value) 
							|| (this._Bookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bookings.Entity = null;
						previousValue.BookingHistories.Remove(this);
					}
					this._Bookings.Entity = value;
					if ((value != null))
					{
						value.BookingHistories.Add(this);
						this._BookingId = value.BookingId;
					}
					else
					{
						this._BookingId = default(int);
					}
					this.SendPropertyChanged("Bookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInfoSearchCriteria")]
	public partial class CustomerInfoSearchCriteria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CustomerId;
		
		private string _Destination;
		
		private int _TotalGuest;
		
		private bool _IsDaypass;
		
		private bool _IsCabana;
		
		private bool _IsDaybed;
		
		private bool _IsSpapass;
		
		private double _MinPrice;
		
		private double _MaxPrice;
		
		private int _MinDistance;
		
		private int _MaxDistance;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private System.DateTime _FromDate;
		
		private System.DateTime _ToDate;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnTotalGuestChanging(int value);
    partial void OnTotalGuestChanged();
    partial void OnIsDaypassChanging(bool value);
    partial void OnIsDaypassChanged();
    partial void OnIsCabanaChanging(bool value);
    partial void OnIsCabanaChanged();
    partial void OnIsDaybedChanging(bool value);
    partial void OnIsDaybedChanged();
    partial void OnIsSpapassChanging(bool value);
    partial void OnIsSpapassChanged();
    partial void OnMinPriceChanging(double value);
    partial void OnMinPriceChanged();
    partial void OnMaxPriceChanging(double value);
    partial void OnMaxPriceChanged();
    partial void OnMinDistanceChanging(int value);
    partial void OnMinDistanceChanged();
    partial void OnMaxDistanceChanging(int value);
    partial void OnMaxDistanceChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    #endregion
		
		public CustomerInfoSearchCriteria()
		{
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(200)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalGuest", DbType="Int NOT NULL")]
		public int TotalGuest
		{
			get
			{
				return this._TotalGuest;
			}
			set
			{
				if ((this._TotalGuest != value))
				{
					this.OnTotalGuestChanging(value);
					this.SendPropertyChanging();
					this._TotalGuest = value;
					this.SendPropertyChanged("TotalGuest");
					this.OnTotalGuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDaypass", DbType="Bit NOT NULL")]
		public bool IsDaypass
		{
			get
			{
				return this._IsDaypass;
			}
			set
			{
				if ((this._IsDaypass != value))
				{
					this.OnIsDaypassChanging(value);
					this.SendPropertyChanging();
					this._IsDaypass = value;
					this.SendPropertyChanged("IsDaypass");
					this.OnIsDaypassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCabana", DbType="Bit NOT NULL")]
		public bool IsCabana
		{
			get
			{
				return this._IsCabana;
			}
			set
			{
				if ((this._IsCabana != value))
				{
					this.OnIsCabanaChanging(value);
					this.SendPropertyChanging();
					this._IsCabana = value;
					this.SendPropertyChanged("IsCabana");
					this.OnIsCabanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDaybed", DbType="Bit NOT NULL")]
		public bool IsDaybed
		{
			get
			{
				return this._IsDaybed;
			}
			set
			{
				if ((this._IsDaybed != value))
				{
					this.OnIsDaybedChanging(value);
					this.SendPropertyChanging();
					this._IsDaybed = value;
					this.SendPropertyChanged("IsDaybed");
					this.OnIsDaybedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpapass", DbType="Bit NOT NULL")]
		public bool IsSpapass
		{
			get
			{
				return this._IsSpapass;
			}
			set
			{
				if ((this._IsSpapass != value))
				{
					this.OnIsSpapassChanging(value);
					this.SendPropertyChanging();
					this._IsSpapass = value;
					this.SendPropertyChanged("IsSpapass");
					this.OnIsSpapassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Float NOT NULL")]
		public double MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnMinPriceChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("MinPrice");
					this.OnMinPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Float NOT NULL")]
		public double MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinDistance", DbType="Int NOT NULL")]
		public int MinDistance
		{
			get
			{
				return this._MinDistance;
			}
			set
			{
				if ((this._MinDistance != value))
				{
					this.OnMinDistanceChanging(value);
					this.SendPropertyChanging();
					this._MinDistance = value;
					this.SendPropertyChanged("MinDistance");
					this.OnMinDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDistance", DbType="Int NOT NULL")]
		public int MaxDistance
		{
			get
			{
				return this._MaxDistance;
			}
			set
			{
				if ((this._MaxDistance != value))
				{
					this.OnMaxDistanceChanging(value);
					this.SendPropertyChanging();
					this._MaxDistance = value;
					this.SendPropertyChanged("MaxDistance");
					this.OnMaxDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(20)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(20)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime NOT NULL")]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerInfoSearchCriteria", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.CustomerInfoSearchCriteria.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.CustomerInfoSearchCriteria.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RevShares")]
	public partial class RevShares : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private double _RevShareAmount;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastUpdatedDate;
		
		private int _LastUpdatedBy;
		
		private System.DateTime _EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnRevShareAmountChanging(double value);
    partial void OnRevShareAmountChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    #endregion
		
		public RevShares()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevShareAmount", DbType="Float NOT NULL")]
		public double RevShareAmount
		{
			get
			{
				return this._RevShareAmount;
			}
			set
			{
				if ((this._RevShareAmount != value))
				{
					this.OnRevShareAmountChanging(value);
					this.SendPropertyChanging();
					this._RevShareAmount = value;
					this.SendPropertyChanged("RevShareAmount");
					this.OnRevShareAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionCycles")]
	public partial class SubscriptionCycles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubscriptionBookingId;
		
		private double _Price;
		
		private double _MerchantPrice;
		
		private double _PayByCredit;
		
		private double _TotalPrice;
		
		private int _Quantity;
		
		private int _Status;
		
		private short _CycleNumber;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private string _StripeInvoiceId;
		
		private string _StripeChargeId;
		
		private string _StripeCouponId;
		
		private System.DateTime _LastUpdatedDate;
		
		private int _LastUpdatedBy;
		
		private EntitySet<SubscriptionInvoices> _SubscriptionInvoices;
		
		private EntityRef<SubscriptionBookings> _SubscriptionBookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubscriptionBookingIdChanging(int value);
    partial void OnSubscriptionBookingIdChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCycleNumberChanging(short value);
    partial void OnCycleNumberChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnStripeInvoiceIdChanging(string value);
    partial void OnStripeInvoiceIdChanged();
    partial void OnStripeChargeIdChanging(string value);
    partial void OnStripeChargeIdChanged();
    partial void OnStripeCouponIdChanging(string value);
    partial void OnStripeCouponIdChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public SubscriptionCycles()
		{
			this._SubscriptionInvoices = new EntitySet<SubscriptionInvoices>(new Action<SubscriptionInvoices>(this.attach_SubscriptionInvoices), new Action<SubscriptionInvoices>(this.detach_SubscriptionInvoices));
			this._SubscriptionBookings = default(EntityRef<SubscriptionBookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionBookingId", DbType="Int NOT NULL")]
		public int SubscriptionBookingId
		{
			get
			{
				return this._SubscriptionBookingId;
			}
			set
			{
				if ((this._SubscriptionBookingId != value))
				{
					if (this._SubscriptionBookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionBookingIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionBookingId = value;
					this.SendPropertyChanged("SubscriptionBookingId");
					this.OnSubscriptionBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleNumber", DbType="SmallInt NOT NULL")]
		public short CycleNumber
		{
			get
			{
				return this._CycleNumber;
			}
			set
			{
				if ((this._CycleNumber != value))
				{
					this.OnCycleNumberChanging(value);
					this.SendPropertyChanging();
					this._CycleNumber = value;
					this.SendPropertyChanged("CycleNumber");
					this.OnCycleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeInvoiceId", DbType="NVarChar(50)")]
		public string StripeInvoiceId
		{
			get
			{
				return this._StripeInvoiceId;
			}
			set
			{
				if ((this._StripeInvoiceId != value))
				{
					this.OnStripeInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._StripeInvoiceId = value;
					this.SendPropertyChanged("StripeInvoiceId");
					this.OnStripeInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeChargeId", DbType="NVarChar(50)")]
		public string StripeChargeId
		{
			get
			{
				return this._StripeChargeId;
			}
			set
			{
				if ((this._StripeChargeId != value))
				{
					this.OnStripeChargeIdChanging(value);
					this.SendPropertyChanging();
					this._StripeChargeId = value;
					this.SendPropertyChanged("StripeChargeId");
					this.OnStripeChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeCouponId", DbType="NVarChar(50)")]
		public string StripeCouponId
		{
			get
			{
				return this._StripeCouponId;
			}
			set
			{
				if ((this._StripeCouponId != value))
				{
					this.OnStripeCouponIdChanging(value);
					this.SendPropertyChanging();
					this._StripeCouponId = value;
					this.SendPropertyChanged("StripeCouponId");
					this.OnStripeCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionCycles_SubscriptionInvoices", Storage="_SubscriptionInvoices", ThisKey="Id", OtherKey="SubscriptionCyclesId")]
		public EntitySet<SubscriptionInvoices> SubscriptionInvoices
		{
			get
			{
				return this._SubscriptionInvoices;
			}
			set
			{
				this._SubscriptionInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionBookings_SubscriptionCycles", Storage="_SubscriptionBookings", ThisKey="SubscriptionBookingId", OtherKey="Id", IsForeignKey=true)]
		public SubscriptionBookings SubscriptionBookings
		{
			get
			{
				return this._SubscriptionBookings.Entity;
			}
			set
			{
				SubscriptionBookings previousValue = this._SubscriptionBookings.Entity;
				if (((previousValue != value) 
							|| (this._SubscriptionBookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscriptionBookings.Entity = null;
						previousValue.SubscriptionCycles.Remove(this);
					}
					this._SubscriptionBookings.Entity = value;
					if ((value != null))
					{
						value.SubscriptionCycles.Add(this);
						this._SubscriptionBookingId = value.Id;
					}
					else
					{
						this._SubscriptionBookingId = default(int);
					}
					this.SendPropertyChanged("SubscriptionBookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubscriptionInvoices(SubscriptionInvoices entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionCycles = this;
		}
		
		private void detach_SubscriptionInvoices(SubscriptionInvoices entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionCycles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionBookingDiscounts")]
	public partial class SubscriptionBookingDiscounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountId;
		
		private int _SubscriptionBookingId;
		
		private int _SubscriptionId;
		
		private EntityRef<Discounts> _Discounts;
		
		private EntityRef<Subscriptions> _Subscriptions;
		
		private EntityRef<SubscriptionBookings> _SubscriptionBookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnSubscriptionBookingIdChanging(int value);
    partial void OnSubscriptionBookingIdChanged();
    partial void OnSubscriptionIdChanging(int value);
    partial void OnSubscriptionIdChanged();
    #endregion
		
		public SubscriptionBookingDiscounts()
		{
			this._Discounts = default(EntityRef<Discounts>);
			this._Subscriptions = default(EntityRef<Subscriptions>);
			this._SubscriptionBookings = default(EntityRef<SubscriptionBookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._Discounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionBookingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubscriptionBookingId
		{
			get
			{
				return this._SubscriptionBookingId;
			}
			set
			{
				if ((this._SubscriptionBookingId != value))
				{
					if (this._SubscriptionBookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionBookingIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionBookingId = value;
					this.SendPropertyChanged("SubscriptionBookingId");
					this.OnSubscriptionBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					if (this._Subscriptions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_SubscriptionBookingDiscounts", Storage="_Discounts", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public Discounts Discounts
		{
			get
			{
				return this._Discounts.Entity;
			}
			set
			{
				Discounts previousValue = this._Discounts.Entity;
				if (((previousValue != value) 
							|| (this._Discounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discounts.Entity = null;
						previousValue.SubscriptionBookingDiscounts.Remove(this);
					}
					this._Discounts.Entity = value;
					if ((value != null))
					{
						value.SubscriptionBookingDiscounts.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("Discounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_SubscriptionBookingDiscounts", Storage="_Subscriptions", ThisKey="SubscriptionId", OtherKey="Id", IsForeignKey=true)]
		public Subscriptions Subscriptions
		{
			get
			{
				return this._Subscriptions.Entity;
			}
			set
			{
				Subscriptions previousValue = this._Subscriptions.Entity;
				if (((previousValue != value) 
							|| (this._Subscriptions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriptions.Entity = null;
						previousValue.SubscriptionBookingDiscounts.Remove(this);
					}
					this._Subscriptions.Entity = value;
					if ((value != null))
					{
						value.SubscriptionBookingDiscounts.Add(this);
						this._SubscriptionId = value.Id;
					}
					else
					{
						this._SubscriptionId = default(int);
					}
					this.SendPropertyChanged("Subscriptions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionBookings_SubscriptionBookingDiscounts", Storage="_SubscriptionBookings", ThisKey="SubscriptionBookingId", OtherKey="Id", IsForeignKey=true)]
		public SubscriptionBookings SubscriptionBookings
		{
			get
			{
				return this._SubscriptionBookings.Entity;
			}
			set
			{
				SubscriptionBookings previousValue = this._SubscriptionBookings.Entity;
				if (((previousValue != value) 
							|| (this._SubscriptionBookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscriptionBookings.Entity = null;
						previousValue.SubscriptionBookingDiscounts.Remove(this);
					}
					this._SubscriptionBookings.Entity = value;
					if ((value != null))
					{
						value.SubscriptionBookingDiscounts.Add(this);
						this._SubscriptionBookingId = value.Id;
					}
					else
					{
						this._SubscriptionBookingId = default(int);
					}
					this.SendPropertyChanged("SubscriptionBookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubsciptionDiscountUsed")]
	public partial class SubsciptionDiscountUseds : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubscriptionBookingId;
		
		private int _DiscountId;
		
		private int _CustomerId;
		
		private EntityRef<Discounts> _Discounts;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
		private EntityRef<SubscriptionBookings> _SubscriptionBookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriptionBookingIdChanging(int value);
    partial void OnSubscriptionBookingIdChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    #endregion
		
		public SubsciptionDiscountUseds()
		{
			this._Discounts = default(EntityRef<Discounts>);
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			this._SubscriptionBookings = default(EntityRef<SubscriptionBookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionBookingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubscriptionBookingId
		{
			get
			{
				return this._SubscriptionBookingId;
			}
			set
			{
				if ((this._SubscriptionBookingId != value))
				{
					if (this._SubscriptionBookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionBookingIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionBookingId = value;
					this.SendPropertyChanged("SubscriptionBookingId");
					this.OnSubscriptionBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._Discounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_SubsciptionDiscountUseds", Storage="_Discounts", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public Discounts Discounts
		{
			get
			{
				return this._Discounts.Entity;
			}
			set
			{
				Discounts previousValue = this._Discounts.Entity;
				if (((previousValue != value) 
							|| (this._Discounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discounts.Entity = null;
						previousValue.SubsciptionDiscountUseds.Remove(this);
					}
					this._Discounts.Entity = value;
					if ((value != null))
					{
						value.SubsciptionDiscountUseds.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("Discounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_SubsciptionDiscountUseds", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.SubsciptionDiscountUseds.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.SubsciptionDiscountUseds.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionBookings_SubsciptionDiscountUseds", Storage="_SubscriptionBookings", ThisKey="SubscriptionBookingId", OtherKey="Id", IsForeignKey=true)]
		public SubscriptionBookings SubscriptionBookings
		{
			get
			{
				return this._SubscriptionBookings.Entity;
			}
			set
			{
				SubscriptionBookings previousValue = this._SubscriptionBookings.Entity;
				if (((previousValue != value) 
							|| (this._SubscriptionBookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscriptionBookings.Entity = null;
						previousValue.SubsciptionDiscountUseds.Remove(this);
					}
					this._SubscriptionBookings.Entity = value;
					if ((value != null))
					{
						value.SubsciptionDiscountUseds.Add(this);
						this._SubscriptionBookingId = value.Id;
					}
					else
					{
						this._SubscriptionBookingId = default(int);
					}
					this.SendPropertyChanged("SubscriptionBookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxes")]
	public partial class Taxes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _HotelId;
		
		private System.DateTime _Date;
		
		private double _TaxValue;
		
		private double _MerchantPrice;
		
		private int _Quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnHotelIdChanging(long value);
    partial void OnHotelIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTaxValueChanging(double value);
    partial void OnTaxValueChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public Taxes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="BigInt NOT NULL")]
		public long HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxValue", DbType="Float NOT NULL")]
		public double TaxValue
		{
			get
			{
				return this._TaxValue;
			}
			set
			{
				if ((this._TaxValue != value))
				{
					this.OnTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TaxValue = value;
					this.SendPropertyChanged("TaxValue");
					this.OnTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingConfirmationHotels")]
	public partial class BookingConfirmationHotels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BookingId;
		
		private string _UserEmail;
		
		private string _HotelName;
		
		private string _FullName;
		
		private string _BookedDate;
		
		private string _BlackoutDays;
		
		private string _ExpiredDate;
		
		private string _RedeemedDate;
		
		private string _BookingCode;
		
		private string _EmailBccList;
		
		private string _MaxPerTicket;
		
		private string _Tickets;
		
		private EntityRef<Bookings> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnHotelNameChanging(string value);
    partial void OnHotelNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBookedDateChanging(string value);
    partial void OnBookedDateChanged();
    partial void OnBlackoutDaysChanging(string value);
    partial void OnBlackoutDaysChanged();
    partial void OnExpiredDateChanging(string value);
    partial void OnExpiredDateChanged();
    partial void OnRedeemedDateChanging(string value);
    partial void OnRedeemedDateChanged();
    partial void OnBookingCodeChanging(string value);
    partial void OnBookingCodeChanged();
    partial void OnEmailBccListChanging(string value);
    partial void OnEmailBccListChanged();
    partial void OnMaxPerTicketChanging(string value);
    partial void OnMaxPerTicketChanged();
    partial void OnTicketsChanging(string value);
    partial void OnTicketsChanged();
    #endregion
		
		public BookingConfirmationHotels()
		{
			this._Bookings = default(EntityRef<Bookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					if (this._Bookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="NVarChar(200)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelName", DbType="NVarChar(500)")]
		public string HotelName
		{
			get
			{
				return this._HotelName;
			}
			set
			{
				if ((this._HotelName != value))
				{
					this.OnHotelNameChanging(value);
					this.SendPropertyChanging();
					this._HotelName = value;
					this.SendPropertyChanged("HotelName");
					this.OnHotelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="NVarChar(30)")]
		public string BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlackoutDays", DbType="NVarChar(1000)")]
		public string BlackoutDays
		{
			get
			{
				return this._BlackoutDays;
			}
			set
			{
				if ((this._BlackoutDays != value))
				{
					this.OnBlackoutDaysChanging(value);
					this.SendPropertyChanging();
					this._BlackoutDays = value;
					this.SendPropertyChanged("BlackoutDays");
					this.OnBlackoutDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="NVarChar(30)")]
		public string ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedeemedDate", DbType="NVarChar(30)")]
		public string RedeemedDate
		{
			get
			{
				return this._RedeemedDate;
			}
			set
			{
				if ((this._RedeemedDate != value))
				{
					this.OnRedeemedDateChanging(value);
					this.SendPropertyChanging();
					this._RedeemedDate = value;
					this.SendPropertyChanged("RedeemedDate");
					this.OnRedeemedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingCode", DbType="NVarChar(50)")]
		public string BookingCode
		{
			get
			{
				return this._BookingCode;
			}
			set
			{
				if ((this._BookingCode != value))
				{
					this.OnBookingCodeChanging(value);
					this.SendPropertyChanging();
					this._BookingCode = value;
					this.SendPropertyChanged("BookingCode");
					this.OnBookingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailBccList", DbType="NVarChar(1000)")]
		public string EmailBccList
		{
			get
			{
				return this._EmailBccList;
			}
			set
			{
				if ((this._EmailBccList != value))
				{
					this.OnEmailBccListChanging(value);
					this.SendPropertyChanging();
					this._EmailBccList = value;
					this.SendPropertyChanged("EmailBccList");
					this.OnEmailBccListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPerTicket", DbType="NVarChar(50)")]
		public string MaxPerTicket
		{
			get
			{
				return this._MaxPerTicket;
			}
			set
			{
				if ((this._MaxPerTicket != value))
				{
					this.OnMaxPerTicketChanging(value);
					this.SendPropertyChanging();
					this._MaxPerTicket = value;
					this.SendPropertyChanged("MaxPerTicket");
					this.OnMaxPerTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tickets", DbType="NVarChar(5)")]
		public string Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				if ((this._Tickets != value))
				{
					this.OnTicketsChanging(value);
					this.SendPropertyChanging();
					this._Tickets = value;
					this.SendPropertyChanged("Tickets");
					this.OnTicketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_BookingConfirmationHotels", Storage="_Bookings", ThisKey="BookingId", OtherKey="BookingId", IsForeignKey=true)]
		public Bookings Bookings
		{
			get
			{
				return this._Bookings.Entity;
			}
			set
			{
				Bookings previousValue = this._Bookings.Entity;
				if (((previousValue != value) 
							|| (this._Bookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bookings.Entity = null;
						previousValue.BookingConfirmationHotels.Remove(this);
					}
					this._Bookings.Entity = value;
					if ((value != null))
					{
						value.BookingConfirmationHotels.Add(this);
						this._BookingId = value.BookingId;
					}
					else
					{
						this._BookingId = default(int);
					}
					this.SendPropertyChanged("Bookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessRequests")]
	public partial class AccessRequests : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestId;
		
		private int _HotelId;
		
		private string _Email;
		
		private int _CustomerId;
		
		private System.DateTime _RequestedDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnRequestedDateTimeChanging(System.DateTime value);
    partial void OnRequestedDateTimeChanged();
    #endregion
		
		public AccessRequests()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime RequestedDateTime
		{
			get
			{
				return this._RequestedDateTime;
			}
			set
			{
				if ((this._RequestedDateTime != value))
				{
					this.OnRequestedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedDateTime = value;
					this.SendPropertyChanged("RequestedDateTime");
					this.OnRequestedDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteMaps")]
	public partial class SiteMaps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _UrlSegment;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<bool> _IsGroup;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsHomePage;
		
		private System.Nullable<int> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlSegmentChanging(string value);
    partial void OnUrlSegmentChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnIsGroupChanging(System.Nullable<bool> value);
    partial void OnIsGroupChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsHomePageChanging(System.Nullable<bool> value);
    partial void OnIsHomePageChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    #endregion
		
		public SiteMaps()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlSegment", DbType="NVarChar(100)")]
		public string UrlSegment
		{
			get
			{
				return this._UrlSegment;
			}
			set
			{
				if ((this._UrlSegment != value))
				{
					this.OnUrlSegmentChanging(value);
					this.SendPropertyChanging();
					this._UrlSegment = value;
					this.SendPropertyChanged("UrlSegment");
					this.OnUrlSegmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGroup", DbType="Bit")]
		public System.Nullable<bool> IsGroup
		{
			get
			{
				return this._IsGroup;
			}
			set
			{
				if ((this._IsGroup != value))
				{
					this.OnIsGroupChanging(value);
					this.SendPropertyChanging();
					this._IsGroup = value;
					this.SendPropertyChanged("IsGroup");
					this.OnIsGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHomePage", DbType="Bit")]
		public System.Nullable<bool> IsHomePage
		{
			get
			{
				return this._IsHomePage;
			}
			set
			{
				if ((this._IsHomePage != value))
				{
					this.OnIsHomePageChanging(value);
					this.SendPropertyChanging();
					this._IsHomePage = value;
					this.SendPropertyChanged("IsHomePage");
					this.OnIsHomePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HtmlContents")]
	public partial class HtmlContents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContentId;
		
		private System.Nullable<int> _SiteMapId;
		
		private string _Data;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _Title;
		
		private string _ScriptAnalyticsHeader;
		
		private string _ScriptContent;
		
		private string _BodyClass;
		
		private string _MetaDescription;
		
		private string _MetaKeyword;
		
		private string _ImageLandingDesktop;
		
		private string _ImageLandingMobile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentIdChanging(int value);
    partial void OnContentIdChanged();
    partial void OnSiteMapIdChanging(System.Nullable<int> value);
    partial void OnSiteMapIdChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnScriptAnalyticsHeaderChanging(string value);
    partial void OnScriptAnalyticsHeaderChanged();
    partial void OnScriptContentChanging(string value);
    partial void OnScriptContentChanged();
    partial void OnBodyClassChanging(string value);
    partial void OnBodyClassChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    partial void OnImageLandingDesktopChanging(string value);
    partial void OnImageLandingDesktopChanged();
    partial void OnImageLandingMobileChanging(string value);
    partial void OnImageLandingMobileChanged();
    #endregion
		
		public HtmlContents()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContentId
		{
			get
			{
				return this._ContentId;
			}
			set
			{
				if ((this._ContentId != value))
				{
					this.OnContentIdChanging(value);
					this.SendPropertyChanging();
					this._ContentId = value;
					this.SendPropertyChanged("ContentId");
					this.OnContentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMapId", DbType="Int")]
		public System.Nullable<int> SiteMapId
		{
			get
			{
				return this._SiteMapId;
			}
			set
			{
				if ((this._SiteMapId != value))
				{
					this.OnSiteMapIdChanging(value);
					this.SendPropertyChanging();
					this._SiteMapId = value;
					this.SendPropertyChanged("SiteMapId");
					this.OnSiteMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptAnalyticsHeader", DbType="NVarChar(4000)")]
		public string ScriptAnalyticsHeader
		{
			get
			{
				return this._ScriptAnalyticsHeader;
			}
			set
			{
				if ((this._ScriptAnalyticsHeader != value))
				{
					this.OnScriptAnalyticsHeaderChanging(value);
					this.SendPropertyChanging();
					this._ScriptAnalyticsHeader = value;
					this.SendPropertyChanged("ScriptAnalyticsHeader");
					this.OnScriptAnalyticsHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptContent", DbType="NVarChar(4000)")]
		public string ScriptContent
		{
			get
			{
				return this._ScriptContent;
			}
			set
			{
				if ((this._ScriptContent != value))
				{
					this.OnScriptContentChanging(value);
					this.SendPropertyChanging();
					this._ScriptContent = value;
					this.SendPropertyChanged("ScriptContent");
					this.OnScriptContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyClass", DbType="NVarChar(100)")]
		public string BodyClass
		{
			get
			{
				return this._BodyClass;
			}
			set
			{
				if ((this._BodyClass != value))
				{
					this.OnBodyClassChanging(value);
					this.SendPropertyChanging();
					this._BodyClass = value;
					this.SendPropertyChanged("BodyClass");
					this.OnBodyClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(4000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NVarChar(4000)")]
		public string MetaKeyword
		{
			get
			{
				return this._MetaKeyword;
			}
			set
			{
				if ((this._MetaKeyword != value))
				{
					this.OnMetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._MetaKeyword = value;
					this.SendPropertyChanged("MetaKeyword");
					this.OnMetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLandingDesktop", DbType="NVarChar(500)")]
		public string ImageLandingDesktop
		{
			get
			{
				return this._ImageLandingDesktop;
			}
			set
			{
				if ((this._ImageLandingDesktop != value))
				{
					this.OnImageLandingDesktopChanging(value);
					this.SendPropertyChanging();
					this._ImageLandingDesktop = value;
					this.SendPropertyChanged("ImageLandingDesktop");
					this.OnImageLandingDesktopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLandingMobile", DbType="NVarChar(500)")]
		public string ImageLandingMobile
		{
			get
			{
				return this._ImageLandingMobile;
			}
			set
			{
				if ((this._ImageLandingMobile != value))
				{
					this.OnImageLandingMobileChanging(value);
					this.SendPropertyChanging();
					this._ImageLandingMobile = value;
					this.SendPropertyChanged("ImageLandingMobile");
					this.OnImageLandingMobileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInfoLogs")]
	public partial class CustomerInfoLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private string _CustomerEmail;
		
		private System.Nullable<System.DateTime> _ChangedDate;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _Result;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedDateChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    #endregion
		
		public CustomerInfoLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(100)")]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedDate
		{
			get
			{
				return this._ChangedDate;
			}
			set
			{
				if ((this._ChangedDate != value))
				{
					this.OnChangedDateChanging(value);
					this.SendPropertyChanging();
					this._ChangedDate = value;
					this.SendPropertyChanged("ChangedDate");
					this.OnChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(4000)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newsletters")]
	public partial class Newsletters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Email;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Newsletters()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(1024)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionInvoices")]
	public partial class SubscriptionInvoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubscriptionCyclesId;
		
		private int _BookingStatus;
		
		private int _Quantity;
		
		private double _Price;
		
		private double _MerchantPrice;
		
		private double _PayByCredit;
		
		private double _TotalPrice;
		
		private int _InvoiceStatus;
		
		private string _StripeChargeId;
		
		private System.Nullable<double> _ChargeAmount;
		
		private string _StripeRefundId;
		
		private System.Nullable<double> _RefundCreditAmount;
		
		private System.Nullable<double> _RefundAmount;
		
		private string _StripeCouponId;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private EntityRef<SubscriptionCycles> _SubscriptionCycles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubscriptionCyclesIdChanging(int value);
    partial void OnSubscriptionCyclesIdChanged();
    partial void OnBookingStatusChanging(int value);
    partial void OnBookingStatusChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnInvoiceStatusChanging(int value);
    partial void OnInvoiceStatusChanged();
    partial void OnStripeChargeIdChanging(string value);
    partial void OnStripeChargeIdChanged();
    partial void OnChargeAmountChanging(System.Nullable<double> value);
    partial void OnChargeAmountChanged();
    partial void OnStripeRefundIdChanging(string value);
    partial void OnStripeRefundIdChanged();
    partial void OnRefundCreditAmountChanging(System.Nullable<double> value);
    partial void OnRefundCreditAmountChanged();
    partial void OnRefundAmountChanging(System.Nullable<double> value);
    partial void OnRefundAmountChanged();
    partial void OnStripeCouponIdChanging(string value);
    partial void OnStripeCouponIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
		
		public SubscriptionInvoices()
		{
			this._SubscriptionCycles = default(EntityRef<SubscriptionCycles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionCyclesId", DbType="Int NOT NULL")]
		public int SubscriptionCyclesId
		{
			get
			{
				return this._SubscriptionCyclesId;
			}
			set
			{
				if ((this._SubscriptionCyclesId != value))
				{
					if (this._SubscriptionCycles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionCyclesIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionCyclesId = value;
					this.SendPropertyChanged("SubscriptionCyclesId");
					this.OnSubscriptionCyclesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingStatus", DbType="Int NOT NULL")]
		public int BookingStatus
		{
			get
			{
				return this._BookingStatus;
			}
			set
			{
				if ((this._BookingStatus != value))
				{
					this.OnBookingStatusChanging(value);
					this.SendPropertyChanging();
					this._BookingStatus = value;
					this.SendPropertyChanged("BookingStatus");
					this.OnBookingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="Int NOT NULL")]
		public int InvoiceStatus
		{
			get
			{
				return this._InvoiceStatus;
			}
			set
			{
				if ((this._InvoiceStatus != value))
				{
					this.OnInvoiceStatusChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStatus = value;
					this.SendPropertyChanged("InvoiceStatus");
					this.OnInvoiceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeChargeId", DbType="NVarChar(50)")]
		public string StripeChargeId
		{
			get
			{
				return this._StripeChargeId;
			}
			set
			{
				if ((this._StripeChargeId != value))
				{
					this.OnStripeChargeIdChanging(value);
					this.SendPropertyChanging();
					this._StripeChargeId = value;
					this.SendPropertyChanged("StripeChargeId");
					this.OnStripeChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeAmount", DbType="Float")]
		public System.Nullable<double> ChargeAmount
		{
			get
			{
				return this._ChargeAmount;
			}
			set
			{
				if ((this._ChargeAmount != value))
				{
					this.OnChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._ChargeAmount = value;
					this.SendPropertyChanged("ChargeAmount");
					this.OnChargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeRefundId", DbType="NVarChar(50)")]
		public string StripeRefundId
		{
			get
			{
				return this._StripeRefundId;
			}
			set
			{
				if ((this._StripeRefundId != value))
				{
					this.OnStripeRefundIdChanging(value);
					this.SendPropertyChanging();
					this._StripeRefundId = value;
					this.SendPropertyChanged("StripeRefundId");
					this.OnStripeRefundIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundCreditAmount", DbType="Float")]
		public System.Nullable<double> RefundCreditAmount
		{
			get
			{
				return this._RefundCreditAmount;
			}
			set
			{
				if ((this._RefundCreditAmount != value))
				{
					this.OnRefundCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._RefundCreditAmount = value;
					this.SendPropertyChanged("RefundCreditAmount");
					this.OnRefundCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundAmount", DbType="Float")]
		public System.Nullable<double> RefundAmount
		{
			get
			{
				return this._RefundAmount;
			}
			set
			{
				if ((this._RefundAmount != value))
				{
					this.OnRefundAmountChanging(value);
					this.SendPropertyChanging();
					this._RefundAmount = value;
					this.SendPropertyChanged("RefundAmount");
					this.OnRefundAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeCouponId", DbType="NVarChar(50)")]
		public string StripeCouponId
		{
			get
			{
				return this._StripeCouponId;
			}
			set
			{
				if ((this._StripeCouponId != value))
				{
					this.OnStripeCouponIdChanging(value);
					this.SendPropertyChanging();
					this._StripeCouponId = value;
					this.SendPropertyChanged("StripeCouponId");
					this.OnStripeCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionCycles_SubscriptionInvoices", Storage="_SubscriptionCycles", ThisKey="SubscriptionCyclesId", OtherKey="Id", IsForeignKey=true)]
		public SubscriptionCycles SubscriptionCycles
		{
			get
			{
				return this._SubscriptionCycles.Entity;
			}
			set
			{
				SubscriptionCycles previousValue = this._SubscriptionCycles.Entity;
				if (((previousValue != value) 
							|| (this._SubscriptionCycles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubscriptionCycles.Entity = null;
						previousValue.SubscriptionInvoices.Remove(this);
					}
					this._SubscriptionCycles.Entity = value;
					if ((value != null))
					{
						value.SubscriptionInvoices.Add(this);
						this._SubscriptionCyclesId = value.Id;
					}
					else
					{
						this._SubscriptionCyclesId = default(int);
					}
					this.SendPropertyChanged("SubscriptionCycles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distances")]
	public partial class Distances : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BookingId;
		
		private string _EmailAddress;
		
		private string _UserZipcode;
		
		private string _HotelZipcode;
		
		private string _JsonResult;
		
		private System.Nullable<double> _DistanceKm;
		
		private System.Nullable<double> _DistanceMiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnUserZipcodeChanging(string value);
    partial void OnUserZipcodeChanged();
    partial void OnHotelZipcodeChanging(string value);
    partial void OnHotelZipcodeChanged();
    partial void OnJsonResultChanging(string value);
    partial void OnJsonResultChanged();
    partial void OnDistanceKmChanging(System.Nullable<double> value);
    partial void OnDistanceKmChanged();
    partial void OnDistanceMilesChanging(System.Nullable<double> value);
    partial void OnDistanceMilesChanged();
    #endregion
		
		public Distances()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(1024)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserZipcode", DbType="NVarChar(10)")]
		public string UserZipcode
		{
			get
			{
				return this._UserZipcode;
			}
			set
			{
				if ((this._UserZipcode != value))
				{
					this.OnUserZipcodeChanging(value);
					this.SendPropertyChanging();
					this._UserZipcode = value;
					this.SendPropertyChanged("UserZipcode");
					this.OnUserZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelZipcode", DbType="NVarChar(10)")]
		public string HotelZipcode
		{
			get
			{
				return this._HotelZipcode;
			}
			set
			{
				if ((this._HotelZipcode != value))
				{
					this.OnHotelZipcodeChanging(value);
					this.SendPropertyChanging();
					this._HotelZipcode = value;
					this.SendPropertyChanged("HotelZipcode");
					this.OnHotelZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonResult", DbType="NVarChar(MAX)")]
		public string JsonResult
		{
			get
			{
				return this._JsonResult;
			}
			set
			{
				if ((this._JsonResult != value))
				{
					this.OnJsonResultChanging(value);
					this.SendPropertyChanging();
					this._JsonResult = value;
					this.SendPropertyChanged("JsonResult");
					this.OnJsonResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceKm", DbType="Float")]
		public System.Nullable<double> DistanceKm
		{
			get
			{
				return this._DistanceKm;
			}
			set
			{
				if ((this._DistanceKm != value))
				{
					this.OnDistanceKmChanging(value);
					this.SendPropertyChanging();
					this._DistanceKm = value;
					this.SendPropertyChanged("DistanceKm");
					this.OnDistanceKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceMiles", DbType="Float")]
		public System.Nullable<double> DistanceMiles
		{
			get
			{
				return this._DistanceMiles;
			}
			set
			{
				if ((this._DistanceMiles != value))
				{
					this.OnDistanceMilesChanging(value);
					this.SendPropertyChanging();
					this._DistanceMiles = value;
					this.SendPropertyChanged("DistanceMiles");
					this.OnDistanceMilesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmentyList")]
	public partial class AmentyLists : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _AmentyTypeId;
		
		private string _Name;
		
		private System.Nullable<int> _AmentyOrder;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsAmenty;
		
		private int _AmentyId;
		
		private EntityRef<Amenties> _Amenties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAmentyTypeIdChanging(System.Nullable<int> value);
    partial void OnAmentyTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmentyOrderChanging(System.Nullable<int> value);
    partial void OnAmentyOrderChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsAmentyChanging(System.Nullable<bool> value);
    partial void OnIsAmentyChanged();
    partial void OnAmentyIdChanging(int value);
    partial void OnAmentyIdChanged();
    #endregion
		
		public AmentyLists()
		{
			this._Amenties = default(EntityRef<Amenties>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmentyTypeId", DbType="Int")]
		public System.Nullable<int> AmentyTypeId
		{
			get
			{
				return this._AmentyTypeId;
			}
			set
			{
				if ((this._AmentyTypeId != value))
				{
					this.OnAmentyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AmentyTypeId = value;
					this.SendPropertyChanged("AmentyTypeId");
					this.OnAmentyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmentyOrder", DbType="Int")]
		public System.Nullable<int> AmentyOrder
		{
			get
			{
				return this._AmentyOrder;
			}
			set
			{
				if ((this._AmentyOrder != value))
				{
					this.OnAmentyOrderChanging(value);
					this.SendPropertyChanging();
					this._AmentyOrder = value;
					this.SendPropertyChanged("AmentyOrder");
					this.OnAmentyOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAmenty", DbType="Bit")]
		public System.Nullable<bool> IsAmenty
		{
			get
			{
				return this._IsAmenty;
			}
			set
			{
				if ((this._IsAmenty != value))
				{
					this.OnIsAmentyChanging(value);
					this.SendPropertyChanging();
					this._IsAmenty = value;
					this.SendPropertyChanged("IsAmenty");
					this.OnIsAmentyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmentyId", DbType="Int NOT NULL")]
		public int AmentyId
		{
			get
			{
				return this._AmentyId;
			}
			set
			{
				if ((this._AmentyId != value))
				{
					if (this._Amenties.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmentyIdChanging(value);
					this.SendPropertyChanging();
					this._AmentyId = value;
					this.SendPropertyChanged("AmentyId");
					this.OnAmentyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Amenties_AmentyLists", Storage="_Amenties", ThisKey="AmentyId", OtherKey="Id", IsForeignKey=true)]
		public Amenties Amenties
		{
			get
			{
				return this._Amenties.Entity;
			}
			set
			{
				Amenties previousValue = this._Amenties.Entity;
				if (((previousValue != value) 
							|| (this._Amenties.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Amenties.Entity = null;
						previousValue.AmentyLists.Remove(this);
					}
					this._Amenties.Entity = value;
					if ((value != null))
					{
						value.AmentyLists.Add(this);
						this._AmentyId = value.Id;
					}
					else
					{
						this._AmentyId = default(int);
					}
					this.SendPropertyChanged("Amenties");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedules : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _LastRun;
		
		private System.Nullable<System.DateTime> _CompleteDate;
		
		private int _ScheduleSendType;
		
		private System.Nullable<int> _BookingId;
		
		private int _BookingHistoryId;
		
		private int _CustomerCreditId;
		
		private bool _IsUpdated;
		
		private int _ProductWaitingListId;
		
		private int _SubscriptionBookingId;
		
		private int _GiftCardBookingId;
		
		private System.Nullable<System.DateTime> _SendAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnLastRunChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRunChanged();
    partial void OnCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompleteDateChanged();
    partial void OnScheduleSendTypeChanging(int value);
    partial void OnScheduleSendTypeChanged();
    partial void OnBookingIdChanging(System.Nullable<int> value);
    partial void OnBookingIdChanged();
    partial void OnBookingHistoryIdChanging(int value);
    partial void OnBookingHistoryIdChanged();
    partial void OnCustomerCreditIdChanging(int value);
    partial void OnCustomerCreditIdChanged();
    partial void OnIsUpdatedChanging(bool value);
    partial void OnIsUpdatedChanged();
    partial void OnProductWaitingListIdChanging(int value);
    partial void OnProductWaitingListIdChanged();
    partial void OnSubscriptionBookingIdChanging(int value);
    partial void OnSubscriptionBookingIdChanged();
    partial void OnGiftCardBookingIdChanging(int value);
    partial void OnGiftCardBookingIdChanged();
    partial void OnSendAtChanging(System.Nullable<System.DateTime> value);
    partial void OnSendAtChanged();
    #endregion
		
		public Schedules()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRun", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRun
		{
			get
			{
				return this._LastRun;
			}
			set
			{
				if ((this._LastRun != value))
				{
					this.OnLastRunChanging(value);
					this.SendPropertyChanging();
					this._LastRun = value;
					this.SendPropertyChanged("LastRun");
					this.OnLastRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompleteDate
		{
			get
			{
				return this._CompleteDate;
			}
			set
			{
				if ((this._CompleteDate != value))
				{
					this.OnCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._CompleteDate = value;
					this.SendPropertyChanged("CompleteDate");
					this.OnCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleSendType", DbType="Int NOT NULL")]
		public int ScheduleSendType
		{
			get
			{
				return this._ScheduleSendType;
			}
			set
			{
				if ((this._ScheduleSendType != value))
				{
					this.OnScheduleSendTypeChanging(value);
					this.SendPropertyChanging();
					this._ScheduleSendType = value;
					this.SendPropertyChanged("ScheduleSendType");
					this.OnScheduleSendTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int")]
		public System.Nullable<int> BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingHistoryId", DbType="Int NOT NULL")]
		public int BookingHistoryId
		{
			get
			{
				return this._BookingHistoryId;
			}
			set
			{
				if ((this._BookingHistoryId != value))
				{
					this.OnBookingHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._BookingHistoryId = value;
					this.SendPropertyChanged("BookingHistoryId");
					this.OnBookingHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCreditId", DbType="Int NOT NULL")]
		public int CustomerCreditId
		{
			get
			{
				return this._CustomerCreditId;
			}
			set
			{
				if ((this._CustomerCreditId != value))
				{
					this.OnCustomerCreditIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerCreditId = value;
					this.SendPropertyChanged("CustomerCreditId");
					this.OnCustomerCreditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpdated", DbType="Bit NOT NULL")]
		public bool IsUpdated
		{
			get
			{
				return this._IsUpdated;
			}
			set
			{
				if ((this._IsUpdated != value))
				{
					this.OnIsUpdatedChanging(value);
					this.SendPropertyChanging();
					this._IsUpdated = value;
					this.SendPropertyChanged("IsUpdated");
					this.OnIsUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWaitingListId", DbType="Int NOT NULL")]
		public int ProductWaitingListId
		{
			get
			{
				return this._ProductWaitingListId;
			}
			set
			{
				if ((this._ProductWaitingListId != value))
				{
					this.OnProductWaitingListIdChanging(value);
					this.SendPropertyChanging();
					this._ProductWaitingListId = value;
					this.SendPropertyChanged("ProductWaitingListId");
					this.OnProductWaitingListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionBookingId", DbType="Int NOT NULL")]
		public int SubscriptionBookingId
		{
			get
			{
				return this._SubscriptionBookingId;
			}
			set
			{
				if ((this._SubscriptionBookingId != value))
				{
					this.OnSubscriptionBookingIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionBookingId = value;
					this.SendPropertyChanged("SubscriptionBookingId");
					this.OnSubscriptionBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCardBookingId", DbType="Int NOT NULL")]
		public int GiftCardBookingId
		{
			get
			{
				return this._GiftCardBookingId;
			}
			set
			{
				if ((this._GiftCardBookingId != value))
				{
					this.OnGiftCardBookingIdChanging(value);
					this.SendPropertyChanging();
					this._GiftCardBookingId = value;
					this.SendPropertyChanged("GiftCardBookingId");
					this.OnGiftCardBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendAt
		{
			get
			{
				return this._SendAt;
			}
			set
			{
				if ((this._SendAt != value))
				{
					this.OnSendAtChanging(value);
					this.SendPropertyChanging();
					this._SendAt = value;
					this.SendPropertyChanged("SendAt");
					this.OnSendAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoices")]
	public partial class Invoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BookingId;
		
		private int _PassStatus;
		
		private string _StripeChargeId;
		
		private double _ChargeAmount;
		
		private int _Quantity;
		
		private double _HotelPrice;
		
		private double _MerchantPrice;
		
		private double _TotalPrice;
		
		private int _InvoiceStatus;
		
		private string _StripeRefundId;
		
		private double _RefundAmount;
		
		private string _StripeRefundStatus;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private EntityRef<Bookings> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnPassStatusChanging(int value);
    partial void OnPassStatusChanged();
    partial void OnStripeChargeIdChanging(string value);
    partial void OnStripeChargeIdChanged();
    partial void OnChargeAmountChanging(double value);
    partial void OnChargeAmountChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnHotelPriceChanging(double value);
    partial void OnHotelPriceChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnInvoiceStatusChanging(int value);
    partial void OnInvoiceStatusChanged();
    partial void OnStripeRefundIdChanging(string value);
    partial void OnStripeRefundIdChanged();
    partial void OnRefundAmountChanging(double value);
    partial void OnRefundAmountChanged();
    partial void OnStripeRefundStatusChanging(string value);
    partial void OnStripeRefundStatusChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    #endregion
		
		public Invoices()
		{
			this._Bookings = default(EntityRef<Bookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					if (this._Bookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassStatus", DbType="Int NOT NULL")]
		public int PassStatus
		{
			get
			{
				return this._PassStatus;
			}
			set
			{
				if ((this._PassStatus != value))
				{
					this.OnPassStatusChanging(value);
					this.SendPropertyChanging();
					this._PassStatus = value;
					this.SendPropertyChanged("PassStatus");
					this.OnPassStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeChargeId", DbType="NVarChar(50)")]
		public string StripeChargeId
		{
			get
			{
				return this._StripeChargeId;
			}
			set
			{
				if ((this._StripeChargeId != value))
				{
					this.OnStripeChargeIdChanging(value);
					this.SendPropertyChanging();
					this._StripeChargeId = value;
					this.SendPropertyChanged("StripeChargeId");
					this.OnStripeChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeAmount", DbType="Float NOT NULL")]
		public double ChargeAmount
		{
			get
			{
				return this._ChargeAmount;
			}
			set
			{
				if ((this._ChargeAmount != value))
				{
					this.OnChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._ChargeAmount = value;
					this.SendPropertyChanged("ChargeAmount");
					this.OnChargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelPrice", DbType="Float NOT NULL")]
		public double HotelPrice
		{
			get
			{
				return this._HotelPrice;
			}
			set
			{
				if ((this._HotelPrice != value))
				{
					this.OnHotelPriceChanging(value);
					this.SendPropertyChanging();
					this._HotelPrice = value;
					this.SendPropertyChanged("HotelPrice");
					this.OnHotelPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceStatus", DbType="Int NOT NULL")]
		public int InvoiceStatus
		{
			get
			{
				return this._InvoiceStatus;
			}
			set
			{
				if ((this._InvoiceStatus != value))
				{
					this.OnInvoiceStatusChanging(value);
					this.SendPropertyChanging();
					this._InvoiceStatus = value;
					this.SendPropertyChanged("InvoiceStatus");
					this.OnInvoiceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeRefundId", DbType="NVarChar(50)")]
		public string StripeRefundId
		{
			get
			{
				return this._StripeRefundId;
			}
			set
			{
				if ((this._StripeRefundId != value))
				{
					this.OnStripeRefundIdChanging(value);
					this.SendPropertyChanging();
					this._StripeRefundId = value;
					this.SendPropertyChanged("StripeRefundId");
					this.OnStripeRefundIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundAmount", DbType="Float NOT NULL")]
		public double RefundAmount
		{
			get
			{
				return this._RefundAmount;
			}
			set
			{
				if ((this._RefundAmount != value))
				{
					this.OnRefundAmountChanging(value);
					this.SendPropertyChanging();
					this._RefundAmount = value;
					this.SendPropertyChanged("RefundAmount");
					this.OnRefundAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeRefundStatus", DbType="NVarChar(50)")]
		public string StripeRefundStatus
		{
			get
			{
				return this._StripeRefundStatus;
			}
			set
			{
				if ((this._StripeRefundStatus != value))
				{
					this.OnStripeRefundStatusChanging(value);
					this.SendPropertyChanging();
					this._StripeRefundStatus = value;
					this.SendPropertyChanged("StripeRefundStatus");
					this.OnStripeRefundStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_Invoices", Storage="_Bookings", ThisKey="BookingId", OtherKey="BookingId", IsForeignKey=true)]
		public Bookings Bookings
		{
			get
			{
				return this._Bookings.Entity;
			}
			set
			{
				Bookings previousValue = this._Bookings.Entity;
				if (((previousValue != value) 
							|| (this._Bookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bookings.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Bookings.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._BookingId = value.BookingId;
					}
					else
					{
						this._BookingId = default(int);
					}
					this.SendPropertyChanged("Bookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductWaittingList")]
	public partial class ProductWaittingLists : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private System.DateTime _CheckInDate;
		
		private string _EmailAddress;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCheckInDateChanging(System.DateTime value);
    partial void OnCheckInDateChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    #endregion
		
		public ProductWaittingLists()
		{
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckInDate
		{
			get
			{
				return this._CheckInDate;
			}
			set
			{
				if ((this._CheckInDate != value))
				{
					this.OnCheckInDateChanging(value);
					this.SendPropertyChanging();
					this._CheckInDate = value;
					this.SendPropertyChanged("CheckInDate");
					this.OnCheckInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(200)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductWaittingLists", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ProductWaittingLists.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ProductWaittingLists.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingsTemp")]
	public partial class BookingsTemps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingId;
		
		private int _Status;
		
		private string _BookingCode;
		
		private double _HotelPrice;
		
		private System.DateTime _BookedDate;
		
		private System.DateTime _CheckinDate;
		
		private int _PassStatus;
		
		private System.Nullable<System.DateTime> _RedeemedDate;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private string _TransactionId;
		
		private int _CustomerId;
		
		private string _StripeChargeId;
		
		private bool _IsEmailConfirmSend;
		
		private string _BrowsePassUrl;
		
		private System.Nullable<System.DateTime> _CancelDated;
		
		private double _MerchantPrice;
		
		private int _ProductId;
		
		private bool _IsUpgrade;
		
		private bool _IsSelectedCheckedInDate;
		
		private double _PayByCredit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnBookingCodeChanging(string value);
    partial void OnBookingCodeChanged();
    partial void OnHotelPriceChanging(double value);
    partial void OnHotelPriceChanged();
    partial void OnBookedDateChanging(System.DateTime value);
    partial void OnBookedDateChanged();
    partial void OnCheckinDateChanging(System.DateTime value);
    partial void OnCheckinDateChanged();
    partial void OnPassStatusChanging(int value);
    partial void OnPassStatusChanged();
    partial void OnRedeemedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRedeemedDateChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnStripeChargeIdChanging(string value);
    partial void OnStripeChargeIdChanged();
    partial void OnIsEmailConfirmSendChanging(bool value);
    partial void OnIsEmailConfirmSendChanged();
    partial void OnBrowsePassUrlChanging(string value);
    partial void OnBrowsePassUrlChanged();
    partial void OnCancelDatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDatedChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnIsUpgradeChanging(bool value);
    partial void OnIsUpgradeChanged();
    partial void OnIsSelectedCheckedInDateChanging(bool value);
    partial void OnIsSelectedCheckedInDateChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    #endregion
		
		public BookingsTemps()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string BookingCode
		{
			get
			{
				return this._BookingCode;
			}
			set
			{
				if ((this._BookingCode != value))
				{
					this.OnBookingCodeChanging(value);
					this.SendPropertyChanging();
					this._BookingCode = value;
					this.SendPropertyChanged("BookingCode");
					this.OnBookingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelPrice", DbType="Float NOT NULL")]
		public double HotelPrice
		{
			get
			{
				return this._HotelPrice;
			}
			set
			{
				if ((this._HotelPrice != value))
				{
					this.OnHotelPriceChanging(value);
					this.SendPropertyChanging();
					this._HotelPrice = value;
					this.SendPropertyChanged("HotelPrice");
					this.OnHotelPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="DateTime NOT NULL")]
		public System.DateTime BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckinDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckinDate
		{
			get
			{
				return this._CheckinDate;
			}
			set
			{
				if ((this._CheckinDate != value))
				{
					this.OnCheckinDateChanging(value);
					this.SendPropertyChanging();
					this._CheckinDate = value;
					this.SendPropertyChanged("CheckinDate");
					this.OnCheckinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassStatus", DbType="Int NOT NULL")]
		public int PassStatus
		{
			get
			{
				return this._PassStatus;
			}
			set
			{
				if ((this._PassStatus != value))
				{
					this.OnPassStatusChanging(value);
					this.SendPropertyChanging();
					this._PassStatus = value;
					this.SendPropertyChanged("PassStatus");
					this.OnPassStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedeemedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RedeemedDate
		{
			get
			{
				return this._RedeemedDate;
			}
			set
			{
				if ((this._RedeemedDate != value))
				{
					this.OnRedeemedDateChanging(value);
					this.SendPropertyChanging();
					this._RedeemedDate = value;
					this.SendPropertyChanged("RedeemedDate");
					this.OnRedeemedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="NVarChar(200)")]
		public string TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeChargeId", DbType="NVarChar(50)")]
		public string StripeChargeId
		{
			get
			{
				return this._StripeChargeId;
			}
			set
			{
				if ((this._StripeChargeId != value))
				{
					this.OnStripeChargeIdChanging(value);
					this.SendPropertyChanging();
					this._StripeChargeId = value;
					this.SendPropertyChanged("StripeChargeId");
					this.OnStripeChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailConfirmSend", DbType="Bit NOT NULL")]
		public bool IsEmailConfirmSend
		{
			get
			{
				return this._IsEmailConfirmSend;
			}
			set
			{
				if ((this._IsEmailConfirmSend != value))
				{
					this.OnIsEmailConfirmSendChanging(value);
					this.SendPropertyChanging();
					this._IsEmailConfirmSend = value;
					this.SendPropertyChanged("IsEmailConfirmSend");
					this.OnIsEmailConfirmSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowsePassUrl", DbType="NVarChar(200)")]
		public string BrowsePassUrl
		{
			get
			{
				return this._BrowsePassUrl;
			}
			set
			{
				if ((this._BrowsePassUrl != value))
				{
					this.OnBrowsePassUrlChanging(value);
					this.SendPropertyChanging();
					this._BrowsePassUrl = value;
					this.SendPropertyChanged("BrowsePassUrl");
					this.OnBrowsePassUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDated", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDated
		{
			get
			{
				return this._CancelDated;
			}
			set
			{
				if ((this._CancelDated != value))
				{
					this.OnCancelDatedChanging(value);
					this.SendPropertyChanging();
					this._CancelDated = value;
					this.SendPropertyChanged("CancelDated");
					this.OnCancelDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpgrade", DbType="Bit NOT NULL")]
		public bool IsUpgrade
		{
			get
			{
				return this._IsUpgrade;
			}
			set
			{
				if ((this._IsUpgrade != value))
				{
					this.OnIsUpgradeChanging(value);
					this.SendPropertyChanging();
					this._IsUpgrade = value;
					this.SendPropertyChanged("IsUpgrade");
					this.OnIsUpgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelectedCheckedInDate", DbType="Bit NOT NULL")]
		public bool IsSelectedCheckedInDate
		{
			get
			{
				return this._IsSelectedCheckedInDate;
			}
			set
			{
				if ((this._IsSelectedCheckedInDate != value))
				{
					this.OnIsSelectedCheckedInDateChanging(value);
					this.SendPropertyChanging();
					this._IsSelectedCheckedInDate = value;
					this.SendPropertyChanged("IsSelectedCheckedInDate");
					this.OnIsSelectedCheckedInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bookings")]
	public partial class Bookings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingId;
		
		private string _BookingCode;
		
		private double _HotelPrice;
		
		private System.DateTime _BookedDate;
		
		private System.Nullable<System.DateTime> _CheckinDate;
		
		private int _PassStatus;
		
		private System.Nullable<System.DateTime> _RedeemedDate;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private string _TransactionId;
		
		private int _CustomerId;
		
		private string _StripeChargeId;
		
		private bool _IsEmailConfirmSend;
		
		private string _BrowsePassUrl;
		
		private System.Nullable<System.DateTime> _CancelDated;
		
		private double _MerchantPrice;
		
		private int _ProductId;
		
		private bool _IsUpgrade;
		
		private int _Quantity;
		
		private double _TotalPrice;
		
		private bool _IsSelectedCheckedInDate;
		
		private string _StripeRefundStatus;
		
		private System.Nullable<double> _StripeRefundAmount;
		
		private string _StripeRefundTransactionId;
		
		private bool _HasInvoice;
		
		private double _PayByCredit;
		
		private System.Nullable<double> _RefundCreditAmount;
		
		private System.Nullable<double> _TotalRefundAmount;
		
		private bool _IsActiveSubscription;
		
		private double _TaxPrice;
		
		private string _StripeOrderId;
		
		private EntitySet<DiscountBookings> _DiscountBookings;
		
		private EntitySet<BookingHistories> _BookingHistories;
		
		private EntitySet<BookingConfirmationHotels> _BookingConfirmationHotels;
		
		private EntitySet<Invoices> _Invoices;
		
		private EntitySet<Surveys> _Surveys;
		
		private EntityRef<Products> _Products;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnBookingCodeChanging(string value);
    partial void OnBookingCodeChanged();
    partial void OnHotelPriceChanging(double value);
    partial void OnHotelPriceChanged();
    partial void OnBookedDateChanging(System.DateTime value);
    partial void OnBookedDateChanged();
    partial void OnCheckinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckinDateChanged();
    partial void OnPassStatusChanging(int value);
    partial void OnPassStatusChanged();
    partial void OnRedeemedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRedeemedDateChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnStripeChargeIdChanging(string value);
    partial void OnStripeChargeIdChanged();
    partial void OnIsEmailConfirmSendChanging(bool value);
    partial void OnIsEmailConfirmSendChanged();
    partial void OnBrowsePassUrlChanging(string value);
    partial void OnBrowsePassUrlChanged();
    partial void OnCancelDatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDatedChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnIsUpgradeChanging(bool value);
    partial void OnIsUpgradeChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnIsSelectedCheckedInDateChanging(bool value);
    partial void OnIsSelectedCheckedInDateChanged();
    partial void OnStripeRefundStatusChanging(string value);
    partial void OnStripeRefundStatusChanged();
    partial void OnStripeRefundAmountChanging(System.Nullable<double> value);
    partial void OnStripeRefundAmountChanged();
    partial void OnStripeRefundTransactionIdChanging(string value);
    partial void OnStripeRefundTransactionIdChanged();
    partial void OnHasInvoiceChanging(bool value);
    partial void OnHasInvoiceChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    partial void OnRefundCreditAmountChanging(System.Nullable<double> value);
    partial void OnRefundCreditAmountChanged();
    partial void OnTotalRefundAmountChanging(System.Nullable<double> value);
    partial void OnTotalRefundAmountChanged();
    partial void OnIsActiveSubscriptionChanging(bool value);
    partial void OnIsActiveSubscriptionChanged();
    partial void OnTaxPriceChanging(double value);
    partial void OnTaxPriceChanged();
    partial void OnStripeOrderIdChanging(string value);
    partial void OnStripeOrderIdChanged();
    #endregion
		
		public Bookings()
		{
			this._DiscountBookings = new EntitySet<DiscountBookings>(new Action<DiscountBookings>(this.attach_DiscountBookings), new Action<DiscountBookings>(this.detach_DiscountBookings));
			this._BookingHistories = new EntitySet<BookingHistories>(new Action<BookingHistories>(this.attach_BookingHistories), new Action<BookingHistories>(this.detach_BookingHistories));
			this._BookingConfirmationHotels = new EntitySet<BookingConfirmationHotels>(new Action<BookingConfirmationHotels>(this.attach_BookingConfirmationHotels), new Action<BookingConfirmationHotels>(this.detach_BookingConfirmationHotels));
			this._Invoices = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices), new Action<Invoices>(this.detach_Invoices));
			this._Surveys = new EntitySet<Surveys>(new Action<Surveys>(this.attach_Surveys), new Action<Surveys>(this.detach_Surveys));
			this._Products = default(EntityRef<Products>);
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string BookingCode
		{
			get
			{
				return this._BookingCode;
			}
			set
			{
				if ((this._BookingCode != value))
				{
					this.OnBookingCodeChanging(value);
					this.SendPropertyChanging();
					this._BookingCode = value;
					this.SendPropertyChanged("BookingCode");
					this.OnBookingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelPrice", DbType="Float NOT NULL")]
		public double HotelPrice
		{
			get
			{
				return this._HotelPrice;
			}
			set
			{
				if ((this._HotelPrice != value))
				{
					this.OnHotelPriceChanging(value);
					this.SendPropertyChanging();
					this._HotelPrice = value;
					this.SendPropertyChanged("HotelPrice");
					this.OnHotelPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="DateTime NOT NULL")]
		public System.DateTime BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckinDate
		{
			get
			{
				return this._CheckinDate;
			}
			set
			{
				if ((this._CheckinDate != value))
				{
					this.OnCheckinDateChanging(value);
					this.SendPropertyChanging();
					this._CheckinDate = value;
					this.SendPropertyChanged("CheckinDate");
					this.OnCheckinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassStatus", DbType="Int NOT NULL")]
		public int PassStatus
		{
			get
			{
				return this._PassStatus;
			}
			set
			{
				if ((this._PassStatus != value))
				{
					this.OnPassStatusChanging(value);
					this.SendPropertyChanging();
					this._PassStatus = value;
					this.SendPropertyChanged("PassStatus");
					this.OnPassStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedeemedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RedeemedDate
		{
			get
			{
				return this._RedeemedDate;
			}
			set
			{
				if ((this._RedeemedDate != value))
				{
					this.OnRedeemedDateChanging(value);
					this.SendPropertyChanging();
					this._RedeemedDate = value;
					this.SendPropertyChanged("RedeemedDate");
					this.OnRedeemedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="NVarChar(200)")]
		public string TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeChargeId", DbType="NVarChar(50)")]
		public string StripeChargeId
		{
			get
			{
				return this._StripeChargeId;
			}
			set
			{
				if ((this._StripeChargeId != value))
				{
					this.OnStripeChargeIdChanging(value);
					this.SendPropertyChanging();
					this._StripeChargeId = value;
					this.SendPropertyChanged("StripeChargeId");
					this.OnStripeChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailConfirmSend", DbType="Bit NOT NULL")]
		public bool IsEmailConfirmSend
		{
			get
			{
				return this._IsEmailConfirmSend;
			}
			set
			{
				if ((this._IsEmailConfirmSend != value))
				{
					this.OnIsEmailConfirmSendChanging(value);
					this.SendPropertyChanging();
					this._IsEmailConfirmSend = value;
					this.SendPropertyChanged("IsEmailConfirmSend");
					this.OnIsEmailConfirmSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowsePassUrl", DbType="NVarChar(200)")]
		public string BrowsePassUrl
		{
			get
			{
				return this._BrowsePassUrl;
			}
			set
			{
				if ((this._BrowsePassUrl != value))
				{
					this.OnBrowsePassUrlChanging(value);
					this.SendPropertyChanging();
					this._BrowsePassUrl = value;
					this.SendPropertyChanged("BrowsePassUrl");
					this.OnBrowsePassUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDated", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDated
		{
			get
			{
				return this._CancelDated;
			}
			set
			{
				if ((this._CancelDated != value))
				{
					this.OnCancelDatedChanging(value);
					this.SendPropertyChanging();
					this._CancelDated = value;
					this.SendPropertyChanged("CancelDated");
					this.OnCancelDatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpgrade", DbType="Bit NOT NULL")]
		public bool IsUpgrade
		{
			get
			{
				return this._IsUpgrade;
			}
			set
			{
				if ((this._IsUpgrade != value))
				{
					this.OnIsUpgradeChanging(value);
					this.SendPropertyChanging();
					this._IsUpgrade = value;
					this.SendPropertyChanged("IsUpgrade");
					this.OnIsUpgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelectedCheckedInDate", DbType="Bit NOT NULL")]
		public bool IsSelectedCheckedInDate
		{
			get
			{
				return this._IsSelectedCheckedInDate;
			}
			set
			{
				if ((this._IsSelectedCheckedInDate != value))
				{
					this.OnIsSelectedCheckedInDateChanging(value);
					this.SendPropertyChanging();
					this._IsSelectedCheckedInDate = value;
					this.SendPropertyChanged("IsSelectedCheckedInDate");
					this.OnIsSelectedCheckedInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeRefundStatus", DbType="NVarChar(50)")]
		public string StripeRefundStatus
		{
			get
			{
				return this._StripeRefundStatus;
			}
			set
			{
				if ((this._StripeRefundStatus != value))
				{
					this.OnStripeRefundStatusChanging(value);
					this.SendPropertyChanging();
					this._StripeRefundStatus = value;
					this.SendPropertyChanged("StripeRefundStatus");
					this.OnStripeRefundStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeRefundAmount", DbType="Float")]
		public System.Nullable<double> StripeRefundAmount
		{
			get
			{
				return this._StripeRefundAmount;
			}
			set
			{
				if ((this._StripeRefundAmount != value))
				{
					this.OnStripeRefundAmountChanging(value);
					this.SendPropertyChanging();
					this._StripeRefundAmount = value;
					this.SendPropertyChanged("StripeRefundAmount");
					this.OnStripeRefundAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeRefundTransactionId", DbType="NVarChar(50)")]
		public string StripeRefundTransactionId
		{
			get
			{
				return this._StripeRefundTransactionId;
			}
			set
			{
				if ((this._StripeRefundTransactionId != value))
				{
					this.OnStripeRefundTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._StripeRefundTransactionId = value;
					this.SendPropertyChanged("StripeRefundTransactionId");
					this.OnStripeRefundTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasInvoice", DbType="Bit NOT NULL")]
		public bool HasInvoice
		{
			get
			{
				return this._HasInvoice;
			}
			set
			{
				if ((this._HasInvoice != value))
				{
					this.OnHasInvoiceChanging(value);
					this.SendPropertyChanging();
					this._HasInvoice = value;
					this.SendPropertyChanged("HasInvoice");
					this.OnHasInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefundCreditAmount", DbType="Float")]
		public System.Nullable<double> RefundCreditAmount
		{
			get
			{
				return this._RefundCreditAmount;
			}
			set
			{
				if ((this._RefundCreditAmount != value))
				{
					this.OnRefundCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._RefundCreditAmount = value;
					this.SendPropertyChanged("RefundCreditAmount");
					this.OnRefundCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRefundAmount", DbType="Float")]
		public System.Nullable<double> TotalRefundAmount
		{
			get
			{
				return this._TotalRefundAmount;
			}
			set
			{
				if ((this._TotalRefundAmount != value))
				{
					this.OnTotalRefundAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalRefundAmount = value;
					this.SendPropertyChanged("TotalRefundAmount");
					this.OnTotalRefundAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveSubscription", DbType="Bit NOT NULL")]
		public bool IsActiveSubscription
		{
			get
			{
				return this._IsActiveSubscription;
			}
			set
			{
				if ((this._IsActiveSubscription != value))
				{
					this.OnIsActiveSubscriptionChanging(value);
					this.SendPropertyChanging();
					this._IsActiveSubscription = value;
					this.SendPropertyChanged("IsActiveSubscription");
					this.OnIsActiveSubscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxPrice", DbType="Float NOT NULL")]
		public double TaxPrice
		{
			get
			{
				return this._TaxPrice;
			}
			set
			{
				if ((this._TaxPrice != value))
				{
					this.OnTaxPriceChanging(value);
					this.SendPropertyChanging();
					this._TaxPrice = value;
					this.SendPropertyChanged("TaxPrice");
					this.OnTaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeOrderId", DbType="NVarChar(255)")]
		public string StripeOrderId
		{
			get
			{
				return this._StripeOrderId;
			}
			set
			{
				if ((this._StripeOrderId != value))
				{
					this.OnStripeOrderIdChanging(value);
					this.SendPropertyChanging();
					this._StripeOrderId = value;
					this.SendPropertyChanged("StripeOrderId");
					this.OnStripeOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_DiscountBookings", Storage="_DiscountBookings", ThisKey="BookingId", OtherKey="BookingId")]
		public EntitySet<DiscountBookings> DiscountBookings
		{
			get
			{
				return this._DiscountBookings;
			}
			set
			{
				this._DiscountBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_BookingHistories", Storage="_BookingHistories", ThisKey="BookingId", OtherKey="BookingId")]
		public EntitySet<BookingHistories> BookingHistories
		{
			get
			{
				return this._BookingHistories;
			}
			set
			{
				this._BookingHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_BookingConfirmationHotels", Storage="_BookingConfirmationHotels", ThisKey="BookingId", OtherKey="BookingId")]
		public EntitySet<BookingConfirmationHotels> BookingConfirmationHotels
		{
			get
			{
				return this._BookingConfirmationHotels;
			}
			set
			{
				this._BookingConfirmationHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_Invoices", Storage="_Invoices", ThisKey="BookingId", OtherKey="BookingId")]
		public EntitySet<Invoices> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_Surveys", Storage="_Surveys", ThisKey="BookingId", OtherKey="BookingId")]
		public EntitySet<Surveys> Surveys
		{
			get
			{
				return this._Surveys;
			}
			set
			{
				this._Surveys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Bookings", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_Bookings", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiscountBookings(DiscountBookings entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = this;
		}
		
		private void detach_DiscountBookings(DiscountBookings entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = null;
		}
		
		private void attach_BookingHistories(BookingHistories entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = this;
		}
		
		private void detach_BookingHistories(BookingHistories entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = null;
		}
		
		private void attach_BookingConfirmationHotels(BookingConfirmationHotels entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = this;
		}
		
		private void detach_BookingConfirmationHotels(BookingConfirmationHotels entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = null;
		}
		
		private void attach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = this;
		}
		
		private void detach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = null;
		}
		
		private void attach_Surveys(Surveys entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = this;
		}
		
		private void detach_Surveys(Surveys entity)
		{
			this.SendPropertyChanging();
			entity.Bookings = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerCredits")]
	public partial class CustomerCredits : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CustomerId;
		
		private string _ReferralCode;
		
		private double _Amount;
		
		private double _FirstRewardForOwner;
		
		private double _FirstRewardForReferral;
		
		private bool _IsDelete;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastUpdatedDate;
		
		private int _ReferralCustomerId;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnReferralCodeChanging(string value);
    partial void OnReferralCodeChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnFirstRewardForOwnerChanging(double value);
    partial void OnFirstRewardForOwnerChanged();
    partial void OnFirstRewardForReferralChanging(double value);
    partial void OnFirstRewardForReferralChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnReferralCustomerIdChanging(int value);
    partial void OnReferralCustomerIdChanged();
    #endregion
		
		public CustomerCredits()
		{
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralCode", DbType="NVarChar(20)")]
		public string ReferralCode
		{
			get
			{
				return this._ReferralCode;
			}
			set
			{
				if ((this._ReferralCode != value))
				{
					this.OnReferralCodeChanging(value);
					this.SendPropertyChanging();
					this._ReferralCode = value;
					this.SendPropertyChanged("ReferralCode");
					this.OnReferralCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRewardForOwner", DbType="Float NOT NULL")]
		public double FirstRewardForOwner
		{
			get
			{
				return this._FirstRewardForOwner;
			}
			set
			{
				if ((this._FirstRewardForOwner != value))
				{
					this.OnFirstRewardForOwnerChanging(value);
					this.SendPropertyChanging();
					this._FirstRewardForOwner = value;
					this.SendPropertyChanged("FirstRewardForOwner");
					this.OnFirstRewardForOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRewardForReferral", DbType="Float NOT NULL")]
		public double FirstRewardForReferral
		{
			get
			{
				return this._FirstRewardForReferral;
			}
			set
			{
				if ((this._FirstRewardForReferral != value))
				{
					this.OnFirstRewardForReferralChanging(value);
					this.SendPropertyChanging();
					this._FirstRewardForReferral = value;
					this.SendPropertyChanged("FirstRewardForReferral");
					this.OnFirstRewardForReferralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralCustomerId", DbType="Int NOT NULL")]
		public int ReferralCustomerId
		{
			get
			{
				return this._ReferralCustomerId;
			}
			set
			{
				if ((this._ReferralCustomerId != value))
				{
					this.OnReferralCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._ReferralCustomerId = value;
					this.SendPropertyChanged("ReferralCustomerId");
					this.OnReferralCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerCredits", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.CustomerCredits.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.CustomerCredits.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discounts")]
	public partial class Discounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DiscountName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Code;
		
		private double _PercentOff;
		
		private bool _CodeRequired;
		
		private bool _IsDelete;
		
		private byte _PromoType;
		
		private bool _IsAllProducts;
		
		private double _MinAmount;
		
		private byte _MaxPurchases;
		
		private string _FinePrint;
		
		private int _BillingCycleNumber;
		
		private EntitySet<SubscriptionBookingDiscounts> _SubscriptionBookingDiscounts;
		
		private EntitySet<SubsciptionDiscountUseds> _SubsciptionDiscountUseds;
		
		private EntitySet<DiscountProducts> _DiscountProducts;
		
		private EntitySet<DiscountSubscriptions> _DiscountSubscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiscountNameChanging(string value);
    partial void OnDiscountNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPercentOffChanging(double value);
    partial void OnPercentOffChanged();
    partial void OnCodeRequiredChanging(bool value);
    partial void OnCodeRequiredChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnPromoTypeChanging(byte value);
    partial void OnPromoTypeChanged();
    partial void OnIsAllProductsChanging(bool value);
    partial void OnIsAllProductsChanged();
    partial void OnMinAmountChanging(double value);
    partial void OnMinAmountChanged();
    partial void OnMaxPurchasesChanging(byte value);
    partial void OnMaxPurchasesChanged();
    partial void OnFinePrintChanging(string value);
    partial void OnFinePrintChanged();
    partial void OnBillingCycleNumberChanging(int value);
    partial void OnBillingCycleNumberChanged();
    #endregion
		
		public Discounts()
		{
			this._SubscriptionBookingDiscounts = new EntitySet<SubscriptionBookingDiscounts>(new Action<SubscriptionBookingDiscounts>(this.attach_SubscriptionBookingDiscounts), new Action<SubscriptionBookingDiscounts>(this.detach_SubscriptionBookingDiscounts));
			this._SubsciptionDiscountUseds = new EntitySet<SubsciptionDiscountUseds>(new Action<SubsciptionDiscountUseds>(this.attach_SubsciptionDiscountUseds), new Action<SubsciptionDiscountUseds>(this.detach_SubsciptionDiscountUseds));
			this._DiscountProducts = new EntitySet<DiscountProducts>(new Action<DiscountProducts>(this.attach_DiscountProducts), new Action<DiscountProducts>(this.detach_DiscountProducts));
			this._DiscountSubscriptions = new EntitySet<DiscountSubscriptions>(new Action<DiscountSubscriptions>(this.attach_DiscountSubscriptions), new Action<DiscountSubscriptions>(this.detach_DiscountSubscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountName", DbType="NVarChar(500)")]
		public string DiscountName
		{
			get
			{
				return this._DiscountName;
			}
			set
			{
				if ((this._DiscountName != value))
				{
					this.OnDiscountNameChanging(value);
					this.SendPropertyChanging();
					this._DiscountName = value;
					this.SendPropertyChanged("DiscountName");
					this.OnDiscountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentOff", DbType="Float NOT NULL")]
		public double PercentOff
		{
			get
			{
				return this._PercentOff;
			}
			set
			{
				if ((this._PercentOff != value))
				{
					this.OnPercentOffChanging(value);
					this.SendPropertyChanging();
					this._PercentOff = value;
					this.SendPropertyChanged("PercentOff");
					this.OnPercentOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRequired", DbType="Bit NOT NULL")]
		public bool CodeRequired
		{
			get
			{
				return this._CodeRequired;
			}
			set
			{
				if ((this._CodeRequired != value))
				{
					this.OnCodeRequiredChanging(value);
					this.SendPropertyChanging();
					this._CodeRequired = value;
					this.SendPropertyChanged("CodeRequired");
					this.OnCodeRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoType", DbType="TinyInt NOT NULL")]
		public byte PromoType
		{
			get
			{
				return this._PromoType;
			}
			set
			{
				if ((this._PromoType != value))
				{
					this.OnPromoTypeChanging(value);
					this.SendPropertyChanging();
					this._PromoType = value;
					this.SendPropertyChanged("PromoType");
					this.OnPromoTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllProducts", DbType="Bit NOT NULL")]
		public bool IsAllProducts
		{
			get
			{
				return this._IsAllProducts;
			}
			set
			{
				if ((this._IsAllProducts != value))
				{
					this.OnIsAllProductsChanging(value);
					this.SendPropertyChanging();
					this._IsAllProducts = value;
					this.SendPropertyChanged("IsAllProducts");
					this.OnIsAllProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinAmount", DbType="Float NOT NULL")]
		public double MinAmount
		{
			get
			{
				return this._MinAmount;
			}
			set
			{
				if ((this._MinAmount != value))
				{
					this.OnMinAmountChanging(value);
					this.SendPropertyChanging();
					this._MinAmount = value;
					this.SendPropertyChanged("MinAmount");
					this.OnMinAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPurchases", DbType="TinyInt NOT NULL")]
		public byte MaxPurchases
		{
			get
			{
				return this._MaxPurchases;
			}
			set
			{
				if ((this._MaxPurchases != value))
				{
					this.OnMaxPurchasesChanging(value);
					this.SendPropertyChanging();
					this._MaxPurchases = value;
					this.SendPropertyChanged("MaxPurchases");
					this.OnMaxPurchasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinePrint", DbType="NVarChar(4000)")]
		public string FinePrint
		{
			get
			{
				return this._FinePrint;
			}
			set
			{
				if ((this._FinePrint != value))
				{
					this.OnFinePrintChanging(value);
					this.SendPropertyChanging();
					this._FinePrint = value;
					this.SendPropertyChanged("FinePrint");
					this.OnFinePrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingCycleNumber", DbType="Int NOT NULL")]
		public int BillingCycleNumber
		{
			get
			{
				return this._BillingCycleNumber;
			}
			set
			{
				if ((this._BillingCycleNumber != value))
				{
					this.OnBillingCycleNumberChanging(value);
					this.SendPropertyChanging();
					this._BillingCycleNumber = value;
					this.SendPropertyChanged("BillingCycleNumber");
					this.OnBillingCycleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_SubscriptionBookingDiscounts", Storage="_SubscriptionBookingDiscounts", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<SubscriptionBookingDiscounts> SubscriptionBookingDiscounts
		{
			get
			{
				return this._SubscriptionBookingDiscounts;
			}
			set
			{
				this._SubscriptionBookingDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_SubsciptionDiscountUseds", Storage="_SubsciptionDiscountUseds", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<SubsciptionDiscountUseds> SubsciptionDiscountUseds
		{
			get
			{
				return this._SubsciptionDiscountUseds;
			}
			set
			{
				this._SubsciptionDiscountUseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_DiscountProducts", Storage="_DiscountProducts", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<DiscountProducts> DiscountProducts
		{
			get
			{
				return this._DiscountProducts;
			}
			set
			{
				this._DiscountProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_DiscountSubscriptions", Storage="_DiscountSubscriptions", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<DiscountSubscriptions> DiscountSubscriptions
		{
			get
			{
				return this._DiscountSubscriptions;
			}
			set
			{
				this._DiscountSubscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubscriptionBookingDiscounts(SubscriptionBookingDiscounts entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = this;
		}
		
		private void detach_SubscriptionBookingDiscounts(SubscriptionBookingDiscounts entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = null;
		}
		
		private void attach_SubsciptionDiscountUseds(SubsciptionDiscountUseds entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = this;
		}
		
		private void detach_SubsciptionDiscountUseds(SubsciptionDiscountUseds entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = null;
		}
		
		private void attach_DiscountProducts(DiscountProducts entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = this;
		}
		
		private void detach_DiscountProducts(DiscountProducts entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = null;
		}
		
		private void attach_DiscountSubscriptions(DiscountSubscriptions entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = this;
		}
		
		private void detach_DiscountSubscriptions(DiscountSubscriptions entity)
		{
			this.SendPropertyChanging();
			entity.Discounts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Products : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private int _HotelId;
		
		private string _ProductName;
		
		private int _ProductType;
		
		private int _DailySales;
		
		private int _PassCapacity;
		
		private int _MaxGuest;
		
		private string _ProductHighlight;
		
		private string _WhatYouGet;
		
		private string _Service;
		
		private short _RedemptionPeriod;
		
		private bool _IsCheckedInRequired;
		
		private short _IsKidAllow;
		
		private string _MetaDescription;
		
		private string _MetaKeyword;
		
		private bool _IsActive;
		
		private bool _IsDelete;
		
		private double _PriceMon;
		
		private double _PriceTue;
		
		private double _PriceWed;
		
		private double _PriceThu;
		
		private double _PriceFri;
		
		private double _PriceSat;
		
		private double _PriceSun;
		
		private double _UpgradeDiscountMon;
		
		private double _UpgradeDiscountTue;
		
		private double _UpgradeDiscountWed;
		
		private double _UpgradeDiscountThu;
		
		private double _UpgradeDiscountFri;
		
		private double _UpgradeDiscountSat;
		
		private double _UpgradeDiscountSun;
		
		private int _PassCapacityMon;
		
		private int _PassCapacityTue;
		
		private int _PassCapacityWed;
		
		private int _PassCapacityThu;
		
		private int _PassCapacityFri;
		
		private int _PassCapacitySat;
		
		private int _PassCapacitySun;
		
		private bool _IsFeatured;
		
		private string _StripeProduct;
		
		private System.Nullable<int> _TaxCode;
		
		private EntitySet<ProductUpgrades> _ProductUpgrades;
		
		private EntitySet<DiscountBookings> _DiscountBookings;
		
		private EntitySet<BlockedDatesCustomPrice> _BlockedDatesCustomPrice;
		
		private EntitySet<ProductAddOns> _ProductAddOns;
		
		private EntitySet<ProductWaittingLists> _ProductWaittingLists;
		
		private EntitySet<Bookings> _Bookings;
		
		private EntitySet<DiscountProducts> _DiscountProducts;
		
		private EntitySet<DefaultPrices> _DefaultPrices;
		
		private EntitySet<ProductImages> _ProductImages;
		
		private EntityRef<Hotels> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductTypeChanging(int value);
    partial void OnProductTypeChanged();
    partial void OnDailySalesChanging(int value);
    partial void OnDailySalesChanged();
    partial void OnPassCapacityChanging(int value);
    partial void OnPassCapacityChanged();
    partial void OnMaxGuestChanging(int value);
    partial void OnMaxGuestChanged();
    partial void OnProductHighlightChanging(string value);
    partial void OnProductHighlightChanged();
    partial void OnWhatYouGetChanging(string value);
    partial void OnWhatYouGetChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnRedemptionPeriodChanging(short value);
    partial void OnRedemptionPeriodChanged();
    partial void OnIsCheckedInRequiredChanging(bool value);
    partial void OnIsCheckedInRequiredChanged();
    partial void OnIsKidAllowChanging(short value);
    partial void OnIsKidAllowChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnPriceMonChanging(double value);
    partial void OnPriceMonChanged();
    partial void OnPriceTueChanging(double value);
    partial void OnPriceTueChanged();
    partial void OnPriceWedChanging(double value);
    partial void OnPriceWedChanged();
    partial void OnPriceThuChanging(double value);
    partial void OnPriceThuChanged();
    partial void OnPriceFriChanging(double value);
    partial void OnPriceFriChanged();
    partial void OnPriceSatChanging(double value);
    partial void OnPriceSatChanged();
    partial void OnPriceSunChanging(double value);
    partial void OnPriceSunChanged();
    partial void OnUpgradeDiscountMonChanging(double value);
    partial void OnUpgradeDiscountMonChanged();
    partial void OnUpgradeDiscountTueChanging(double value);
    partial void OnUpgradeDiscountTueChanged();
    partial void OnUpgradeDiscountWedChanging(double value);
    partial void OnUpgradeDiscountWedChanged();
    partial void OnUpgradeDiscountThuChanging(double value);
    partial void OnUpgradeDiscountThuChanged();
    partial void OnUpgradeDiscountFriChanging(double value);
    partial void OnUpgradeDiscountFriChanged();
    partial void OnUpgradeDiscountSatChanging(double value);
    partial void OnUpgradeDiscountSatChanged();
    partial void OnUpgradeDiscountSunChanging(double value);
    partial void OnUpgradeDiscountSunChanged();
    partial void OnPassCapacityMonChanging(int value);
    partial void OnPassCapacityMonChanged();
    partial void OnPassCapacityTueChanging(int value);
    partial void OnPassCapacityTueChanged();
    partial void OnPassCapacityWedChanging(int value);
    partial void OnPassCapacityWedChanged();
    partial void OnPassCapacityThuChanging(int value);
    partial void OnPassCapacityThuChanged();
    partial void OnPassCapacityFriChanging(int value);
    partial void OnPassCapacityFriChanged();
    partial void OnPassCapacitySatChanging(int value);
    partial void OnPassCapacitySatChanged();
    partial void OnPassCapacitySunChanging(int value);
    partial void OnPassCapacitySunChanged();
    partial void OnIsFeaturedChanging(bool value);
    partial void OnIsFeaturedChanged();
    partial void OnStripeProductChanging(string value);
    partial void OnStripeProductChanged();
    partial void OnTaxCodeChanging(System.Nullable<int> value);
    partial void OnTaxCodeChanged();
    #endregion
		
		public Products()
		{
			this._ProductUpgrades = new EntitySet<ProductUpgrades>(new Action<ProductUpgrades>(this.attach_ProductUpgrades), new Action<ProductUpgrades>(this.detach_ProductUpgrades));
			this._DiscountBookings = new EntitySet<DiscountBookings>(new Action<DiscountBookings>(this.attach_DiscountBookings), new Action<DiscountBookings>(this.detach_DiscountBookings));
			this._BlockedDatesCustomPrice = new EntitySet<BlockedDatesCustomPrice>(new Action<BlockedDatesCustomPrice>(this.attach_BlockedDatesCustomPrice), new Action<BlockedDatesCustomPrice>(this.detach_BlockedDatesCustomPrice));
			this._ProductAddOns = new EntitySet<ProductAddOns>(new Action<ProductAddOns>(this.attach_ProductAddOns), new Action<ProductAddOns>(this.detach_ProductAddOns));
			this._ProductWaittingLists = new EntitySet<ProductWaittingLists>(new Action<ProductWaittingLists>(this.attach_ProductWaittingLists), new Action<ProductWaittingLists>(this.detach_ProductWaittingLists));
			this._Bookings = new EntitySet<Bookings>(new Action<Bookings>(this.attach_Bookings), new Action<Bookings>(this.detach_Bookings));
			this._DiscountProducts = new EntitySet<DiscountProducts>(new Action<DiscountProducts>(this.attach_DiscountProducts), new Action<DiscountProducts>(this.detach_DiscountProducts));
			this._DefaultPrices = new EntitySet<DefaultPrices>(new Action<DefaultPrices>(this.attach_DefaultPrices), new Action<DefaultPrices>(this.detach_DefaultPrices));
			this._ProductImages = new EntitySet<ProductImages>(new Action<ProductImages>(this.attach_ProductImages), new Action<ProductImages>(this.detach_ProductImages));
			this._Hotels = default(EntityRef<Hotels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="Int NOT NULL")]
		public int ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySales", DbType="Int NOT NULL")]
		public int DailySales
		{
			get
			{
				return this._DailySales;
			}
			set
			{
				if ((this._DailySales != value))
				{
					this.OnDailySalesChanging(value);
					this.SendPropertyChanging();
					this._DailySales = value;
					this.SendPropertyChanged("DailySales");
					this.OnDailySalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacity", DbType="Int NOT NULL")]
		public int PassCapacity
		{
			get
			{
				return this._PassCapacity;
			}
			set
			{
				if ((this._PassCapacity != value))
				{
					this.OnPassCapacityChanging(value);
					this.SendPropertyChanging();
					this._PassCapacity = value;
					this.SendPropertyChanged("PassCapacity");
					this.OnPassCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxGuest", DbType="Int NOT NULL")]
		public int MaxGuest
		{
			get
			{
				return this._MaxGuest;
			}
			set
			{
				if ((this._MaxGuest != value))
				{
					this.OnMaxGuestChanging(value);
					this.SendPropertyChanging();
					this._MaxGuest = value;
					this.SendPropertyChanged("MaxGuest");
					this.OnMaxGuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductHighlight", DbType="NVarChar(MAX)")]
		public string ProductHighlight
		{
			get
			{
				return this._ProductHighlight;
			}
			set
			{
				if ((this._ProductHighlight != value))
				{
					this.OnProductHighlightChanging(value);
					this.SendPropertyChanging();
					this._ProductHighlight = value;
					this.SendPropertyChanged("ProductHighlight");
					this.OnProductHighlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatYouGet", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string WhatYouGet
		{
			get
			{
				return this._WhatYouGet;
			}
			set
			{
				if ((this._WhatYouGet != value))
				{
					this.OnWhatYouGetChanging(value);
					this.SendPropertyChanging();
					this._WhatYouGet = value;
					this.SendPropertyChanged("WhatYouGet");
					this.OnWhatYouGetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="NVarChar(1000)")]
		public string Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedemptionPeriod", DbType="SmallInt NOT NULL")]
		public short RedemptionPeriod
		{
			get
			{
				return this._RedemptionPeriod;
			}
			set
			{
				if ((this._RedemptionPeriod != value))
				{
					this.OnRedemptionPeriodChanging(value);
					this.SendPropertyChanging();
					this._RedemptionPeriod = value;
					this.SendPropertyChanged("RedemptionPeriod");
					this.OnRedemptionPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheckedInRequired", DbType="Bit NOT NULL")]
		public bool IsCheckedInRequired
		{
			get
			{
				return this._IsCheckedInRequired;
			}
			set
			{
				if ((this._IsCheckedInRequired != value))
				{
					this.OnIsCheckedInRequiredChanging(value);
					this.SendPropertyChanging();
					this._IsCheckedInRequired = value;
					this.SendPropertyChanged("IsCheckedInRequired");
					this.OnIsCheckedInRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKidAllow", DbType="SmallInt NOT NULL")]
		public short IsKidAllow
		{
			get
			{
				return this._IsKidAllow;
			}
			set
			{
				if ((this._IsKidAllow != value))
				{
					this.OnIsKidAllowChanging(value);
					this.SendPropertyChanging();
					this._IsKidAllow = value;
					this.SendPropertyChanged("IsKidAllow");
					this.OnIsKidAllowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(4000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NVarChar(4000)")]
		public string MetaKeyword
		{
			get
			{
				return this._MetaKeyword;
			}
			set
			{
				if ((this._MetaKeyword != value))
				{
					this.OnMetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._MetaKeyword = value;
					this.SendPropertyChanged("MetaKeyword");
					this.OnMetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceMon", DbType="Float NOT NULL")]
		public double PriceMon
		{
			get
			{
				return this._PriceMon;
			}
			set
			{
				if ((this._PriceMon != value))
				{
					this.OnPriceMonChanging(value);
					this.SendPropertyChanging();
					this._PriceMon = value;
					this.SendPropertyChanged("PriceMon");
					this.OnPriceMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTue", DbType="Float NOT NULL")]
		public double PriceTue
		{
			get
			{
				return this._PriceTue;
			}
			set
			{
				if ((this._PriceTue != value))
				{
					this.OnPriceTueChanging(value);
					this.SendPropertyChanging();
					this._PriceTue = value;
					this.SendPropertyChanged("PriceTue");
					this.OnPriceTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceWed", DbType="Float NOT NULL")]
		public double PriceWed
		{
			get
			{
				return this._PriceWed;
			}
			set
			{
				if ((this._PriceWed != value))
				{
					this.OnPriceWedChanging(value);
					this.SendPropertyChanging();
					this._PriceWed = value;
					this.SendPropertyChanged("PriceWed");
					this.OnPriceWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceThu", DbType="Float NOT NULL")]
		public double PriceThu
		{
			get
			{
				return this._PriceThu;
			}
			set
			{
				if ((this._PriceThu != value))
				{
					this.OnPriceThuChanging(value);
					this.SendPropertyChanging();
					this._PriceThu = value;
					this.SendPropertyChanged("PriceThu");
					this.OnPriceThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFri", DbType="Float NOT NULL")]
		public double PriceFri
		{
			get
			{
				return this._PriceFri;
			}
			set
			{
				if ((this._PriceFri != value))
				{
					this.OnPriceFriChanging(value);
					this.SendPropertyChanging();
					this._PriceFri = value;
					this.SendPropertyChanged("PriceFri");
					this.OnPriceFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSat", DbType="Float NOT NULL")]
		public double PriceSat
		{
			get
			{
				return this._PriceSat;
			}
			set
			{
				if ((this._PriceSat != value))
				{
					this.OnPriceSatChanging(value);
					this.SendPropertyChanging();
					this._PriceSat = value;
					this.SendPropertyChanged("PriceSat");
					this.OnPriceSatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSun", DbType="Float NOT NULL")]
		public double PriceSun
		{
			get
			{
				return this._PriceSun;
			}
			set
			{
				if ((this._PriceSun != value))
				{
					this.OnPriceSunChanging(value);
					this.SendPropertyChanging();
					this._PriceSun = value;
					this.SendPropertyChanged("PriceSun");
					this.OnPriceSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountMon", DbType="Float NOT NULL")]
		public double UpgradeDiscountMon
		{
			get
			{
				return this._UpgradeDiscountMon;
			}
			set
			{
				if ((this._UpgradeDiscountMon != value))
				{
					this.OnUpgradeDiscountMonChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountMon = value;
					this.SendPropertyChanged("UpgradeDiscountMon");
					this.OnUpgradeDiscountMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountTue", DbType="Float NOT NULL")]
		public double UpgradeDiscountTue
		{
			get
			{
				return this._UpgradeDiscountTue;
			}
			set
			{
				if ((this._UpgradeDiscountTue != value))
				{
					this.OnUpgradeDiscountTueChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountTue = value;
					this.SendPropertyChanged("UpgradeDiscountTue");
					this.OnUpgradeDiscountTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountWed", DbType="Float NOT NULL")]
		public double UpgradeDiscountWed
		{
			get
			{
				return this._UpgradeDiscountWed;
			}
			set
			{
				if ((this._UpgradeDiscountWed != value))
				{
					this.OnUpgradeDiscountWedChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountWed = value;
					this.SendPropertyChanged("UpgradeDiscountWed");
					this.OnUpgradeDiscountWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountThu", DbType="Float NOT NULL")]
		public double UpgradeDiscountThu
		{
			get
			{
				return this._UpgradeDiscountThu;
			}
			set
			{
				if ((this._UpgradeDiscountThu != value))
				{
					this.OnUpgradeDiscountThuChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountThu = value;
					this.SendPropertyChanged("UpgradeDiscountThu");
					this.OnUpgradeDiscountThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountFri", DbType="Float NOT NULL")]
		public double UpgradeDiscountFri
		{
			get
			{
				return this._UpgradeDiscountFri;
			}
			set
			{
				if ((this._UpgradeDiscountFri != value))
				{
					this.OnUpgradeDiscountFriChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountFri = value;
					this.SendPropertyChanged("UpgradeDiscountFri");
					this.OnUpgradeDiscountFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountSat", DbType="Float NOT NULL")]
		public double UpgradeDiscountSat
		{
			get
			{
				return this._UpgradeDiscountSat;
			}
			set
			{
				if ((this._UpgradeDiscountSat != value))
				{
					this.OnUpgradeDiscountSatChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountSat = value;
					this.SendPropertyChanged("UpgradeDiscountSat");
					this.OnUpgradeDiscountSatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountSun", DbType="Float NOT NULL")]
		public double UpgradeDiscountSun
		{
			get
			{
				return this._UpgradeDiscountSun;
			}
			set
			{
				if ((this._UpgradeDiscountSun != value))
				{
					this.OnUpgradeDiscountSunChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountSun = value;
					this.SendPropertyChanged("UpgradeDiscountSun");
					this.OnUpgradeDiscountSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityMon", DbType="Int NOT NULL")]
		public int PassCapacityMon
		{
			get
			{
				return this._PassCapacityMon;
			}
			set
			{
				if ((this._PassCapacityMon != value))
				{
					this.OnPassCapacityMonChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityMon = value;
					this.SendPropertyChanged("PassCapacityMon");
					this.OnPassCapacityMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityTue", DbType="Int NOT NULL")]
		public int PassCapacityTue
		{
			get
			{
				return this._PassCapacityTue;
			}
			set
			{
				if ((this._PassCapacityTue != value))
				{
					this.OnPassCapacityTueChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityTue = value;
					this.SendPropertyChanged("PassCapacityTue");
					this.OnPassCapacityTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityWed", DbType="Int NOT NULL")]
		public int PassCapacityWed
		{
			get
			{
				return this._PassCapacityWed;
			}
			set
			{
				if ((this._PassCapacityWed != value))
				{
					this.OnPassCapacityWedChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityWed = value;
					this.SendPropertyChanged("PassCapacityWed");
					this.OnPassCapacityWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityThu", DbType="Int NOT NULL")]
		public int PassCapacityThu
		{
			get
			{
				return this._PassCapacityThu;
			}
			set
			{
				if ((this._PassCapacityThu != value))
				{
					this.OnPassCapacityThuChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityThu = value;
					this.SendPropertyChanged("PassCapacityThu");
					this.OnPassCapacityThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityFri", DbType="Int NOT NULL")]
		public int PassCapacityFri
		{
			get
			{
				return this._PassCapacityFri;
			}
			set
			{
				if ((this._PassCapacityFri != value))
				{
					this.OnPassCapacityFriChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityFri = value;
					this.SendPropertyChanged("PassCapacityFri");
					this.OnPassCapacityFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacitySat", DbType="Int NOT NULL")]
		public int PassCapacitySat
		{
			get
			{
				return this._PassCapacitySat;
			}
			set
			{
				if ((this._PassCapacitySat != value))
				{
					this.OnPassCapacitySatChanging(value);
					this.SendPropertyChanging();
					this._PassCapacitySat = value;
					this.SendPropertyChanged("PassCapacitySat");
					this.OnPassCapacitySatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacitySun", DbType="Int NOT NULL")]
		public int PassCapacitySun
		{
			get
			{
				return this._PassCapacitySun;
			}
			set
			{
				if ((this._PassCapacitySun != value))
				{
					this.OnPassCapacitySunChanging(value);
					this.SendPropertyChanging();
					this._PassCapacitySun = value;
					this.SendPropertyChanged("PassCapacitySun");
					this.OnPassCapacitySunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeatured", DbType="Bit NOT NULL")]
		public bool IsFeatured
		{
			get
			{
				return this._IsFeatured;
			}
			set
			{
				if ((this._IsFeatured != value))
				{
					this.OnIsFeaturedChanging(value);
					this.SendPropertyChanging();
					this._IsFeatured = value;
					this.SendPropertyChanged("IsFeatured");
					this.OnIsFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeProduct", DbType="NVarChar(255)")]
		public string StripeProduct
		{
			get
			{
				return this._StripeProduct;
			}
			set
			{
				if ((this._StripeProduct != value))
				{
					this.OnStripeProductChanging(value);
					this.SendPropertyChanging();
					this._StripeProduct = value;
					this.SendPropertyChanged("StripeProduct");
					this.OnStripeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="Int")]
		public System.Nullable<int> TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductUpgrades", Storage="_ProductUpgrades", ThisKey="ProductId", OtherKey="UpgradeId")]
		public EntitySet<ProductUpgrades> ProductUpgrades
		{
			get
			{
				return this._ProductUpgrades;
			}
			set
			{
				this._ProductUpgrades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_DiscountBookings", Storage="_DiscountBookings", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<DiscountBookings> DiscountBookings
		{
			get
			{
				return this._DiscountBookings;
			}
			set
			{
				this._DiscountBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_BlockedDatesCustomPrice", Storage="_BlockedDatesCustomPrice", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<BlockedDatesCustomPrice> BlockedDatesCustomPrice
		{
			get
			{
				return this._BlockedDatesCustomPrice;
			}
			set
			{
				this._BlockedDatesCustomPrice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductAddOns", Storage="_ProductAddOns", ThisKey="ProductId", OtherKey="AddOnId")]
		public EntitySet<ProductAddOns> ProductAddOns
		{
			get
			{
				return this._ProductAddOns;
			}
			set
			{
				this._ProductAddOns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductWaittingLists", Storage="_ProductWaittingLists", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<ProductWaittingLists> ProductWaittingLists
		{
			get
			{
				return this._ProductWaittingLists;
			}
			set
			{
				this._ProductWaittingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_Bookings", Storage="_Bookings", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<Bookings> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_DiscountProducts", Storage="_DiscountProducts", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<DiscountProducts> DiscountProducts
		{
			get
			{
				return this._DiscountProducts;
			}
			set
			{
				this._DiscountProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_DefaultPrices", Storage="_DefaultPrices", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<DefaultPrices> DefaultPrices
		{
			get
			{
				return this._DefaultPrices;
			}
			set
			{
				this._DefaultPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductImages", Storage="_ProductImages", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<ProductImages> ProductImages
		{
			get
			{
				return this._ProductImages;
			}
			set
			{
				this._ProductImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_Products", Storage="_Hotels", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotels Hotels
		{
			get
			{
				return this._Hotels.Entity;
			}
			set
			{
				Hotels previousValue = this._Hotels.Entity;
				if (((previousValue != value) 
							|| (this._Hotels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotels.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Hotels.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductUpgrades(ProductUpgrades entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ProductUpgrades(ProductUpgrades entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_DiscountBookings(DiscountBookings entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_DiscountBookings(DiscountBookings entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_BlockedDatesCustomPrice(BlockedDatesCustomPrice entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_BlockedDatesCustomPrice(BlockedDatesCustomPrice entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_ProductAddOns(ProductAddOns entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ProductAddOns(ProductAddOns entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_ProductWaittingLists(ProductWaittingLists entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ProductWaittingLists(ProductWaittingLists entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_DiscountProducts(DiscountProducts entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_DiscountProducts(DiscountProducts entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_DefaultPrices(DefaultPrices entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_DefaultPrices(DefaultPrices entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
		
		private void attach_ProductImages(ProductImages entity)
		{
			this.SendPropertyChanging();
			entity.Products = this;
		}
		
		private void detach_ProductImages(ProductImages entity)
		{
			this.SendPropertyChanging();
			entity.Products = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInfos")]
	public partial class CustomerInfos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _EmailAddress;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _ZipCode;
		
		private System.DateTime _CreatedDate;
		
		private string _StripeCustomerId;
		
		private string _StripeTokenId;
		
		private string _BankAccountLast4;
		
		private string _StripeCardId;
		
		private string _CardType;
		
		private string _Password;
		
		private bool _IsConfirmed;
		
		private string _SessionId;
		
		private System.Nullable<System.DateTime> _LastSignInDate;
		
		private string _ChangePasswordSessionId;
		
		private string _BrowsePassUrl;
		
		private string _CreateAccountSessionId;
		
		private bool _IsAdmin;
		
		private bool _IsActive;
		
		private bool _IsDelete;
		
		private bool _IsSuperAdmin;
		
		private bool _IsCheckInOnly;
		
		private string _RefreshToken;
		
		private string _Phone;
		
		private string _Salt;
		
		private System.Nullable<int> _MarketId;
		
		private string _Avatar;
		
		private System.Nullable<int> _AvatarType;
		
		private string _PasswordResetToken;
		
		private System.Nullable<System.DateTime> _PasswordResetTokenCreated;
		
		private EntitySet<CustomerCreditLogs> _CustomerCreditLogs;
		
		private EntitySet<CustomerInfoSearchCriteria> _CustomerInfoSearchCriteria;
		
		private EntitySet<SubsciptionDiscountUseds> _SubsciptionDiscountUseds;
		
		private EntitySet<Bookings> _Bookings;
		
		private EntitySet<CustomerCredits> _CustomerCredits;
		
		private EntitySet<CustomerInfosHotels> _CustomerInfosHotels;
		
		private EntitySet<SubscriptionBookings> _SubscriptionBookings;
		
		private EntitySet<GiftCardBookings> _GiftCardBookings;
		
		private EntityRef<Markets> _Markets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnStripeCustomerIdChanging(string value);
    partial void OnStripeCustomerIdChanged();
    partial void OnStripeTokenIdChanging(string value);
    partial void OnStripeTokenIdChanged();
    partial void OnBankAccountLast4Changing(string value);
    partial void OnBankAccountLast4Changed();
    partial void OnStripeCardIdChanging(string value);
    partial void OnStripeCardIdChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsConfirmedChanging(bool value);
    partial void OnIsConfirmedChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnLastSignInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSignInDateChanged();
    partial void OnChangePasswordSessionIdChanging(string value);
    partial void OnChangePasswordSessionIdChanged();
    partial void OnBrowsePassUrlChanging(string value);
    partial void OnBrowsePassUrlChanged();
    partial void OnCreateAccountSessionIdChanging(string value);
    partial void OnCreateAccountSessionIdChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnIsSuperAdminChanging(bool value);
    partial void OnIsSuperAdminChanged();
    partial void OnIsCheckInOnlyChanging(bool value);
    partial void OnIsCheckInOnlyChanged();
    partial void OnRefreshTokenChanging(string value);
    partial void OnRefreshTokenChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnMarketIdChanging(System.Nullable<int> value);
    partial void OnMarketIdChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnAvatarTypeChanging(System.Nullable<int> value);
    partial void OnAvatarTypeChanged();
    partial void OnPasswordResetTokenChanging(string value);
    partial void OnPasswordResetTokenChanged();
    partial void OnPasswordResetTokenCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordResetTokenCreatedChanged();
    #endregion
		
		public CustomerInfos()
		{
			this._CustomerCreditLogs = new EntitySet<CustomerCreditLogs>(new Action<CustomerCreditLogs>(this.attach_CustomerCreditLogs), new Action<CustomerCreditLogs>(this.detach_CustomerCreditLogs));
			this._CustomerInfoSearchCriteria = new EntitySet<CustomerInfoSearchCriteria>(new Action<CustomerInfoSearchCriteria>(this.attach_CustomerInfoSearchCriteria), new Action<CustomerInfoSearchCriteria>(this.detach_CustomerInfoSearchCriteria));
			this._SubsciptionDiscountUseds = new EntitySet<SubsciptionDiscountUseds>(new Action<SubsciptionDiscountUseds>(this.attach_SubsciptionDiscountUseds), new Action<SubsciptionDiscountUseds>(this.detach_SubsciptionDiscountUseds));
			this._Bookings = new EntitySet<Bookings>(new Action<Bookings>(this.attach_Bookings), new Action<Bookings>(this.detach_Bookings));
			this._CustomerCredits = new EntitySet<CustomerCredits>(new Action<CustomerCredits>(this.attach_CustomerCredits), new Action<CustomerCredits>(this.detach_CustomerCredits));
			this._CustomerInfosHotels = new EntitySet<CustomerInfosHotels>(new Action<CustomerInfosHotels>(this.attach_CustomerInfosHotels), new Action<CustomerInfosHotels>(this.detach_CustomerInfosHotels));
			this._SubscriptionBookings = new EntitySet<SubscriptionBookings>(new Action<SubscriptionBookings>(this.attach_SubscriptionBookings), new Action<SubscriptionBookings>(this.detach_SubscriptionBookings));
			this._GiftCardBookings = new EntitySet<GiftCardBookings>(new Action<GiftCardBookings>(this.attach_GiftCardBookings), new Action<GiftCardBookings>(this.detach_GiftCardBookings));
			this._Markets = default(EntityRef<Markets>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(200)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(10)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeCustomerId", DbType="NVarChar(50)")]
		public string StripeCustomerId
		{
			get
			{
				return this._StripeCustomerId;
			}
			set
			{
				if ((this._StripeCustomerId != value))
				{
					this.OnStripeCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._StripeCustomerId = value;
					this.SendPropertyChanged("StripeCustomerId");
					this.OnStripeCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeTokenId", DbType="NVarChar(50)")]
		public string StripeTokenId
		{
			get
			{
				return this._StripeTokenId;
			}
			set
			{
				if ((this._StripeTokenId != value))
				{
					this.OnStripeTokenIdChanging(value);
					this.SendPropertyChanging();
					this._StripeTokenId = value;
					this.SendPropertyChanged("StripeTokenId");
					this.OnStripeTokenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountLast4", DbType="NVarChar(50)")]
		public string BankAccountLast4
		{
			get
			{
				return this._BankAccountLast4;
			}
			set
			{
				if ((this._BankAccountLast4 != value))
				{
					this.OnBankAccountLast4Changing(value);
					this.SendPropertyChanging();
					this._BankAccountLast4 = value;
					this.SendPropertyChanged("BankAccountLast4");
					this.OnBankAccountLast4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeCardId", DbType="NVarChar(50)")]
		public string StripeCardId
		{
			get
			{
				return this._StripeCardId;
			}
			set
			{
				if ((this._StripeCardId != value))
				{
					this.OnStripeCardIdChanging(value);
					this.SendPropertyChanging();
					this._StripeCardId = value;
					this.SendPropertyChanged("StripeCardId");
					this.OnStripeCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="NVarChar(20)")]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit NOT NULL")]
		public bool IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="NVarChar(50)")]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSignInDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastSignInDate
		{
			get
			{
				return this._LastSignInDate;
			}
			set
			{
				if ((this._LastSignInDate != value))
				{
					this.OnLastSignInDateChanging(value);
					this.SendPropertyChanging();
					this._LastSignInDate = value;
					this.SendPropertyChanged("LastSignInDate");
					this.OnLastSignInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePasswordSessionId", DbType="NVarChar(50)")]
		public string ChangePasswordSessionId
		{
			get
			{
				return this._ChangePasswordSessionId;
			}
			set
			{
				if ((this._ChangePasswordSessionId != value))
				{
					this.OnChangePasswordSessionIdChanging(value);
					this.SendPropertyChanging();
					this._ChangePasswordSessionId = value;
					this.SendPropertyChanged("ChangePasswordSessionId");
					this.OnChangePasswordSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowsePassUrl", DbType="NVarChar(200)")]
		public string BrowsePassUrl
		{
			get
			{
				return this._BrowsePassUrl;
			}
			set
			{
				if ((this._BrowsePassUrl != value))
				{
					this.OnBrowsePassUrlChanging(value);
					this.SendPropertyChanging();
					this._BrowsePassUrl = value;
					this.SendPropertyChanged("BrowsePassUrl");
					this.OnBrowsePassUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAccountSessionId", DbType="NVarChar(50)")]
		public string CreateAccountSessionId
		{
			get
			{
				return this._CreateAccountSessionId;
			}
			set
			{
				if ((this._CreateAccountSessionId != value))
				{
					this.OnCreateAccountSessionIdChanging(value);
					this.SendPropertyChanging();
					this._CreateAccountSessionId = value;
					this.SendPropertyChanged("CreateAccountSessionId");
					this.OnCreateAccountSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperAdmin", DbType="Bit NOT NULL")]
		public bool IsSuperAdmin
		{
			get
			{
				return this._IsSuperAdmin;
			}
			set
			{
				if ((this._IsSuperAdmin != value))
				{
					this.OnIsSuperAdminChanging(value);
					this.SendPropertyChanging();
					this._IsSuperAdmin = value;
					this.SendPropertyChanged("IsSuperAdmin");
					this.OnIsSuperAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheckInOnly", DbType="Bit NOT NULL")]
		public bool IsCheckInOnly
		{
			get
			{
				return this._IsCheckInOnly;
			}
			set
			{
				if ((this._IsCheckInOnly != value))
				{
					this.OnIsCheckInOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsCheckInOnly = value;
					this.SendPropertyChanged("IsCheckInOnly");
					this.OnIsCheckInOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshToken", DbType="NVarChar(255)")]
		public string RefreshToken
		{
			get
			{
				return this._RefreshToken;
			}
			set
			{
				if ((this._RefreshToken != value))
				{
					this.OnRefreshTokenChanging(value);
					this.SendPropertyChanging();
					this._RefreshToken = value;
					this.SendPropertyChanged("RefreshToken");
					this.OnRefreshTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="NVarChar(255)")]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketId", DbType="Int")]
		public System.Nullable<int> MarketId
		{
			get
			{
				return this._MarketId;
			}
			set
			{
				if ((this._MarketId != value))
				{
					if (this._Markets.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketIdChanging(value);
					this.SendPropertyChanging();
					this._MarketId = value;
					this.SendPropertyChanged("MarketId");
					this.OnMarketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(255)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarType", DbType="Int")]
		public System.Nullable<int> AvatarType
		{
			get
			{
				return this._AvatarType;
			}
			set
			{
				if ((this._AvatarType != value))
				{
					this.OnAvatarTypeChanging(value);
					this.SendPropertyChanging();
					this._AvatarType = value;
					this.SendPropertyChanged("AvatarType");
					this.OnAvatarTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetToken", DbType="NVarChar(255)")]
		public string PasswordResetToken
		{
			get
			{
				return this._PasswordResetToken;
			}
			set
			{
				if ((this._PasswordResetToken != value))
				{
					this.OnPasswordResetTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetToken = value;
					this.SendPropertyChanged("PasswordResetToken");
					this.OnPasswordResetTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetTokenCreated", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PasswordResetTokenCreated
		{
			get
			{
				return this._PasswordResetTokenCreated;
			}
			set
			{
				if ((this._PasswordResetTokenCreated != value))
				{
					this.OnPasswordResetTokenCreatedChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetTokenCreated = value;
					this.SendPropertyChanged("PasswordResetTokenCreated");
					this.OnPasswordResetTokenCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerCreditLogs", Storage="_CustomerCreditLogs", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<CustomerCreditLogs> CustomerCreditLogs
		{
			get
			{
				return this._CustomerCreditLogs;
			}
			set
			{
				this._CustomerCreditLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerInfoSearchCriteria", Storage="_CustomerInfoSearchCriteria", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<CustomerInfoSearchCriteria> CustomerInfoSearchCriteria
		{
			get
			{
				return this._CustomerInfoSearchCriteria;
			}
			set
			{
				this._CustomerInfoSearchCriteria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_SubsciptionDiscountUseds", Storage="_SubsciptionDiscountUseds", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<SubsciptionDiscountUseds> SubsciptionDiscountUseds
		{
			get
			{
				return this._SubsciptionDiscountUseds;
			}
			set
			{
				this._SubsciptionDiscountUseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_Bookings", Storage="_Bookings", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<Bookings> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerCredits", Storage="_CustomerCredits", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<CustomerCredits> CustomerCredits
		{
			get
			{
				return this._CustomerCredits;
			}
			set
			{
				this._CustomerCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerInfosHotels", Storage="_CustomerInfosHotels", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<CustomerInfosHotels> CustomerInfosHotels
		{
			get
			{
				return this._CustomerInfosHotels;
			}
			set
			{
				this._CustomerInfosHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_SubscriptionBookings", Storage="_SubscriptionBookings", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<SubscriptionBookings> SubscriptionBookings
		{
			get
			{
				return this._SubscriptionBookings;
			}
			set
			{
				this._SubscriptionBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_GiftCardBookings", Storage="_GiftCardBookings", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<GiftCardBookings> GiftCardBookings
		{
			get
			{
				return this._GiftCardBookings;
			}
			set
			{
				this._GiftCardBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markets_CustomerInfos", Storage="_Markets", ThisKey="MarketId", OtherKey="Id", IsForeignKey=true)]
		public Markets Markets
		{
			get
			{
				return this._Markets.Entity;
			}
			set
			{
				Markets previousValue = this._Markets.Entity;
				if (((previousValue != value) 
							|| (this._Markets.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Markets.Entity = null;
						previousValue.CustomerInfos.Remove(this);
					}
					this._Markets.Entity = value;
					if ((value != null))
					{
						value.CustomerInfos.Add(this);
						this._MarketId = value.Id;
					}
					else
					{
						this._MarketId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Markets");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerCreditLogs(CustomerCreditLogs entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_CustomerCreditLogs(CustomerCreditLogs entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_CustomerInfoSearchCriteria(CustomerInfoSearchCriteria entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_CustomerInfoSearchCriteria(CustomerInfoSearchCriteria entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_SubsciptionDiscountUseds(SubsciptionDiscountUseds entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_SubsciptionDiscountUseds(SubsciptionDiscountUseds entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_CustomerCredits(CustomerCredits entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_CustomerCredits(CustomerCredits entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_CustomerInfosHotels(CustomerInfosHotels entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_CustomerInfosHotels(CustomerInfosHotels entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_SubscriptionBookings(SubscriptionBookings entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_SubscriptionBookings(SubscriptionBookings entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
		
		private void attach_GiftCardBookings(GiftCardBookings entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = this;
		}
		
		private void detach_GiftCardBookings(GiftCardBookings entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Markets")]
	public partial class Markets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MarketCode;
		
		private string _State;
		
		private string _Permalink;
		
		private string _LocationName;
		
		private bool _IsActive;
		
		private bool _IsDefault;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _ImageUrl;
		
		private string _PublicId;
		
		private string _Version;
		
		private string _Format;
		
		private bool _IsCalculateTax;
		
		private EntitySet<MarketHotels> _MarketHotels;
		
		private EntitySet<CustomerInfos> _CustomerInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMarketCodeChanging(string value);
    partial void OnMarketCodeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPermalinkChanging(string value);
    partial void OnPermalinkChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnPublicIdChanging(string value);
    partial void OnPublicIdChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnIsCalculateTaxChanging(bool value);
    partial void OnIsCalculateTaxChanged();
    #endregion
		
		public Markets()
		{
			this._MarketHotels = new EntitySet<MarketHotels>(new Action<MarketHotels>(this.attach_MarketHotels), new Action<MarketHotels>(this.detach_MarketHotels));
			this._CustomerInfos = new EntitySet<CustomerInfos>(new Action<CustomerInfos>(this.attach_CustomerInfos), new Action<CustomerInfos>(this.detach_CustomerInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketCode", DbType="NVarChar(50)")]
		public string MarketCode
		{
			get
			{
				return this._MarketCode;
			}
			set
			{
				if ((this._MarketCode != value))
				{
					this.OnMarketCodeChanging(value);
					this.SendPropertyChanging();
					this._MarketCode = value;
					this.SendPropertyChanged("MarketCode");
					this.OnMarketCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NChar(10)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permalink", DbType="NVarChar(50)")]
		public string Permalink
		{
			get
			{
				return this._Permalink;
			}
			set
			{
				if ((this._Permalink != value))
				{
					this.OnPermalinkChanging(value);
					this.SendPropertyChanging();
					this._Permalink = value;
					this.SendPropertyChanged("Permalink");
					this.OnPermalinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(100)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(20)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(20)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(1024)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicId", DbType="NVarChar(1024)")]
		public string PublicId
		{
			get
			{
				return this._PublicId;
			}
			set
			{
				if ((this._PublicId != value))
				{
					this.OnPublicIdChanging(value);
					this.SendPropertyChanging();
					this._PublicId = value;
					this.SendPropertyChanged("PublicId");
					this.OnPublicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(20)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(10)")]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCalculateTax", DbType="Bit NOT NULL")]
		public bool IsCalculateTax
		{
			get
			{
				return this._IsCalculateTax;
			}
			set
			{
				if ((this._IsCalculateTax != value))
				{
					this.OnIsCalculateTaxChanging(value);
					this.SendPropertyChanging();
					this._IsCalculateTax = value;
					this.SendPropertyChanged("IsCalculateTax");
					this.OnIsCalculateTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markets_MarketHotels", Storage="_MarketHotels", ThisKey="Id", OtherKey="MarketId")]
		public EntitySet<MarketHotels> MarketHotels
		{
			get
			{
				return this._MarketHotels;
			}
			set
			{
				this._MarketHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Markets_CustomerInfos", Storage="_CustomerInfos", ThisKey="Id", OtherKey="MarketId")]
		public EntitySet<CustomerInfos> CustomerInfos
		{
			get
			{
				return this._CustomerInfos;
			}
			set
			{
				this._CustomerInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MarketHotels(MarketHotels entity)
		{
			this.SendPropertyChanging();
			entity.Markets = this;
		}
		
		private void detach_MarketHotels(MarketHotels entity)
		{
			this.SendPropertyChanging();
			entity.Markets = null;
		}
		
		private void attach_CustomerInfos(CustomerInfos entity)
		{
			this.SendPropertyChanging();
			entity.Markets = this;
		}
		
		private void detach_CustomerInfos(CustomerInfos entity)
		{
			this.SendPropertyChanging();
			entity.Markets = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiscountBookingsTemps")]
	public partial class DiscountBookingsTemps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountId;
		
		private int _BookingId;
		
		private int _ProductId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    #endregion
		
		public DiscountBookingsTemps()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Survey")]
	public partial class Surveys : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private int _BookingId;
		
		private System.Nullable<double> _Rating;
		
		private string _RateCommend;
		
		private bool _UsePool;
		
		private bool _UseGym;
		
		private bool _UseSpa;
		
		private bool _UseBusinessCenter;
		
		private bool _IsBuyFoodAndDrink;
		
		private System.Nullable<double> _FoodAndDrinkPrice;
		
		private bool _IsPayForParking;
		
		private System.Nullable<double> _ParkingPrice;
		
		private bool _IsBuySpaService;
		
		private System.Nullable<double> _SpaServicePrice;
		
		private bool _IsBuyAdditionalService;
		
		private System.Nullable<double> _AdditionalServicePrice;
		
		private bool _IsFinish;
		
		private int _LastStep;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
		private bool _IsDelete;
		
		private EntityRef<Bookings> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBookingIdChanging(int value);
    partial void OnBookingIdChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnRateCommendChanging(string value);
    partial void OnRateCommendChanged();
    partial void OnUsePoolChanging(bool value);
    partial void OnUsePoolChanged();
    partial void OnUseGymChanging(bool value);
    partial void OnUseGymChanged();
    partial void OnUseSpaChanging(bool value);
    partial void OnUseSpaChanged();
    partial void OnUseBusinessCenterChanging(bool value);
    partial void OnUseBusinessCenterChanged();
    partial void OnIsBuyFoodAndDrinkChanging(bool value);
    partial void OnIsBuyFoodAndDrinkChanged();
    partial void OnFoodAndDrinkPriceChanging(System.Nullable<double> value);
    partial void OnFoodAndDrinkPriceChanged();
    partial void OnIsPayForParkingChanging(bool value);
    partial void OnIsPayForParkingChanged();
    partial void OnParkingPriceChanging(System.Nullable<double> value);
    partial void OnParkingPriceChanged();
    partial void OnIsBuySpaServiceChanging(bool value);
    partial void OnIsBuySpaServiceChanged();
    partial void OnSpaServicePriceChanging(System.Nullable<double> value);
    partial void OnSpaServicePriceChanged();
    partial void OnIsBuyAdditionalServiceChanging(bool value);
    partial void OnIsBuyAdditionalServiceChanged();
    partial void OnAdditionalServicePriceChanging(System.Nullable<double> value);
    partial void OnAdditionalServicePriceChanged();
    partial void OnIsFinishChanging(bool value);
    partial void OnIsFinishChanged();
    partial void OnLastStepChanging(int value);
    partial void OnLastStepChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Surveys()
		{
			this._Bookings = default(EntityRef<Bookings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="Int NOT NULL")]
		public int BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					if (this._Bookings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingIdChanging(value);
					this.SendPropertyChanging();
					this._BookingId = value;
					this.SendPropertyChanged("BookingId");
					this.OnBookingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateCommend", DbType="NVarChar(4000)")]
		public string RateCommend
		{
			get
			{
				return this._RateCommend;
			}
			set
			{
				if ((this._RateCommend != value))
				{
					this.OnRateCommendChanging(value);
					this.SendPropertyChanging();
					this._RateCommend = value;
					this.SendPropertyChanged("RateCommend");
					this.OnRateCommendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePool", DbType="Bit NOT NULL")]
		public bool UsePool
		{
			get
			{
				return this._UsePool;
			}
			set
			{
				if ((this._UsePool != value))
				{
					this.OnUsePoolChanging(value);
					this.SendPropertyChanging();
					this._UsePool = value;
					this.SendPropertyChanged("UsePool");
					this.OnUsePoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseGym", DbType="Bit NOT NULL")]
		public bool UseGym
		{
			get
			{
				return this._UseGym;
			}
			set
			{
				if ((this._UseGym != value))
				{
					this.OnUseGymChanging(value);
					this.SendPropertyChanging();
					this._UseGym = value;
					this.SendPropertyChanged("UseGym");
					this.OnUseGymChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseSpa", DbType="Bit NOT NULL")]
		public bool UseSpa
		{
			get
			{
				return this._UseSpa;
			}
			set
			{
				if ((this._UseSpa != value))
				{
					this.OnUseSpaChanging(value);
					this.SendPropertyChanging();
					this._UseSpa = value;
					this.SendPropertyChanged("UseSpa");
					this.OnUseSpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseBusinessCenter", DbType="Bit NOT NULL")]
		public bool UseBusinessCenter
		{
			get
			{
				return this._UseBusinessCenter;
			}
			set
			{
				if ((this._UseBusinessCenter != value))
				{
					this.OnUseBusinessCenterChanging(value);
					this.SendPropertyChanging();
					this._UseBusinessCenter = value;
					this.SendPropertyChanged("UseBusinessCenter");
					this.OnUseBusinessCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuyFoodAndDrink", DbType="Bit NOT NULL")]
		public bool IsBuyFoodAndDrink
		{
			get
			{
				return this._IsBuyFoodAndDrink;
			}
			set
			{
				if ((this._IsBuyFoodAndDrink != value))
				{
					this.OnIsBuyFoodAndDrinkChanging(value);
					this.SendPropertyChanging();
					this._IsBuyFoodAndDrink = value;
					this.SendPropertyChanged("IsBuyFoodAndDrink");
					this.OnIsBuyFoodAndDrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodAndDrinkPrice", DbType="Float")]
		public System.Nullable<double> FoodAndDrinkPrice
		{
			get
			{
				return this._FoodAndDrinkPrice;
			}
			set
			{
				if ((this._FoodAndDrinkPrice != value))
				{
					this.OnFoodAndDrinkPriceChanging(value);
					this.SendPropertyChanging();
					this._FoodAndDrinkPrice = value;
					this.SendPropertyChanged("FoodAndDrinkPrice");
					this.OnFoodAndDrinkPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayForParking", DbType="Bit NOT NULL")]
		public bool IsPayForParking
		{
			get
			{
				return this._IsPayForParking;
			}
			set
			{
				if ((this._IsPayForParking != value))
				{
					this.OnIsPayForParkingChanging(value);
					this.SendPropertyChanging();
					this._IsPayForParking = value;
					this.SendPropertyChanged("IsPayForParking");
					this.OnIsPayForParkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingPrice", DbType="Float")]
		public System.Nullable<double> ParkingPrice
		{
			get
			{
				return this._ParkingPrice;
			}
			set
			{
				if ((this._ParkingPrice != value))
				{
					this.OnParkingPriceChanging(value);
					this.SendPropertyChanging();
					this._ParkingPrice = value;
					this.SendPropertyChanged("ParkingPrice");
					this.OnParkingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuySpaService", DbType="Bit NOT NULL")]
		public bool IsBuySpaService
		{
			get
			{
				return this._IsBuySpaService;
			}
			set
			{
				if ((this._IsBuySpaService != value))
				{
					this.OnIsBuySpaServiceChanging(value);
					this.SendPropertyChanging();
					this._IsBuySpaService = value;
					this.SendPropertyChanged("IsBuySpaService");
					this.OnIsBuySpaServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaServicePrice", DbType="Float")]
		public System.Nullable<double> SpaServicePrice
		{
			get
			{
				return this._SpaServicePrice;
			}
			set
			{
				if ((this._SpaServicePrice != value))
				{
					this.OnSpaServicePriceChanging(value);
					this.SendPropertyChanging();
					this._SpaServicePrice = value;
					this.SendPropertyChanged("SpaServicePrice");
					this.OnSpaServicePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuyAdditionalService", DbType="Bit NOT NULL")]
		public bool IsBuyAdditionalService
		{
			get
			{
				return this._IsBuyAdditionalService;
			}
			set
			{
				if ((this._IsBuyAdditionalService != value))
				{
					this.OnIsBuyAdditionalServiceChanging(value);
					this.SendPropertyChanging();
					this._IsBuyAdditionalService = value;
					this.SendPropertyChanged("IsBuyAdditionalService");
					this.OnIsBuyAdditionalServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalServicePrice", DbType="Float")]
		public System.Nullable<double> AdditionalServicePrice
		{
			get
			{
				return this._AdditionalServicePrice;
			}
			set
			{
				if ((this._AdditionalServicePrice != value))
				{
					this.OnAdditionalServicePriceChanging(value);
					this.SendPropertyChanging();
					this._AdditionalServicePrice = value;
					this.SendPropertyChanged("AdditionalServicePrice");
					this.OnAdditionalServicePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinish", DbType="Bit NOT NULL")]
		public bool IsFinish
		{
			get
			{
				return this._IsFinish;
			}
			set
			{
				if ((this._IsFinish != value))
				{
					this.OnIsFinishChanging(value);
					this.SendPropertyChanging();
					this._IsFinish = value;
					this.SendPropertyChanged("IsFinish");
					this.OnIsFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStep", DbType="Int NOT NULL")]
		public int LastStep
		{
			get
			{
				return this._LastStep;
			}
			set
			{
				if ((this._LastStep != value))
				{
					this.OnLastStepChanging(value);
					this.SendPropertyChanging();
					this._LastStep = value;
					this.SendPropertyChanged("LastStep");
					this.OnLastStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bookings_Surveys", Storage="_Bookings", ThisKey="BookingId", OtherKey="BookingId", IsForeignKey=true)]
		public Bookings Bookings
		{
			get
			{
				return this._Bookings.Entity;
			}
			set
			{
				Bookings previousValue = this._Bookings.Entity;
				if (((previousValue != value) 
							|| (this._Bookings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bookings.Entity = null;
						previousValue.Surveys.Remove(this);
					}
					this._Bookings.Entity = value;
					if ((value != null))
					{
						value.Surveys.Add(this);
						this._BookingId = value.BookingId;
					}
					else
					{
						this._BookingId = default(int);
					}
					this.SendPropertyChanged("Bookings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriptions")]
	public partial class Subscriptions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubscriptionType;
		
		private string _Name;
		
		private int _MaxGuest;
		
		private double _Price;
		
		private string _ProductHighlight;
		
		private string _WhatYouGet;
		
		private string _MetaDescription;
		
		private string _MetaKeyword;
		
		private string _StripePlanId;
		
		private System.DateTime _StripePlanCreated;
		
		private bool _IsActive;
		
		private bool _IsDelete;
		
		private bool _IsUpgrade;
		
		private int _MaxPurchases;
		
		private EntitySet<SubscriptionBookingDiscounts> _SubscriptionBookingDiscounts;
		
		private EntitySet<SubscriptionImages> _SubscriptionImages;
		
		private EntitySet<SubscriptionBookings> _SubscriptionBookings;
		
		private EntitySet<DiscountSubscriptions> _DiscountSubscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubscriptionTypeChanging(int value);
    partial void OnSubscriptionTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMaxGuestChanging(int value);
    partial void OnMaxGuestChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnProductHighlightChanging(string value);
    partial void OnProductHighlightChanged();
    partial void OnWhatYouGetChanging(string value);
    partial void OnWhatYouGetChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    partial void OnStripePlanIdChanging(string value);
    partial void OnStripePlanIdChanged();
    partial void OnStripePlanCreatedChanging(System.DateTime value);
    partial void OnStripePlanCreatedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnIsUpgradeChanging(bool value);
    partial void OnIsUpgradeChanged();
    partial void OnMaxPurchasesChanging(int value);
    partial void OnMaxPurchasesChanged();
    #endregion
		
		public Subscriptions()
		{
			this._SubscriptionBookingDiscounts = new EntitySet<SubscriptionBookingDiscounts>(new Action<SubscriptionBookingDiscounts>(this.attach_SubscriptionBookingDiscounts), new Action<SubscriptionBookingDiscounts>(this.detach_SubscriptionBookingDiscounts));
			this._SubscriptionImages = new EntitySet<SubscriptionImages>(new Action<SubscriptionImages>(this.attach_SubscriptionImages), new Action<SubscriptionImages>(this.detach_SubscriptionImages));
			this._SubscriptionBookings = new EntitySet<SubscriptionBookings>(new Action<SubscriptionBookings>(this.attach_SubscriptionBookings), new Action<SubscriptionBookings>(this.detach_SubscriptionBookings));
			this._DiscountSubscriptions = new EntitySet<DiscountSubscriptions>(new Action<DiscountSubscriptions>(this.attach_DiscountSubscriptions), new Action<DiscountSubscriptions>(this.detach_DiscountSubscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionType", DbType="Int NOT NULL")]
		public int SubscriptionType
		{
			get
			{
				return this._SubscriptionType;
			}
			set
			{
				if ((this._SubscriptionType != value))
				{
					this.OnSubscriptionTypeChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionType = value;
					this.SendPropertyChanged("SubscriptionType");
					this.OnSubscriptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxGuest", DbType="Int NOT NULL")]
		public int MaxGuest
		{
			get
			{
				return this._MaxGuest;
			}
			set
			{
				if ((this._MaxGuest != value))
				{
					this.OnMaxGuestChanging(value);
					this.SendPropertyChanging();
					this._MaxGuest = value;
					this.SendPropertyChanged("MaxGuest");
					this.OnMaxGuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductHighlight", DbType="NVarChar(MAX)")]
		public string ProductHighlight
		{
			get
			{
				return this._ProductHighlight;
			}
			set
			{
				if ((this._ProductHighlight != value))
				{
					this.OnProductHighlightChanging(value);
					this.SendPropertyChanging();
					this._ProductHighlight = value;
					this.SendPropertyChanged("ProductHighlight");
					this.OnProductHighlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatYouGet", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string WhatYouGet
		{
			get
			{
				return this._WhatYouGet;
			}
			set
			{
				if ((this._WhatYouGet != value))
				{
					this.OnWhatYouGetChanging(value);
					this.SendPropertyChanging();
					this._WhatYouGet = value;
					this.SendPropertyChanged("WhatYouGet");
					this.OnWhatYouGetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(4000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NVarChar(4000)")]
		public string MetaKeyword
		{
			get
			{
				return this._MetaKeyword;
			}
			set
			{
				if ((this._MetaKeyword != value))
				{
					this.OnMetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._MetaKeyword = value;
					this.SendPropertyChanged("MetaKeyword");
					this.OnMetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripePlanId", DbType="NVarChar(200)")]
		public string StripePlanId
		{
			get
			{
				return this._StripePlanId;
			}
			set
			{
				if ((this._StripePlanId != value))
				{
					this.OnStripePlanIdChanging(value);
					this.SendPropertyChanging();
					this._StripePlanId = value;
					this.SendPropertyChanged("StripePlanId");
					this.OnStripePlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripePlanCreated", DbType="DateTime NOT NULL")]
		public System.DateTime StripePlanCreated
		{
			get
			{
				return this._StripePlanCreated;
			}
			set
			{
				if ((this._StripePlanCreated != value))
				{
					this.OnStripePlanCreatedChanging(value);
					this.SendPropertyChanging();
					this._StripePlanCreated = value;
					this.SendPropertyChanged("StripePlanCreated");
					this.OnStripePlanCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpgrade", DbType="Bit NOT NULL")]
		public bool IsUpgrade
		{
			get
			{
				return this._IsUpgrade;
			}
			set
			{
				if ((this._IsUpgrade != value))
				{
					this.OnIsUpgradeChanging(value);
					this.SendPropertyChanging();
					this._IsUpgrade = value;
					this.SendPropertyChanged("IsUpgrade");
					this.OnIsUpgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPurchases", DbType="Int NOT NULL")]
		public int MaxPurchases
		{
			get
			{
				return this._MaxPurchases;
			}
			set
			{
				if ((this._MaxPurchases != value))
				{
					this.OnMaxPurchasesChanging(value);
					this.SendPropertyChanging();
					this._MaxPurchases = value;
					this.SendPropertyChanged("MaxPurchases");
					this.OnMaxPurchasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_SubscriptionBookingDiscounts", Storage="_SubscriptionBookingDiscounts", ThisKey="Id", OtherKey="SubscriptionId")]
		public EntitySet<SubscriptionBookingDiscounts> SubscriptionBookingDiscounts
		{
			get
			{
				return this._SubscriptionBookingDiscounts;
			}
			set
			{
				this._SubscriptionBookingDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_SubscriptionImages", Storage="_SubscriptionImages", ThisKey="Id", OtherKey="SubscriptionId")]
		public EntitySet<SubscriptionImages> SubscriptionImages
		{
			get
			{
				return this._SubscriptionImages;
			}
			set
			{
				this._SubscriptionImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_SubscriptionBookings", Storage="_SubscriptionBookings", ThisKey="Id", OtherKey="SubscriptionId")]
		public EntitySet<SubscriptionBookings> SubscriptionBookings
		{
			get
			{
				return this._SubscriptionBookings;
			}
			set
			{
				this._SubscriptionBookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_DiscountSubscriptions", Storage="_DiscountSubscriptions", ThisKey="Id", OtherKey="SubscriptionId")]
		public EntitySet<DiscountSubscriptions> DiscountSubscriptions
		{
			get
			{
				return this._DiscountSubscriptions;
			}
			set
			{
				this._DiscountSubscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubscriptionBookingDiscounts(SubscriptionBookingDiscounts entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = this;
		}
		
		private void detach_SubscriptionBookingDiscounts(SubscriptionBookingDiscounts entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = null;
		}
		
		private void attach_SubscriptionImages(SubscriptionImages entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = this;
		}
		
		private void detach_SubscriptionImages(SubscriptionImages entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = null;
		}
		
		private void attach_SubscriptionBookings(SubscriptionBookings entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = this;
		}
		
		private void detach_SubscriptionBookings(SubscriptionBookings entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = null;
		}
		
		private void attach_DiscountSubscriptions(DiscountSubscriptions entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = this;
		}
		
		private void detach_DiscountSubscriptions(DiscountSubscriptions entity)
		{
			this.SendPropertyChanging();
			entity.Subscriptions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiscountProducts")]
	public partial class DiscountProducts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountId;
		
		private int _ProductId;
		
		private EntityRef<Discounts> _Discounts;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    #endregion
		
		public DiscountProducts()
		{
			this._Discounts = default(EntityRef<Discounts>);
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._Discounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_DiscountProducts", Storage="_Discounts", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public Discounts Discounts
		{
			get
			{
				return this._Discounts.Entity;
			}
			set
			{
				Discounts previousValue = this._Discounts.Entity;
				if (((previousValue != value) 
							|| (this._Discounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discounts.Entity = null;
						previousValue.DiscountProducts.Remove(this);
					}
					this._Discounts.Entity = value;
					if ((value != null))
					{
						value.DiscountProducts.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("Discounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_DiscountProducts", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.DiscountProducts.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.DiscountProducts.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultPrices")]
	public partial class DefaultPrices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private double _PriceMon;
		
		private double _PriceTue;
		
		private double _PriceWed;
		
		private double _PriceThu;
		
		private double _PriceFri;
		
		private double _PriceSat;
		
		private double _PriceSun;
		
		private double _UpgradeDiscountMon;
		
		private double _UpgradeDiscountTue;
		
		private double _UpgradeDiscountWed;
		
		private double _UpgradeDiscountThu;
		
		private double _UpgradeDiscountFri;
		
		private double _UpgradeDiscountSat;
		
		private double _UpgradeDiscountSun;
		
		private int _DailyDayPass;
		
		private int _DailyCabana;
		
		private int _DailySpa;
		
		private int _DailyDaybed;
		
		private System.DateTime _EffectiveDate;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
		private int _PassCapacityMon;
		
		private int _PassCapacityTue;
		
		private int _PassCapacityWed;
		
		private int _PassCapacityThu;
		
		private int _PassCapacityFri;
		
		private int _PassCapacitySat;
		
		private int _PassCapacitySun;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnPriceMonChanging(double value);
    partial void OnPriceMonChanged();
    partial void OnPriceTueChanging(double value);
    partial void OnPriceTueChanged();
    partial void OnPriceWedChanging(double value);
    partial void OnPriceWedChanged();
    partial void OnPriceThuChanging(double value);
    partial void OnPriceThuChanged();
    partial void OnPriceFriChanging(double value);
    partial void OnPriceFriChanged();
    partial void OnPriceSatChanging(double value);
    partial void OnPriceSatChanged();
    partial void OnPriceSunChanging(double value);
    partial void OnPriceSunChanged();
    partial void OnUpgradeDiscountMonChanging(double value);
    partial void OnUpgradeDiscountMonChanged();
    partial void OnUpgradeDiscountTueChanging(double value);
    partial void OnUpgradeDiscountTueChanged();
    partial void OnUpgradeDiscountWedChanging(double value);
    partial void OnUpgradeDiscountWedChanged();
    partial void OnUpgradeDiscountThuChanging(double value);
    partial void OnUpgradeDiscountThuChanged();
    partial void OnUpgradeDiscountFriChanging(double value);
    partial void OnUpgradeDiscountFriChanged();
    partial void OnUpgradeDiscountSatChanging(double value);
    partial void OnUpgradeDiscountSatChanged();
    partial void OnUpgradeDiscountSunChanging(double value);
    partial void OnUpgradeDiscountSunChanged();
    partial void OnDailyDayPassChanging(int value);
    partial void OnDailyDayPassChanged();
    partial void OnDailyCabanaChanging(int value);
    partial void OnDailyCabanaChanged();
    partial void OnDailySpaChanging(int value);
    partial void OnDailySpaChanged();
    partial void OnDailyDaybedChanging(int value);
    partial void OnDailyDaybedChanged();
    partial void OnEffectiveDateChanging(System.DateTime value);
    partial void OnEffectiveDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnPassCapacityMonChanging(int value);
    partial void OnPassCapacityMonChanged();
    partial void OnPassCapacityTueChanging(int value);
    partial void OnPassCapacityTueChanged();
    partial void OnPassCapacityWedChanging(int value);
    partial void OnPassCapacityWedChanged();
    partial void OnPassCapacityThuChanging(int value);
    partial void OnPassCapacityThuChanged();
    partial void OnPassCapacityFriChanging(int value);
    partial void OnPassCapacityFriChanged();
    partial void OnPassCapacitySatChanging(int value);
    partial void OnPassCapacitySatChanged();
    partial void OnPassCapacitySunChanging(int value);
    partial void OnPassCapacitySunChanged();
    #endregion
		
		public DefaultPrices()
		{
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceMon", DbType="Float NOT NULL")]
		public double PriceMon
		{
			get
			{
				return this._PriceMon;
			}
			set
			{
				if ((this._PriceMon != value))
				{
					this.OnPriceMonChanging(value);
					this.SendPropertyChanging();
					this._PriceMon = value;
					this.SendPropertyChanged("PriceMon");
					this.OnPriceMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTue", DbType="Float NOT NULL")]
		public double PriceTue
		{
			get
			{
				return this._PriceTue;
			}
			set
			{
				if ((this._PriceTue != value))
				{
					this.OnPriceTueChanging(value);
					this.SendPropertyChanging();
					this._PriceTue = value;
					this.SendPropertyChanged("PriceTue");
					this.OnPriceTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceWed", DbType="Float NOT NULL")]
		public double PriceWed
		{
			get
			{
				return this._PriceWed;
			}
			set
			{
				if ((this._PriceWed != value))
				{
					this.OnPriceWedChanging(value);
					this.SendPropertyChanging();
					this._PriceWed = value;
					this.SendPropertyChanged("PriceWed");
					this.OnPriceWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceThu", DbType="Float NOT NULL")]
		public double PriceThu
		{
			get
			{
				return this._PriceThu;
			}
			set
			{
				if ((this._PriceThu != value))
				{
					this.OnPriceThuChanging(value);
					this.SendPropertyChanging();
					this._PriceThu = value;
					this.SendPropertyChanged("PriceThu");
					this.OnPriceThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFri", DbType="Float NOT NULL")]
		public double PriceFri
		{
			get
			{
				return this._PriceFri;
			}
			set
			{
				if ((this._PriceFri != value))
				{
					this.OnPriceFriChanging(value);
					this.SendPropertyChanging();
					this._PriceFri = value;
					this.SendPropertyChanged("PriceFri");
					this.OnPriceFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSat", DbType="Float NOT NULL")]
		public double PriceSat
		{
			get
			{
				return this._PriceSat;
			}
			set
			{
				if ((this._PriceSat != value))
				{
					this.OnPriceSatChanging(value);
					this.SendPropertyChanging();
					this._PriceSat = value;
					this.SendPropertyChanged("PriceSat");
					this.OnPriceSatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceSun", DbType="Float NOT NULL")]
		public double PriceSun
		{
			get
			{
				return this._PriceSun;
			}
			set
			{
				if ((this._PriceSun != value))
				{
					this.OnPriceSunChanging(value);
					this.SendPropertyChanging();
					this._PriceSun = value;
					this.SendPropertyChanged("PriceSun");
					this.OnPriceSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountMon", DbType="Float NOT NULL")]
		public double UpgradeDiscountMon
		{
			get
			{
				return this._UpgradeDiscountMon;
			}
			set
			{
				if ((this._UpgradeDiscountMon != value))
				{
					this.OnUpgradeDiscountMonChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountMon = value;
					this.SendPropertyChanged("UpgradeDiscountMon");
					this.OnUpgradeDiscountMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountTue", DbType="Float NOT NULL")]
		public double UpgradeDiscountTue
		{
			get
			{
				return this._UpgradeDiscountTue;
			}
			set
			{
				if ((this._UpgradeDiscountTue != value))
				{
					this.OnUpgradeDiscountTueChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountTue = value;
					this.SendPropertyChanged("UpgradeDiscountTue");
					this.OnUpgradeDiscountTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountWed", DbType="Float NOT NULL")]
		public double UpgradeDiscountWed
		{
			get
			{
				return this._UpgradeDiscountWed;
			}
			set
			{
				if ((this._UpgradeDiscountWed != value))
				{
					this.OnUpgradeDiscountWedChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountWed = value;
					this.SendPropertyChanged("UpgradeDiscountWed");
					this.OnUpgradeDiscountWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountThu", DbType="Float NOT NULL")]
		public double UpgradeDiscountThu
		{
			get
			{
				return this._UpgradeDiscountThu;
			}
			set
			{
				if ((this._UpgradeDiscountThu != value))
				{
					this.OnUpgradeDiscountThuChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountThu = value;
					this.SendPropertyChanged("UpgradeDiscountThu");
					this.OnUpgradeDiscountThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountFri", DbType="Float NOT NULL")]
		public double UpgradeDiscountFri
		{
			get
			{
				return this._UpgradeDiscountFri;
			}
			set
			{
				if ((this._UpgradeDiscountFri != value))
				{
					this.OnUpgradeDiscountFriChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountFri = value;
					this.SendPropertyChanged("UpgradeDiscountFri");
					this.OnUpgradeDiscountFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountSat", DbType="Float NOT NULL")]
		public double UpgradeDiscountSat
		{
			get
			{
				return this._UpgradeDiscountSat;
			}
			set
			{
				if ((this._UpgradeDiscountSat != value))
				{
					this.OnUpgradeDiscountSatChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountSat = value;
					this.SendPropertyChanged("UpgradeDiscountSat");
					this.OnUpgradeDiscountSatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeDiscountSun", DbType="Float NOT NULL")]
		public double UpgradeDiscountSun
		{
			get
			{
				return this._UpgradeDiscountSun;
			}
			set
			{
				if ((this._UpgradeDiscountSun != value))
				{
					this.OnUpgradeDiscountSunChanging(value);
					this.SendPropertyChanging();
					this._UpgradeDiscountSun = value;
					this.SendPropertyChanged("UpgradeDiscountSun");
					this.OnUpgradeDiscountSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyDayPass", DbType="Int NOT NULL")]
		public int DailyDayPass
		{
			get
			{
				return this._DailyDayPass;
			}
			set
			{
				if ((this._DailyDayPass != value))
				{
					this.OnDailyDayPassChanging(value);
					this.SendPropertyChanging();
					this._DailyDayPass = value;
					this.SendPropertyChanged("DailyDayPass");
					this.OnDailyDayPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyCabana", DbType="Int NOT NULL")]
		public int DailyCabana
		{
			get
			{
				return this._DailyCabana;
			}
			set
			{
				if ((this._DailyCabana != value))
				{
					this.OnDailyCabanaChanging(value);
					this.SendPropertyChanging();
					this._DailyCabana = value;
					this.SendPropertyChanged("DailyCabana");
					this.OnDailyCabanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySpa", DbType="Int NOT NULL")]
		public int DailySpa
		{
			get
			{
				return this._DailySpa;
			}
			set
			{
				if ((this._DailySpa != value))
				{
					this.OnDailySpaChanging(value);
					this.SendPropertyChanging();
					this._DailySpa = value;
					this.SendPropertyChanged("DailySpa");
					this.OnDailySpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyDaybed", DbType="Int NOT NULL")]
		public int DailyDaybed
		{
			get
			{
				return this._DailyDaybed;
			}
			set
			{
				if ((this._DailyDaybed != value))
				{
					this.OnDailyDaybedChanging(value);
					this.SendPropertyChanging();
					this._DailyDaybed = value;
					this.SendPropertyChanged("DailyDaybed");
					this.OnDailyDaybedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityMon", DbType="Int NOT NULL")]
		public int PassCapacityMon
		{
			get
			{
				return this._PassCapacityMon;
			}
			set
			{
				if ((this._PassCapacityMon != value))
				{
					this.OnPassCapacityMonChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityMon = value;
					this.SendPropertyChanged("PassCapacityMon");
					this.OnPassCapacityMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityTue", DbType="Int NOT NULL")]
		public int PassCapacityTue
		{
			get
			{
				return this._PassCapacityTue;
			}
			set
			{
				if ((this._PassCapacityTue != value))
				{
					this.OnPassCapacityTueChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityTue = value;
					this.SendPropertyChanged("PassCapacityTue");
					this.OnPassCapacityTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityWed", DbType="Int NOT NULL")]
		public int PassCapacityWed
		{
			get
			{
				return this._PassCapacityWed;
			}
			set
			{
				if ((this._PassCapacityWed != value))
				{
					this.OnPassCapacityWedChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityWed = value;
					this.SendPropertyChanged("PassCapacityWed");
					this.OnPassCapacityWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityThu", DbType="Int NOT NULL")]
		public int PassCapacityThu
		{
			get
			{
				return this._PassCapacityThu;
			}
			set
			{
				if ((this._PassCapacityThu != value))
				{
					this.OnPassCapacityThuChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityThu = value;
					this.SendPropertyChanged("PassCapacityThu");
					this.OnPassCapacityThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacityFri", DbType="Int NOT NULL")]
		public int PassCapacityFri
		{
			get
			{
				return this._PassCapacityFri;
			}
			set
			{
				if ((this._PassCapacityFri != value))
				{
					this.OnPassCapacityFriChanging(value);
					this.SendPropertyChanging();
					this._PassCapacityFri = value;
					this.SendPropertyChanged("PassCapacityFri");
					this.OnPassCapacityFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacitySat", DbType="Int NOT NULL")]
		public int PassCapacitySat
		{
			get
			{
				return this._PassCapacitySat;
			}
			set
			{
				if ((this._PassCapacitySat != value))
				{
					this.OnPassCapacitySatChanging(value);
					this.SendPropertyChanging();
					this._PassCapacitySat = value;
					this.SendPropertyChanged("PassCapacitySat");
					this.OnPassCapacitySatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacitySun", DbType="Int NOT NULL")]
		public int PassCapacitySun
		{
			get
			{
				return this._PassCapacitySun;
			}
			set
			{
				if ((this._PassCapacitySun != value))
				{
					this.OnPassCapacitySunChanging(value);
					this.SendPropertyChanging();
					this._PassCapacitySun = value;
					this.SendPropertyChanged("PassCapacitySun");
					this.OnPassCapacitySunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_DefaultPrices", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.DefaultPrices.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.DefaultPrices.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductImages")]
	public partial class ProductImages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private string _Url;
		
		private bool _IsCover;
		
		private int _Order;
		
		private bool _IsActive;
		
		private string _ImageTitle;
		
		private EntityRef<Products> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIsCoverChanging(bool value);
    partial void OnIsCoverChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnImageTitleChanging(string value);
    partial void OnImageTitleChanged();
    #endregion
		
		public ProductImages()
		{
			this._Products = default(EntityRef<Products>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
		public bool IsCover
		{
			get
			{
				return this._IsCover;
			}
			set
			{
				if ((this._IsCover != value))
				{
					this.OnIsCoverChanging(value);
					this.SendPropertyChanging();
					this._IsCover = value;
					this.SendPropertyChanged("IsCover");
					this.OnIsCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTitle", DbType="NVarChar(200)")]
		public string ImageTitle
		{
			get
			{
				return this._ImageTitle;
			}
			set
			{
				if ((this._ImageTitle != value))
				{
					this.OnImageTitleChanging(value);
					this.SendPropertyChanging();
					this._ImageTitle = value;
					this.SendPropertyChanged("ImageTitle");
					this.OnImageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Products_ProductImages", Storage="_Products", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Products Products
		{
			get
			{
				return this._Products.Entity;
			}
			set
			{
				Products previousValue = this._Products.Entity;
				if (((previousValue != value) 
							|| (this._Products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Products.Entity = null;
						previousValue.ProductImages.Remove(this);
					}
					this._Products.Entity = value;
					if ((value != null))
					{
						value.ProductImages.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Products");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Amenties")]
	public partial class Amenties : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _HotelId;
		
		private bool _IsActive;
		
		private string _PoolHours;
		
		private string _GymHours;
		
		private string _SpaHours;
		
		private string _BusinessCenterHours;
		
		private string _OtherHours;
		
		private bool _PoolActive;
		
		private bool _GymActive;
		
		private bool _SpaActive;
		
		private bool _BusinessActive;
		
		private bool _OtherActive;
		
		private bool _DinningActive;
		
		private bool _EventActive;
		
		private string _DinningHours;
		
		private string _EventHours;
		
		private EntitySet<AmentyLists> _AmentyLists;
		
		private EntityRef<Hotels> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPoolHoursChanging(string value);
    partial void OnPoolHoursChanged();
    partial void OnGymHoursChanging(string value);
    partial void OnGymHoursChanged();
    partial void OnSpaHoursChanging(string value);
    partial void OnSpaHoursChanged();
    partial void OnBusinessCenterHoursChanging(string value);
    partial void OnBusinessCenterHoursChanged();
    partial void OnOtherHoursChanging(string value);
    partial void OnOtherHoursChanged();
    partial void OnPoolActiveChanging(bool value);
    partial void OnPoolActiveChanged();
    partial void OnGymActiveChanging(bool value);
    partial void OnGymActiveChanged();
    partial void OnSpaActiveChanging(bool value);
    partial void OnSpaActiveChanged();
    partial void OnBusinessActiveChanging(bool value);
    partial void OnBusinessActiveChanged();
    partial void OnOtherActiveChanging(bool value);
    partial void OnOtherActiveChanged();
    partial void OnDinningActiveChanging(bool value);
    partial void OnDinningActiveChanged();
    partial void OnEventActiveChanging(bool value);
    partial void OnEventActiveChanged();
    partial void OnDinningHoursChanging(string value);
    partial void OnDinningHoursChanged();
    partial void OnEventHoursChanging(string value);
    partial void OnEventHoursChanged();
    #endregion
		
		public Amenties()
		{
			this._AmentyLists = new EntitySet<AmentyLists>(new Action<AmentyLists>(this.attach_AmentyLists), new Action<AmentyLists>(this.detach_AmentyLists));
			this._Hotels = default(EntityRef<Hotels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoolHours", DbType="NVarChar(200)")]
		public string PoolHours
		{
			get
			{
				return this._PoolHours;
			}
			set
			{
				if ((this._PoolHours != value))
				{
					this.OnPoolHoursChanging(value);
					this.SendPropertyChanging();
					this._PoolHours = value;
					this.SendPropertyChanged("PoolHours");
					this.OnPoolHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GymHours", DbType="NVarChar(200)")]
		public string GymHours
		{
			get
			{
				return this._GymHours;
			}
			set
			{
				if ((this._GymHours != value))
				{
					this.OnGymHoursChanging(value);
					this.SendPropertyChanging();
					this._GymHours = value;
					this.SendPropertyChanged("GymHours");
					this.OnGymHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaHours", DbType="NVarChar(200)")]
		public string SpaHours
		{
			get
			{
				return this._SpaHours;
			}
			set
			{
				if ((this._SpaHours != value))
				{
					this.OnSpaHoursChanging(value);
					this.SendPropertyChanging();
					this._SpaHours = value;
					this.SendPropertyChanged("SpaHours");
					this.OnSpaHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessCenterHours", DbType="NVarChar(200)")]
		public string BusinessCenterHours
		{
			get
			{
				return this._BusinessCenterHours;
			}
			set
			{
				if ((this._BusinessCenterHours != value))
				{
					this.OnBusinessCenterHoursChanging(value);
					this.SendPropertyChanging();
					this._BusinessCenterHours = value;
					this.SendPropertyChanged("BusinessCenterHours");
					this.OnBusinessCenterHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherHours", DbType="NVarChar(200)")]
		public string OtherHours
		{
			get
			{
				return this._OtherHours;
			}
			set
			{
				if ((this._OtherHours != value))
				{
					this.OnOtherHoursChanging(value);
					this.SendPropertyChanging();
					this._OtherHours = value;
					this.SendPropertyChanged("OtherHours");
					this.OnOtherHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoolActive", DbType="Bit NOT NULL")]
		public bool PoolActive
		{
			get
			{
				return this._PoolActive;
			}
			set
			{
				if ((this._PoolActive != value))
				{
					this.OnPoolActiveChanging(value);
					this.SendPropertyChanging();
					this._PoolActive = value;
					this.SendPropertyChanged("PoolActive");
					this.OnPoolActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GymActive", DbType="Bit NOT NULL")]
		public bool GymActive
		{
			get
			{
				return this._GymActive;
			}
			set
			{
				if ((this._GymActive != value))
				{
					this.OnGymActiveChanging(value);
					this.SendPropertyChanging();
					this._GymActive = value;
					this.SendPropertyChanged("GymActive");
					this.OnGymActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaActive", DbType="Bit NOT NULL")]
		public bool SpaActive
		{
			get
			{
				return this._SpaActive;
			}
			set
			{
				if ((this._SpaActive != value))
				{
					this.OnSpaActiveChanging(value);
					this.SendPropertyChanging();
					this._SpaActive = value;
					this.SendPropertyChanged("SpaActive");
					this.OnSpaActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessActive", DbType="Bit NOT NULL")]
		public bool BusinessActive
		{
			get
			{
				return this._BusinessActive;
			}
			set
			{
				if ((this._BusinessActive != value))
				{
					this.OnBusinessActiveChanging(value);
					this.SendPropertyChanging();
					this._BusinessActive = value;
					this.SendPropertyChanged("BusinessActive");
					this.OnBusinessActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherActive", DbType="Bit NOT NULL")]
		public bool OtherActive
		{
			get
			{
				return this._OtherActive;
			}
			set
			{
				if ((this._OtherActive != value))
				{
					this.OnOtherActiveChanging(value);
					this.SendPropertyChanging();
					this._OtherActive = value;
					this.SendPropertyChanged("OtherActive");
					this.OnOtherActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DinningActive", DbType="Bit NOT NULL")]
		public bool DinningActive
		{
			get
			{
				return this._DinningActive;
			}
			set
			{
				if ((this._DinningActive != value))
				{
					this.OnDinningActiveChanging(value);
					this.SendPropertyChanging();
					this._DinningActive = value;
					this.SendPropertyChanged("DinningActive");
					this.OnDinningActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventActive", DbType="Bit NOT NULL")]
		public bool EventActive
		{
			get
			{
				return this._EventActive;
			}
			set
			{
				if ((this._EventActive != value))
				{
					this.OnEventActiveChanging(value);
					this.SendPropertyChanging();
					this._EventActive = value;
					this.SendPropertyChanged("EventActive");
					this.OnEventActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DinningHours", DbType="NVarChar(200)")]
		public string DinningHours
		{
			get
			{
				return this._DinningHours;
			}
			set
			{
				if ((this._DinningHours != value))
				{
					this.OnDinningHoursChanging(value);
					this.SendPropertyChanging();
					this._DinningHours = value;
					this.SendPropertyChanged("DinningHours");
					this.OnDinningHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventHours", DbType="NVarChar(200)")]
		public string EventHours
		{
			get
			{
				return this._EventHours;
			}
			set
			{
				if ((this._EventHours != value))
				{
					this.OnEventHoursChanging(value);
					this.SendPropertyChanging();
					this._EventHours = value;
					this.SendPropertyChanged("EventHours");
					this.OnEventHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Amenties_AmentyLists", Storage="_AmentyLists", ThisKey="Id", OtherKey="AmentyId")]
		public EntitySet<AmentyLists> AmentyLists
		{
			get
			{
				return this._AmentyLists;
			}
			set
			{
				this._AmentyLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_Amenties", Storage="_Hotels", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotels Hotels
		{
			get
			{
				return this._Hotels.Entity;
			}
			set
			{
				Hotels previousValue = this._Hotels.Entity;
				if (((previousValue != value) 
							|| (this._Hotels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotels.Entity = null;
						previousValue.Amenties.Remove(this);
					}
					this._Hotels.Entity = value;
					if ((value != null))
					{
						value.Amenties.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AmentyLists(AmentyLists entity)
		{
			this.SendPropertyChanging();
			entity.Amenties = this;
		}
		
		private void detach_AmentyLists(AmentyLists entity)
		{
			this.SendPropertyChanging();
			entity.Amenties = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photos")]
	public partial class Photos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _HotelId;
		
		private System.Nullable<int> _ImageTypeId;
		
		private string _Url;
		
		private System.Nullable<int> _Order;
		
		private System.Nullable<bool> _IsActive;
		
		private string _ImageTitle;
		
		private EntityRef<Hotels> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnImageTypeIdChanging(System.Nullable<int> value);
    partial void OnImageTypeIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnImageTitleChanging(string value);
    partial void OnImageTitleChanged();
    #endregion
		
		public Photos()
		{
			this._Hotels = default(EntityRef<Hotels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTypeId", DbType="Int")]
		public System.Nullable<int> ImageTypeId
		{
			get
			{
				return this._ImageTypeId;
			}
			set
			{
				if ((this._ImageTypeId != value))
				{
					this.OnImageTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ImageTypeId = value;
					this.SendPropertyChanged("ImageTypeId");
					this.OnImageTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTitle", DbType="NVarChar(200)")]
		public string ImageTitle
		{
			get
			{
				return this._ImageTitle;
			}
			set
			{
				if ((this._ImageTitle != value))
				{
					this.OnImageTitleChanging(value);
					this.SendPropertyChanging();
					this._ImageTitle = value;
					this.SendPropertyChanged("ImageTitle");
					this.OnImageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_Photos", Storage="_Hotels", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotels Hotels
		{
			get
			{
				return this._Hotels.Entity;
			}
			set
			{
				Hotels previousValue = this._Hotels.Entity;
				if (((previousValue != value) 
							|| (this._Hotels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotels.Entity = null;
						previousValue.Photos.Remove(this);
					}
					this._Hotels.Entity = value;
					if ((value != null))
					{
						value.Photos.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionImages")]
	public partial class SubscriptionImages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubscriptionId;
		
		private string _Url;
		
		private bool _IsCover;
		
		private int _Order;
		
		private bool _IsActive;
		
		private EntityRef<Subscriptions> _Subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubscriptionIdChanging(int value);
    partial void OnSubscriptionIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnIsCoverChanging(bool value);
    partial void OnIsCoverChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public SubscriptionImages()
		{
			this._Subscriptions = default(EntityRef<Subscriptions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="Int NOT NULL")]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					if (this._Subscriptions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
		public bool IsCover
		{
			get
			{
				return this._IsCover;
			}
			set
			{
				if ((this._IsCover != value))
				{
					this.OnIsCoverChanging(value);
					this.SendPropertyChanging();
					this._IsCover = value;
					this.SendPropertyChanged("IsCover");
					this.OnIsCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_SubscriptionImages", Storage="_Subscriptions", ThisKey="SubscriptionId", OtherKey="Id", IsForeignKey=true)]
		public Subscriptions Subscriptions
		{
			get
			{
				return this._Subscriptions.Entity;
			}
			set
			{
				Subscriptions previousValue = this._Subscriptions.Entity;
				if (((previousValue != value) 
							|| (this._Subscriptions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriptions.Entity = null;
						previousValue.SubscriptionImages.Remove(this);
					}
					this._Subscriptions.Entity = value;
					if ((value != null))
					{
						value.SubscriptionImages.Add(this);
						this._SubscriptionId = value.Id;
					}
					else
					{
						this._SubscriptionId = default(int);
					}
					this.SendPropertyChanged("Subscriptions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInfosHotels")]
	public partial class CustomerInfosHotels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private int _HotelId;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
		private EntityRef<Hotels> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    #endregion
		
		public CustomerInfosHotels()
		{
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			this._Hotels = default(EntityRef<Hotels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_CustomerInfosHotels", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.CustomerInfosHotels.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.CustomerInfosHotels.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_CustomerInfosHotels", Storage="_Hotels", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotels Hotels
		{
			get
			{
				return this._Hotels.Entity;
			}
			set
			{
				Hotels previousValue = this._Hotels.Entity;
				if (((previousValue != value) 
							|| (this._Hotels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotels.Entity = null;
						previousValue.CustomerInfosHotels.Remove(this);
					}
					this._Hotels.Entity = value;
					if ((value != null))
					{
						value.CustomerInfosHotels.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubscriptionBookings")]
	public partial class SubscriptionBookings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubscriptionId;
		
		private string _BookingCode;
		
		private double _Price;
		
		private double _MerchantPrice;
		
		private double _PayByCredit;
		
		private double _TotalPrice;
		
		private string _StripeSubscriptionId;
		
		private string _StripeCouponId;
		
		private int _Quantity;
		
		private System.DateTime _BookedDate;
		
		private System.Nullable<System.DateTime> _ActivedDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private int _Status;
		
		private int _CustomerId;
		
		private System.DateTime _LastUpdatedDate;
		
		private int _LastUpdatedBy;
		
		private EntitySet<SubscriptionCycles> _SubscriptionCycles;
		
		private EntitySet<SubscriptionBookingDiscounts> _SubscriptionBookingDiscounts;
		
		private EntitySet<SubsciptionDiscountUseds> _SubsciptionDiscountUseds;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
		private EntityRef<Subscriptions> _Subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubscriptionIdChanging(int value);
    partial void OnSubscriptionIdChanged();
    partial void OnBookingCodeChanging(string value);
    partial void OnBookingCodeChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnMerchantPriceChanging(double value);
    partial void OnMerchantPriceChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnStripeSubscriptionIdChanging(string value);
    partial void OnStripeSubscriptionIdChanged();
    partial void OnStripeCouponIdChanging(string value);
    partial void OnStripeCouponIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnBookedDateChanging(System.DateTime value);
    partial void OnBookedDateChanged();
    partial void OnActivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivedDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public SubscriptionBookings()
		{
			this._SubscriptionCycles = new EntitySet<SubscriptionCycles>(new Action<SubscriptionCycles>(this.attach_SubscriptionCycles), new Action<SubscriptionCycles>(this.detach_SubscriptionCycles));
			this._SubscriptionBookingDiscounts = new EntitySet<SubscriptionBookingDiscounts>(new Action<SubscriptionBookingDiscounts>(this.attach_SubscriptionBookingDiscounts), new Action<SubscriptionBookingDiscounts>(this.detach_SubscriptionBookingDiscounts));
			this._SubsciptionDiscountUseds = new EntitySet<SubsciptionDiscountUseds>(new Action<SubsciptionDiscountUseds>(this.attach_SubsciptionDiscountUseds), new Action<SubsciptionDiscountUseds>(this.detach_SubsciptionDiscountUseds));
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			this._Subscriptions = default(EntityRef<Subscriptions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="Int NOT NULL")]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					if (this._Subscriptions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingCode", DbType="NVarChar(12)")]
		public string BookingCode
		{
			get
			{
				return this._BookingCode;
			}
			set
			{
				if ((this._BookingCode != value))
				{
					this.OnBookingCodeChanging(value);
					this.SendPropertyChanging();
					this._BookingCode = value;
					this.SendPropertyChanged("BookingCode");
					this.OnBookingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantPrice", DbType="Float NOT NULL")]
		public double MerchantPrice
		{
			get
			{
				return this._MerchantPrice;
			}
			set
			{
				if ((this._MerchantPrice != value))
				{
					this.OnMerchantPriceChanging(value);
					this.SendPropertyChanging();
					this._MerchantPrice = value;
					this.SendPropertyChanged("MerchantPrice");
					this.OnMerchantPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeSubscriptionId", DbType="NVarChar(50)")]
		public string StripeSubscriptionId
		{
			get
			{
				return this._StripeSubscriptionId;
			}
			set
			{
				if ((this._StripeSubscriptionId != value))
				{
					this.OnStripeSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._StripeSubscriptionId = value;
					this.SendPropertyChanged("StripeSubscriptionId");
					this.OnStripeSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeCouponId", DbType="NVarChar(50)")]
		public string StripeCouponId
		{
			get
			{
				return this._StripeCouponId;
			}
			set
			{
				if ((this._StripeCouponId != value))
				{
					this.OnStripeCouponIdChanging(value);
					this.SendPropertyChanging();
					this._StripeCouponId = value;
					this.SendPropertyChanged("StripeCouponId");
					this.OnStripeCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="DateTime NOT NULL")]
		public System.DateTime BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivedDate
		{
			get
			{
				return this._ActivedDate;
			}
			set
			{
				if ((this._ActivedDate != value))
				{
					this.OnActivedDateChanging(value);
					this.SendPropertyChanging();
					this._ActivedDate = value;
					this.SendPropertyChanged("ActivedDate");
					this.OnActivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionBookings_SubscriptionCycles", Storage="_SubscriptionCycles", ThisKey="Id", OtherKey="SubscriptionBookingId")]
		public EntitySet<SubscriptionCycles> SubscriptionCycles
		{
			get
			{
				return this._SubscriptionCycles;
			}
			set
			{
				this._SubscriptionCycles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionBookings_SubscriptionBookingDiscounts", Storage="_SubscriptionBookingDiscounts", ThisKey="Id", OtherKey="SubscriptionBookingId")]
		public EntitySet<SubscriptionBookingDiscounts> SubscriptionBookingDiscounts
		{
			get
			{
				return this._SubscriptionBookingDiscounts;
			}
			set
			{
				this._SubscriptionBookingDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubscriptionBookings_SubsciptionDiscountUseds", Storage="_SubsciptionDiscountUseds", ThisKey="Id", OtherKey="SubscriptionBookingId")]
		public EntitySet<SubsciptionDiscountUseds> SubsciptionDiscountUseds
		{
			get
			{
				return this._SubsciptionDiscountUseds;
			}
			set
			{
				this._SubsciptionDiscountUseds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_SubscriptionBookings", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.SubscriptionBookings.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.SubscriptionBookings.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_SubscriptionBookings", Storage="_Subscriptions", ThisKey="SubscriptionId", OtherKey="Id", IsForeignKey=true)]
		public Subscriptions Subscriptions
		{
			get
			{
				return this._Subscriptions.Entity;
			}
			set
			{
				Subscriptions previousValue = this._Subscriptions.Entity;
				if (((previousValue != value) 
							|| (this._Subscriptions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriptions.Entity = null;
						previousValue.SubscriptionBookings.Remove(this);
					}
					this._Subscriptions.Entity = value;
					if ((value != null))
					{
						value.SubscriptionBookings.Add(this);
						this._SubscriptionId = value.Id;
					}
					else
					{
						this._SubscriptionId = default(int);
					}
					this.SendPropertyChanged("Subscriptions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubscriptionCycles(SubscriptionCycles entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionBookings = this;
		}
		
		private void detach_SubscriptionCycles(SubscriptionCycles entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionBookings = null;
		}
		
		private void attach_SubscriptionBookingDiscounts(SubscriptionBookingDiscounts entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionBookings = this;
		}
		
		private void detach_SubscriptionBookingDiscounts(SubscriptionBookingDiscounts entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionBookings = null;
		}
		
		private void attach_SubsciptionDiscountUseds(SubsciptionDiscountUseds entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionBookings = this;
		}
		
		private void detach_SubsciptionDiscountUseds(SubsciptionDiscountUseds entity)
		{
			this.SendPropertyChanging();
			entity.SubscriptionBookings = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelPolicies")]
	public partial class HotelPolicies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PolicyId;
		
		private int _HotelId;
		
		private int _ProductId;
		
		private int _Order;
		
		private EntityRef<Policies> _Policies;
		
		private EntityRef<Hotels> _Hotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPolicyIdChanging(int value);
    partial void OnPolicyIdChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public HotelPolicies()
		{
			this._Policies = default(EntityRef<Policies>);
			this._Hotels = default(EntityRef<Hotels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyId", DbType="Int NOT NULL")]
		public int PolicyId
		{
			get
			{
				return this._PolicyId;
			}
			set
			{
				if ((this._PolicyId != value))
				{
					if (this._Policies.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPolicyIdChanging(value);
					this.SendPropertyChanging();
					this._PolicyId = value;
					this.SendPropertyChanged("PolicyId");
					this.OnPolicyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Policies_HotelPolicies", Storage="_Policies", ThisKey="PolicyId", OtherKey="Id", IsForeignKey=true)]
		public Policies Policies
		{
			get
			{
				return this._Policies.Entity;
			}
			set
			{
				Policies previousValue = this._Policies.Entity;
				if (((previousValue != value) 
							|| (this._Policies.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Policies.Entity = null;
						previousValue.HotelPolicies.Remove(this);
					}
					this._Policies.Entity = value;
					if ((value != null))
					{
						value.HotelPolicies.Add(this);
						this._PolicyId = value.Id;
					}
					else
					{
						this._PolicyId = default(int);
					}
					this.SendPropertyChanged("Policies");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_HotelPolicies", Storage="_Hotels", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotels Hotels
		{
			get
			{
				return this._Hotels.Entity;
			}
			set
			{
				Hotels previousValue = this._Hotels.Entity;
				if (((previousValue != value) 
							|| (this._Hotels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotels.Entity = null;
						previousValue.HotelPolicies.Remove(this);
					}
					this._Hotels.Entity = value;
					if ((value != null))
					{
						value.HotelPolicies.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftCardBookings")]
	public partial class GiftCardBookings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CustomerId;
		
		private int _GiftCardId;
		
		private bool _IsDelete;
		
		private double _Price;
		
		private double _PayByCredit;
		
		private double _TotalPrice;
		
		private string _StripeChargeId;
		
		private System.DateTime _BookedDate;
		
		private string _RecipientEmail;
		
		private string _RecipientName;
		
		private string _Message;
		
		private System.DateTime _DeliveryDate;
		
		private bool _IsSend;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.DateTime _LastUpdatedDate;
		
		private int _LastUpdatedBy;
		
		private double _UserBookedDate;
		
		private string _StripeOrderId;
		
		private string _TransactionId;
		
		private EntityRef<CustomerInfos> _CustomerInfos;
		
		private EntityRef<GiftCards> _GiftCards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnGiftCardIdChanging(int value);
    partial void OnGiftCardIdChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnPayByCreditChanging(double value);
    partial void OnPayByCreditChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnStripeChargeIdChanging(string value);
    partial void OnStripeChargeIdChanged();
    partial void OnBookedDateChanging(System.DateTime value);
    partial void OnBookedDateChanged();
    partial void OnRecipientEmailChanging(string value);
    partial void OnRecipientEmailChanged();
    partial void OnRecipientNameChanging(string value);
    partial void OnRecipientNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnIsSendChanging(bool value);
    partial void OnIsSendChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    partial void OnUserBookedDateChanging(double value);
    partial void OnUserBookedDateChanged();
    partial void OnStripeOrderIdChanging(string value);
    partial void OnStripeOrderIdChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    #endregion
		
		public GiftCardBookings()
		{
			this._CustomerInfos = default(EntityRef<CustomerInfos>);
			this._GiftCards = default(EntityRef<GiftCards>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._CustomerInfos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCardId", DbType="Int NOT NULL")]
		public int GiftCardId
		{
			get
			{
				return this._GiftCardId;
			}
			set
			{
				if ((this._GiftCardId != value))
				{
					if (this._GiftCards.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGiftCardIdChanging(value);
					this.SendPropertyChanging();
					this._GiftCardId = value;
					this.SendPropertyChanged("GiftCardId");
					this.OnGiftCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayByCredit", DbType="Float NOT NULL")]
		public double PayByCredit
		{
			get
			{
				return this._PayByCredit;
			}
			set
			{
				if ((this._PayByCredit != value))
				{
					this.OnPayByCreditChanging(value);
					this.SendPropertyChanging();
					this._PayByCredit = value;
					this.SendPropertyChanged("PayByCredit");
					this.OnPayByCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeChargeId", DbType="NVarChar(50)")]
		public string StripeChargeId
		{
			get
			{
				return this._StripeChargeId;
			}
			set
			{
				if ((this._StripeChargeId != value))
				{
					this.OnStripeChargeIdChanging(value);
					this.SendPropertyChanging();
					this._StripeChargeId = value;
					this.SendPropertyChanged("StripeChargeId");
					this.OnStripeChargeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="DateTime NOT NULL")]
		public System.DateTime BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientEmail", DbType="NVarChar(200)")]
		public string RecipientEmail
		{
			get
			{
				return this._RecipientEmail;
			}
			set
			{
				if ((this._RecipientEmail != value))
				{
					this.OnRecipientEmailChanging(value);
					this.SendPropertyChanging();
					this._RecipientEmail = value;
					this.SendPropertyChanged("RecipientEmail");
					this.OnRecipientEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientName", DbType="NVarChar(200)")]
		public string RecipientName
		{
			get
			{
				return this._RecipientName;
			}
			set
			{
				if ((this._RecipientName != value))
				{
					this.OnRecipientNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientName = value;
					this.SendPropertyChanged("RecipientName");
					this.OnRecipientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSend", DbType="Bit NOT NULL")]
		public bool IsSend
		{
			get
			{
				return this._IsSend;
			}
			set
			{
				if ((this._IsSend != value))
				{
					this.OnIsSendChanging(value);
					this.SendPropertyChanging();
					this._IsSend = value;
					this.SendPropertyChanged("IsSend");
					this.OnIsSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBookedDate", DbType="Float NOT NULL")]
		public double UserBookedDate
		{
			get
			{
				return this._UserBookedDate;
			}
			set
			{
				if ((this._UserBookedDate != value))
				{
					this.OnUserBookedDateChanging(value);
					this.SendPropertyChanging();
					this._UserBookedDate = value;
					this.SendPropertyChanged("UserBookedDate");
					this.OnUserBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StripeOrderId", DbType="NVarChar(255)")]
		public string StripeOrderId
		{
			get
			{
				return this._StripeOrderId;
			}
			set
			{
				if ((this._StripeOrderId != value))
				{
					this.OnStripeOrderIdChanging(value);
					this.SendPropertyChanging();
					this._StripeOrderId = value;
					this.SendPropertyChanged("StripeOrderId");
					this.OnStripeOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="NVarChar(255)")]
		public string TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfos_GiftCardBookings", Storage="_CustomerInfos", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public CustomerInfos CustomerInfos
		{
			get
			{
				return this._CustomerInfos.Entity;
			}
			set
			{
				CustomerInfos previousValue = this._CustomerInfos.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfos.Entity = null;
						previousValue.GiftCardBookings.Remove(this);
					}
					this._CustomerInfos.Entity = value;
					if ((value != null))
					{
						value.GiftCardBookings.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("CustomerInfos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCards_GiftCardBookings", Storage="_GiftCards", ThisKey="GiftCardId", OtherKey="Id", IsForeignKey=true)]
		public GiftCards GiftCards
		{
			get
			{
				return this._GiftCards.Entity;
			}
			set
			{
				GiftCards previousValue = this._GiftCards.Entity;
				if (((previousValue != value) 
							|| (this._GiftCards.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiftCards.Entity = null;
						previousValue.GiftCardBookings.Remove(this);
					}
					this._GiftCards.Entity = value;
					if ((value != null))
					{
						value.GiftCardBookings.Add(this);
						this._GiftCardId = value.Id;
					}
					else
					{
						this._GiftCardId = default(int);
					}
					this.SendPropertyChanged("GiftCards");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftCards")]
	public partial class GiftCards : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private double _Amount;
		
		private bool _IsDelete;
		
		private short _Status;
		
		private EntitySet<GiftCardBookings> _GiftCardBookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    #endregion
		
		public GiftCards()
		{
			this._GiftCardBookings = new EntitySet<GiftCardBookings>(new Action<GiftCardBookings>(this.attach_GiftCardBookings), new Action<GiftCardBookings>(this.detach_GiftCardBookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiftCards_GiftCardBookings", Storage="_GiftCardBookings", ThisKey="Id", OtherKey="GiftCardId")]
		public EntitySet<GiftCardBookings> GiftCardBookings
		{
			get
			{
				return this._GiftCardBookings;
			}
			set
			{
				this._GiftCardBookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiftCardBookings(GiftCardBookings entity)
		{
			this.SendPropertyChanging();
			entity.GiftCards = this;
		}
		
		private void detach_GiftCardBookings(GiftCardBookings entity)
		{
			this.SendPropertyChanging();
			entity.GiftCards = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiscountSubscriptions")]
	public partial class DiscountSubscriptions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountId;
		
		private int _SubscriptionId;
		
		private EntityRef<Discounts> _Discounts;
		
		private EntityRef<Subscriptions> _Subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnSubscriptionIdChanging(int value);
    partial void OnSubscriptionIdChanged();
    #endregion
		
		public DiscountSubscriptions()
		{
			this._Discounts = default(EntityRef<Discounts>);
			this._Subscriptions = default(EntityRef<Subscriptions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._Discounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubscriptionId
		{
			get
			{
				return this._SubscriptionId;
			}
			set
			{
				if ((this._SubscriptionId != value))
				{
					if (this._Subscriptions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIdChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionId = value;
					this.SendPropertyChanged("SubscriptionId");
					this.OnSubscriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discounts_DiscountSubscriptions", Storage="_Discounts", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public Discounts Discounts
		{
			get
			{
				return this._Discounts.Entity;
			}
			set
			{
				Discounts previousValue = this._Discounts.Entity;
				if (((previousValue != value) 
							|| (this._Discounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discounts.Entity = null;
						previousValue.DiscountSubscriptions.Remove(this);
					}
					this._Discounts.Entity = value;
					if ((value != null))
					{
						value.DiscountSubscriptions.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("Discounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscriptions_DiscountSubscriptions", Storage="_Subscriptions", ThisKey="SubscriptionId", OtherKey="Id", IsForeignKey=true)]
		public Subscriptions Subscriptions
		{
			get
			{
				return this._Subscriptions.Entity;
			}
			set
			{
				Subscriptions previousValue = this._Subscriptions.Entity;
				if (((previousValue != value) 
							|| (this._Subscriptions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscriptions.Entity = null;
						previousValue.DiscountSubscriptions.Remove(this);
					}
					this._Subscriptions.Entity = value;
					if ((value != null))
					{
						value.DiscountSubscriptions.Add(this);
						this._SubscriptionId = value.Id;
					}
					else
					{
						this._SubscriptionId = default(int);
					}
					this.SendPropertyChanged("Subscriptions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotels")]
	public partial class Hotels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HotelId;
		
		private string _HotelName;
		
		private string _Neighborhood;
		
		private System.Nullable<double> _TripAdvisorRating;
		
		private string _HotelPinCode;
		
		private string _HotelDiscountCode;
		
		private string _StreetAddress;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _PhoneNumber;
		
		private string _GeneralHours;
		
		private string _Recommendation;
		
		private System.Nullable<int> _Order;
		
		private bool _IsActive;
		
		private bool _IsDelete;
		
		private System.Nullable<int> _HoteltypeId;
		
		private int _PassCapacity;
		
		private string _Income;
		
		private string _Distance;
		
		private int _AgeFrom;
		
		private int _AgeTo;
		
		private string _TargetGroups;
		
		private string _Gender;
		
		private string _Education;
		
		private double _HotelDiscountPercent;
		
		private string _HotelDiscountDisclaimer;
		
		private System.Nullable<bool> _IsComingSoon;
		
		private bool _IsPublished;
		
		private string _TermsAndConditions;
		
		private string _BookingConfirmationEmail;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _CheckInPlace;
		
		private short _DailyPassSale;
		
		private string _BookingConfirmationCabanaEmail;
		
		private string _BookingConfirmationSpaEmail;
		
		private string _HotelParking;
		
		private string _ReportSubscribers;
		
		private string _TimeZoneId;
		
		private short _TimeZoneOffset;
		
		private string _TripAdvisorScript;
		
		private string _IGHashtags;
		
		private string _IGHandle;
		
		private EntitySet<MarketHotels> _MarketHotels;
		
		private EntitySet<Products> _Products;
		
		private EntitySet<Amenties> _Amenties;
		
		private EntitySet<Photos> _Photos;
		
		private EntitySet<CustomerInfosHotels> _CustomerInfosHotels;
		
		private EntitySet<HotelPolicies> _HotelPolicies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnHotelNameChanging(string value);
    partial void OnHotelNameChanged();
    partial void OnNeighborhoodChanging(string value);
    partial void OnNeighborhoodChanged();
    partial void OnTripAdvisorRatingChanging(System.Nullable<double> value);
    partial void OnTripAdvisorRatingChanged();
    partial void OnHotelPinCodeChanging(string value);
    partial void OnHotelPinCodeChanged();
    partial void OnHotelDiscountCodeChanging(string value);
    partial void OnHotelDiscountCodeChanged();
    partial void OnStreetAddressChanging(string value);
    partial void OnStreetAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnGeneralHoursChanging(string value);
    partial void OnGeneralHoursChanged();
    partial void OnRecommendationChanging(string value);
    partial void OnRecommendationChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnHoteltypeIdChanging(System.Nullable<int> value);
    partial void OnHoteltypeIdChanged();
    partial void OnPassCapacityChanging(int value);
    partial void OnPassCapacityChanged();
    partial void OnIncomeChanging(string value);
    partial void OnIncomeChanged();
    partial void OnDistanceChanging(string value);
    partial void OnDistanceChanged();
    partial void OnAgeFromChanging(int value);
    partial void OnAgeFromChanged();
    partial void OnAgeToChanging(int value);
    partial void OnAgeToChanged();
    partial void OnTargetGroupsChanging(string value);
    partial void OnTargetGroupsChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnHotelDiscountPercentChanging(double value);
    partial void OnHotelDiscountPercentChanged();
    partial void OnHotelDiscountDisclaimerChanging(string value);
    partial void OnHotelDiscountDisclaimerChanged();
    partial void OnIsComingSoonChanging(System.Nullable<bool> value);
    partial void OnIsComingSoonChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnTermsAndConditionsChanging(string value);
    partial void OnTermsAndConditionsChanged();
    partial void OnBookingConfirmationEmailChanging(string value);
    partial void OnBookingConfirmationEmailChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnCheckInPlaceChanging(string value);
    partial void OnCheckInPlaceChanged();
    partial void OnDailyPassSaleChanging(short value);
    partial void OnDailyPassSaleChanged();
    partial void OnBookingConfirmationCabanaEmailChanging(string value);
    partial void OnBookingConfirmationCabanaEmailChanged();
    partial void OnBookingConfirmationSpaEmailChanging(string value);
    partial void OnBookingConfirmationSpaEmailChanged();
    partial void OnHotelParkingChanging(string value);
    partial void OnHotelParkingChanged();
    partial void OnReportSubscribersChanging(string value);
    partial void OnReportSubscribersChanged();
    partial void OnTimeZoneIdChanging(string value);
    partial void OnTimeZoneIdChanged();
    partial void OnTimeZoneOffsetChanging(short value);
    partial void OnTimeZoneOffsetChanged();
    partial void OnTripAdvisorScriptChanging(string value);
    partial void OnTripAdvisorScriptChanged();
    partial void OnIGHashtagsChanging(string value);
    partial void OnIGHashtagsChanged();
    partial void OnIGHandleChanging(string value);
    partial void OnIGHandleChanged();
    #endregion
		
		public Hotels()
		{
			this._MarketHotels = new EntitySet<MarketHotels>(new Action<MarketHotels>(this.attach_MarketHotels), new Action<MarketHotels>(this.detach_MarketHotels));
			this._Products = new EntitySet<Products>(new Action<Products>(this.attach_Products), new Action<Products>(this.detach_Products));
			this._Amenties = new EntitySet<Amenties>(new Action<Amenties>(this.attach_Amenties), new Action<Amenties>(this.detach_Amenties));
			this._Photos = new EntitySet<Photos>(new Action<Photos>(this.attach_Photos), new Action<Photos>(this.detach_Photos));
			this._CustomerInfosHotels = new EntitySet<CustomerInfosHotels>(new Action<CustomerInfosHotels>(this.attach_CustomerInfosHotels), new Action<CustomerInfosHotels>(this.detach_CustomerInfosHotels));
			this._HotelPolicies = new EntitySet<HotelPolicies>(new Action<HotelPolicies>(this.attach_HotelPolicies), new Action<HotelPolicies>(this.detach_HotelPolicies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelName", DbType="NVarChar(200)")]
		public string HotelName
		{
			get
			{
				return this._HotelName;
			}
			set
			{
				if ((this._HotelName != value))
				{
					this.OnHotelNameChanging(value);
					this.SendPropertyChanging();
					this._HotelName = value;
					this.SendPropertyChanged("HotelName");
					this.OnHotelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neighborhood", DbType="NVarChar(200)")]
		public string Neighborhood
		{
			get
			{
				return this._Neighborhood;
			}
			set
			{
				if ((this._Neighborhood != value))
				{
					this.OnNeighborhoodChanging(value);
					this.SendPropertyChanging();
					this._Neighborhood = value;
					this.SendPropertyChanged("Neighborhood");
					this.OnNeighborhoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripAdvisorRating", DbType="Float")]
		public System.Nullable<double> TripAdvisorRating
		{
			get
			{
				return this._TripAdvisorRating;
			}
			set
			{
				if ((this._TripAdvisorRating != value))
				{
					this.OnTripAdvisorRatingChanging(value);
					this.SendPropertyChanging();
					this._TripAdvisorRating = value;
					this.SendPropertyChanged("TripAdvisorRating");
					this.OnTripAdvisorRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelPinCode", DbType="NVarChar(20)")]
		public string HotelPinCode
		{
			get
			{
				return this._HotelPinCode;
			}
			set
			{
				if ((this._HotelPinCode != value))
				{
					this.OnHotelPinCodeChanging(value);
					this.SendPropertyChanging();
					this._HotelPinCode = value;
					this.SendPropertyChanged("HotelPinCode");
					this.OnHotelPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelDiscountCode", DbType="NVarChar(200)")]
		public string HotelDiscountCode
		{
			get
			{
				return this._HotelDiscountCode;
			}
			set
			{
				if ((this._HotelDiscountCode != value))
				{
					this.OnHotelDiscountCodeChanging(value);
					this.SendPropertyChanging();
					this._HotelDiscountCode = value;
					this.SendPropertyChanged("HotelDiscountCode");
					this.OnHotelDiscountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="NVarChar(500)")]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this.OnStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._StreetAddress = value;
					this.SendPropertyChanged("StreetAddress");
					this.OnStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralHours", DbType="NVarChar(200)")]
		public string GeneralHours
		{
			get
			{
				return this._GeneralHours;
			}
			set
			{
				if ((this._GeneralHours != value))
				{
					this.OnGeneralHoursChanging(value);
					this.SendPropertyChanging();
					this._GeneralHours = value;
					this.SendPropertyChanged("GeneralHours");
					this.OnGeneralHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recommendation", DbType="NVarChar(MAX)")]
		public string Recommendation
		{
			get
			{
				return this._Recommendation;
			}
			set
			{
				if ((this._Recommendation != value))
				{
					this.OnRecommendationChanging(value);
					this.SendPropertyChanging();
					this._Recommendation = value;
					this.SendPropertyChanged("Recommendation");
					this.OnRecommendationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoteltypeId", DbType="Int")]
		public System.Nullable<int> HoteltypeId
		{
			get
			{
				return this._HoteltypeId;
			}
			set
			{
				if ((this._HoteltypeId != value))
				{
					this.OnHoteltypeIdChanging(value);
					this.SendPropertyChanging();
					this._HoteltypeId = value;
					this.SendPropertyChanged("HoteltypeId");
					this.OnHoteltypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCapacity", DbType="Int NOT NULL")]
		public int PassCapacity
		{
			get
			{
				return this._PassCapacity;
			}
			set
			{
				if ((this._PassCapacity != value))
				{
					this.OnPassCapacityChanging(value);
					this.SendPropertyChanging();
					this._PassCapacity = value;
					this.SendPropertyChanged("PassCapacity");
					this.OnPassCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeFrom", DbType="Int NOT NULL")]
		public int AgeFrom
		{
			get
			{
				return this._AgeFrom;
			}
			set
			{
				if ((this._AgeFrom != value))
				{
					this.OnAgeFromChanging(value);
					this.SendPropertyChanging();
					this._AgeFrom = value;
					this.SendPropertyChanged("AgeFrom");
					this.OnAgeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeTo", DbType="Int NOT NULL")]
		public int AgeTo
		{
			get
			{
				return this._AgeTo;
			}
			set
			{
				if ((this._AgeTo != value))
				{
					this.OnAgeToChanging(value);
					this.SendPropertyChanging();
					this._AgeTo = value;
					this.SendPropertyChanged("AgeTo");
					this.OnAgeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetGroups", DbType="NVarChar(15)")]
		public string TargetGroups
		{
			get
			{
				return this._TargetGroups;
			}
			set
			{
				if ((this._TargetGroups != value))
				{
					this.OnTargetGroupsChanging(value);
					this.SendPropertyChanging();
					this._TargetGroups = value;
					this.SendPropertyChanged("TargetGroups");
					this.OnTargetGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(15)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelDiscountPercent", DbType="Float NOT NULL")]
		public double HotelDiscountPercent
		{
			get
			{
				return this._HotelDiscountPercent;
			}
			set
			{
				if ((this._HotelDiscountPercent != value))
				{
					this.OnHotelDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._HotelDiscountPercent = value;
					this.SendPropertyChanged("HotelDiscountPercent");
					this.OnHotelDiscountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelDiscountDisclaimer", DbType="NVarChar(500)")]
		public string HotelDiscountDisclaimer
		{
			get
			{
				return this._HotelDiscountDisclaimer;
			}
			set
			{
				if ((this._HotelDiscountDisclaimer != value))
				{
					this.OnHotelDiscountDisclaimerChanging(value);
					this.SendPropertyChanging();
					this._HotelDiscountDisclaimer = value;
					this.SendPropertyChanged("HotelDiscountDisclaimer");
					this.OnHotelDiscountDisclaimerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComingSoon", DbType="Bit")]
		public System.Nullable<bool> IsComingSoon
		{
			get
			{
				return this._IsComingSoon;
			}
			set
			{
				if ((this._IsComingSoon != value))
				{
					this.OnIsComingSoonChanging(value);
					this.SendPropertyChanging();
					this._IsComingSoon = value;
					this.SendPropertyChanged("IsComingSoon");
					this.OnIsComingSoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsAndConditions", DbType="NVarChar(255)")]
		public string TermsAndConditions
		{
			get
			{
				return this._TermsAndConditions;
			}
			set
			{
				if ((this._TermsAndConditions != value))
				{
					this.OnTermsAndConditionsChanging(value);
					this.SendPropertyChanging();
					this._TermsAndConditions = value;
					this.SendPropertyChanged("TermsAndConditions");
					this.OnTermsAndConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingConfirmationEmail", DbType="NVarChar(255)")]
		public string BookingConfirmationEmail
		{
			get
			{
				return this._BookingConfirmationEmail;
			}
			set
			{
				if ((this._BookingConfirmationEmail != value))
				{
					this.OnBookingConfirmationEmailChanging(value);
					this.SendPropertyChanging();
					this._BookingConfirmationEmail = value;
					this.SendPropertyChanged("BookingConfirmationEmail");
					this.OnBookingConfirmationEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(20)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(20)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInPlace", DbType="NVarChar(100)")]
		public string CheckInPlace
		{
			get
			{
				return this._CheckInPlace;
			}
			set
			{
				if ((this._CheckInPlace != value))
				{
					this.OnCheckInPlaceChanging(value);
					this.SendPropertyChanging();
					this._CheckInPlace = value;
					this.SendPropertyChanged("CheckInPlace");
					this.OnCheckInPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyPassSale", DbType="SmallInt NOT NULL")]
		public short DailyPassSale
		{
			get
			{
				return this._DailyPassSale;
			}
			set
			{
				if ((this._DailyPassSale != value))
				{
					this.OnDailyPassSaleChanging(value);
					this.SendPropertyChanging();
					this._DailyPassSale = value;
					this.SendPropertyChanged("DailyPassSale");
					this.OnDailyPassSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingConfirmationCabanaEmail", DbType="NVarChar(255)")]
		public string BookingConfirmationCabanaEmail
		{
			get
			{
				return this._BookingConfirmationCabanaEmail;
			}
			set
			{
				if ((this._BookingConfirmationCabanaEmail != value))
				{
					this.OnBookingConfirmationCabanaEmailChanging(value);
					this.SendPropertyChanging();
					this._BookingConfirmationCabanaEmail = value;
					this.SendPropertyChanged("BookingConfirmationCabanaEmail");
					this.OnBookingConfirmationCabanaEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingConfirmationSpaEmail", DbType="NVarChar(255)")]
		public string BookingConfirmationSpaEmail
		{
			get
			{
				return this._BookingConfirmationSpaEmail;
			}
			set
			{
				if ((this._BookingConfirmationSpaEmail != value))
				{
					this.OnBookingConfirmationSpaEmailChanging(value);
					this.SendPropertyChanging();
					this._BookingConfirmationSpaEmail = value;
					this.SendPropertyChanged("BookingConfirmationSpaEmail");
					this.OnBookingConfirmationSpaEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelParking", DbType="NVarChar(500)")]
		public string HotelParking
		{
			get
			{
				return this._HotelParking;
			}
			set
			{
				if ((this._HotelParking != value))
				{
					this.OnHotelParkingChanging(value);
					this.SendPropertyChanging();
					this._HotelParking = value;
					this.SendPropertyChanged("HotelParking");
					this.OnHotelParkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportSubscribers", DbType="NVarChar(1000)")]
		public string ReportSubscribers
		{
			get
			{
				return this._ReportSubscribers;
			}
			set
			{
				if ((this._ReportSubscribers != value))
				{
					this.OnReportSubscribersChanging(value);
					this.SendPropertyChanging();
					this._ReportSubscribers = value;
					this.SendPropertyChanged("ReportSubscribers");
					this.OnReportSubscribersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneId", DbType="VarChar(100)")]
		public string TimeZoneId
		{
			get
			{
				return this._TimeZoneId;
			}
			set
			{
				if ((this._TimeZoneId != value))
				{
					this.OnTimeZoneIdChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneId = value;
					this.SendPropertyChanged("TimeZoneId");
					this.OnTimeZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneOffset", DbType="SmallInt NOT NULL")]
		public short TimeZoneOffset
		{
			get
			{
				return this._TimeZoneOffset;
			}
			set
			{
				if ((this._TimeZoneOffset != value))
				{
					this.OnTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffset = value;
					this.SendPropertyChanged("TimeZoneOffset");
					this.OnTimeZoneOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripAdvisorScript", DbType="NVarChar(3000)")]
		public string TripAdvisorScript
		{
			get
			{
				return this._TripAdvisorScript;
			}
			set
			{
				if ((this._TripAdvisorScript != value))
				{
					this.OnTripAdvisorScriptChanging(value);
					this.SendPropertyChanging();
					this._TripAdvisorScript = value;
					this.SendPropertyChanged("TripAdvisorScript");
					this.OnTripAdvisorScriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGHashtags", DbType="NVarChar(255)")]
		public string IGHashtags
		{
			get
			{
				return this._IGHashtags;
			}
			set
			{
				if ((this._IGHashtags != value))
				{
					this.OnIGHashtagsChanging(value);
					this.SendPropertyChanging();
					this._IGHashtags = value;
					this.SendPropertyChanged("IGHashtags");
					this.OnIGHashtagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGHandle", DbType="NVarChar(255)")]
		public string IGHandle
		{
			get
			{
				return this._IGHandle;
			}
			set
			{
				if ((this._IGHandle != value))
				{
					this.OnIGHandleChanging(value);
					this.SendPropertyChanging();
					this._IGHandle = value;
					this.SendPropertyChanged("IGHandle");
					this.OnIGHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_MarketHotels", Storage="_MarketHotels", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<MarketHotels> MarketHotels
		{
			get
			{
				return this._MarketHotels;
			}
			set
			{
				this._MarketHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_Products", Storage="_Products", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<Products> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_Amenties", Storage="_Amenties", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<Amenties> Amenties
		{
			get
			{
				return this._Amenties;
			}
			set
			{
				this._Amenties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_Photos", Storage="_Photos", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<Photos> Photos
		{
			get
			{
				return this._Photos;
			}
			set
			{
				this._Photos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_CustomerInfosHotels", Storage="_CustomerInfosHotels", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<CustomerInfosHotels> CustomerInfosHotels
		{
			get
			{
				return this._CustomerInfosHotels;
			}
			set
			{
				this._CustomerInfosHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotels_HotelPolicies", Storage="_HotelPolicies", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<HotelPolicies> HotelPolicies
		{
			get
			{
				return this._HotelPolicies;
			}
			set
			{
				this._HotelPolicies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MarketHotels(MarketHotels entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = this;
		}
		
		private void detach_MarketHotels(MarketHotels entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = null;
		}
		
		private void attach_Products(Products entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = this;
		}
		
		private void detach_Products(Products entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = null;
		}
		
		private void attach_Amenties(Amenties entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = this;
		}
		
		private void detach_Amenties(Amenties entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = null;
		}
		
		private void attach_Photos(Photos entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = this;
		}
		
		private void detach_Photos(Photos entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = null;
		}
		
		private void attach_CustomerInfosHotels(CustomerInfosHotels entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = this;
		}
		
		private void detach_CustomerInfosHotels(CustomerInfosHotels entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = null;
		}
		
		private void attach_HotelPolicies(HotelPolicies entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = this;
		}
		
		private void detach_HotelPolicies(HotelPolicies entity)
		{
			this.SendPropertyChanging();
			entity.Hotels = null;
		}
	}
}
#pragma warning restore 1591
